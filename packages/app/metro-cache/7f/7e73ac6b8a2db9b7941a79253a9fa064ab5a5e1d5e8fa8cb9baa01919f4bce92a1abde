{"dependencies":[{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"Map","data":{"isAsync":false}},{"name":"_shouldPolyfillES6Collection","data":{"isAsync":false}},{"name":"toIterator","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/classCallCheck\");\n\n  var _createClass = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/createClass\");\n\n  var Map = _$$_REQUIRE(_dependencyMap[2], \"Map\");\n\n  var _shouldPolyfillES6Collection = _$$_REQUIRE(_dependencyMap[3], \"_shouldPolyfillES6Collection\");\n\n  var toIterator = _$$_REQUIRE(_dependencyMap[4], \"toIterator\");\n\n  module.exports = function (global) {\n    if (!_shouldPolyfillES6Collection('Set')) {\n      return global.Set;\n    }\n\n    var Set = function () {\n      function Set(iterable) {\n        _classCallCheck(this, Set);\n\n        if (this == null || typeof this !== 'object' && typeof this !== 'function') {\n          throw new TypeError('Wrong set object type.');\n        }\n\n        initSet(this);\n\n        if (iterable != null) {\n          var it = toIterator(iterable);\n          var next;\n\n          while (!(next = it.next()).done) {\n            this.add(next.value);\n          }\n        }\n      }\n\n      _createClass(Set, [{\n        key: \"add\",\n        value: function add(value) {\n          this._map.set(value, value);\n\n          this.size = this._map.size;\n          return this;\n        }\n      }, {\n        key: \"clear\",\n        value: function clear() {\n          initSet(this);\n        }\n      }, {\n        key: \"delete\",\n        value: function _delete(value) {\n          var ret = this._map.delete(value);\n\n          this.size = this._map.size;\n          return ret;\n        }\n      }, {\n        key: \"entries\",\n        value: function entries() {\n          return this._map.entries();\n        }\n      }, {\n        key: \"forEach\",\n        value: function forEach(callback) {\n          var thisArg = arguments[1];\n\n          var it = this._map.keys();\n\n          var next;\n\n          while (!(next = it.next()).done) {\n            callback.call(thisArg, next.value, next.value, this);\n          }\n        }\n      }, {\n        key: \"has\",\n        value: function has(value) {\n          return this._map.has(value);\n        }\n      }, {\n        key: \"values\",\n        value: function values() {\n          return this._map.values();\n        }\n      }]);\n\n      return Set;\n    }();\n\n    Set.prototype[toIterator.ITERATOR_SYMBOL] = Set.prototype.values;\n    Set.prototype.keys = Set.prototype.values;\n\n    function initSet(set) {\n      set._map = new Map();\n      set.size = set._map.size;\n    }\n\n    return Set;\n  }(Function('return this')());\n});","map":[[2,0,14,0],[8,0,16,0],[8,6,16,6,"Map"],[8,9,16,9],[8,12,16,12,"require"],[8,23,16,19],[8,49,16,0],[10,0,18,0],[10,6,18,6,"_shouldPolyfillES6Collection"],[10,34,18,34],[10,37,18,37,"require"],[10,48,18,44],[10,99,18,0],[12,0,19,0],[12,6,19,6,"toIterator"],[12,16,19,16],[12,19,19,19,"require"],[12,30,19,26],[12,63,19,0],[14,0,21,0,"module"],[14,2,21,0,"module"],[14,8,21,6],[14,9,21,7,"exports"],[14,16,21,0],[14,19,21,18],[14,29,21,27,"global"],[14,35,21,18],[14,37,21,35],[15,0,27,2],[15,8,27,6],[15,9,27,7,"_shouldPolyfillES6Collection"],[15,37,27,35],[15,38,27,36],[15,43,27,35],[15,44,27,2],[15,46,27,44],[16,0,28,4],[16,13,28,11,"global"],[16,19,28,17],[16,20,28,18,"Set"],[16,23,28,4],[17,0,29,3],[19,0,21,35],[19,8,72,8,"Set"],[19,11,21,35],[20,0,82,4],[20,19,82,16,"iterable"],[20,27,82,4],[20,29,82,26],[21,0,82,26],[23,0,83,6],[23,12,84,8],[23,20,84,16],[23,24,84,8],[23,28,85,9],[23,35,85,16],[23,39,85,9],[23,44,85,25],[23,52,85,9],[23,56,85,37],[23,63,85,44],[23,67,85,37],[23,72,85,53],[23,82,83,6],[23,84,86,8],[24,0,87,8],[24,16,87,14],[24,20,87,18,"TypeError"],[24,29,87,14],[24,30,87,28],[24,54,87,14],[24,55,87,8],[25,0,88,7],[27,0,90,6,"initSet"],[27,8,90,6,"initSet"],[27,15,90,13],[27,16,90,14],[27,20,90,13],[27,21,90,6],[29,0,92,6],[29,12,92,10,"iterable"],[29,20,92,18],[29,24,92,22],[29,28,92,6],[29,30,92,28],[30,0,93,8],[30,14,93,14,"it"],[30,16,93,16],[30,19,93,19,"toIterator"],[30,29,93,29],[30,30,93,30,"iterable"],[30,38,93,29],[30,39,93,8],[31,0,94,8],[31,14,94,12,"next"],[31,18,94,8],[33,0,95,8],[33,17,95,15],[33,18,95,16],[33,19,95,17,"next"],[33,23,95,21],[33,26,95,24,"it"],[33,28,95,26],[33,29,95,27,"next"],[33,33,95,24],[33,35,95,16],[33,37,95,35,"done"],[33,41,95,8],[33,43,95,41],[34,0,96,10],[34,17,96,15,"add"],[34,20,96,10],[34,21,96,19,"next"],[34,25,96,23],[34,26,96,24,"value"],[34,31,96,10],[35,0,97,9],[36,0,98,7],[37,0,99,5],[39,0,21,35],[40,0,21,35],[41,0,21,35],[41,28,109,8,"value"],[41,33,21,35],[41,35,109,15],[42,0,110,6],[42,15,110,11,"_map"],[42,19,110,6],[42,20,110,16,"set"],[42,23,110,6],[42,24,110,20,"value"],[42,29,110,6],[42,31,110,27,"value"],[42,36,110,6],[44,0,111,6],[44,15,111,11,"size"],[44,19,111,6],[44,22,111,18],[44,27,111,23,"_map"],[44,31,111,18],[44,32,111,28,"size"],[44,36,111,6],[45,0,112,6],[45,17,112,13],[45,21,112,6],[46,0,113,5],[47,0,21,35],[48,0,21,35],[49,0,21,35],[49,32,120,12],[50,0,121,6,"initSet"],[50,10,121,6,"initSet"],[50,17,121,13],[50,18,121,14],[50,22,121,13],[50,23,121,6],[51,0,122,5],[52,0,21,35],[53,0,21,35],[54,0,21,35],[54,32,133,11,"value"],[54,37,21,35],[54,39,133,18],[55,0,134,6],[55,14,134,12,"ret"],[55,17,134,15],[55,20,134,18],[55,25,134,23,"_map"],[55,29,134,18],[55,30,134,28,"delete"],[55,36,134,18],[55,37,134,35,"value"],[55,42,134,18],[55,43,134,6],[57,0,135,6],[57,15,135,11,"size"],[57,19,135,6],[57,22,135,18],[57,27,135,23,"_map"],[57,31,135,18],[57,32,135,28,"size"],[57,36,135,6],[58,0,136,6],[58,17,136,13,"ret"],[58,20,136,6],[59,0,137,5],[60,0,21,35],[61,0,21,35],[62,0,21,35],[62,34,144,14],[63,0,145,6],[63,17,145,13],[63,22,145,18,"_map"],[63,26,145,13],[63,27,145,23,"entries"],[63,34,145,13],[63,36,145,6],[64,0,146,5],[65,0,21,35],[66,0,21,35],[67,0,21,35],[67,32,155,12,"callback"],[67,40,21,35],[67,42,155,22],[68,0,156,6],[68,14,156,12,"thisArg"],[68,21,156,19],[68,24,156,22,"arguments"],[68,33,156,31],[68,34,156,32],[68,35,156,31],[68,36,156,6],[70,0,157,6],[70,14,157,12,"it"],[70,16,157,14],[70,19,157,17],[70,24,157,22,"_map"],[70,28,157,17],[70,29,157,27,"keys"],[70,33,157,17],[70,35,157,6],[72,0,158,6],[72,14,158,10,"next"],[72,18,158,6],[74,0,159,6],[74,17,159,13],[74,18,159,14],[74,19,159,15,"next"],[74,23,159,19],[74,26,159,22,"it"],[74,28,159,24],[74,29,159,25,"next"],[74,33,159,22],[74,35,159,14],[74,37,159,33,"done"],[74,41,159,6],[74,43,159,39],[75,0,160,8,"callback"],[75,12,160,8,"callback"],[75,20,160,16],[75,21,160,17,"call"],[75,25,160,8],[75,26,160,22,"thisArg"],[75,33,160,8],[75,35,160,31,"next"],[75,39,160,35],[75,40,160,36,"value"],[75,45,160,8],[75,47,160,43,"next"],[75,51,160,47],[75,52,160,48,"value"],[75,57,160,8],[75,59,160,55],[75,63,160,8],[76,0,161,7],[77,0,162,5],[78,0,21,35],[79,0,21,35],[80,0,21,35],[80,28,172,8,"value"],[80,33,21,35],[80,35,172,15],[81,0,173,6],[81,17,173,13],[81,22,173,18,"_map"],[81,26,173,13],[81,27,173,23,"has"],[81,30,173,13],[81,31,173,27,"value"],[81,36,173,13],[81,37,173,6],[82,0,174,5],[83,0,21,35],[84,0,21,35],[85,0,21,35],[85,33,181,13],[86,0,182,6],[86,17,182,13],[86,22,182,18,"_map"],[86,26,182,13],[86,27,182,23,"values"],[86,33,182,13],[86,35,182,6],[87,0,183,5],[88,0,21,35],[90,0,21,35],[91,0,21,35],[93,0,187,2,"Set"],[93,4,187,2,"Set"],[93,7,187,5],[93,8,187,6,"prototype"],[93,17,187,2],[93,18,187,16,"toIterator"],[93,28,187,26],[93,29,187,27,"ITERATOR_SYMBOL"],[93,44,187,2],[93,48,187,46,"Set"],[93,51,187,49],[93,52,187,50,"prototype"],[93,61,187,46],[93,62,187,60,"values"],[93,68,187,2],[94,0,190,2,"Set"],[94,4,190,2,"Set"],[94,7,190,5],[94,8,190,6,"prototype"],[94,17,190,2],[94,18,190,16,"keys"],[94,22,190,2],[94,25,190,23,"Set"],[94,28,190,26],[94,29,190,27,"prototype"],[94,38,190,23],[94,39,190,37,"values"],[94,45,190,2],[96,0,192,2],[96,13,192,11,"initSet"],[96,20,192,2],[96,21,192,19,"set"],[96,24,192,2],[96,26,192,24],[97,0,193,4,"set"],[97,6,193,4,"set"],[97,9,193,7],[97,10,193,8,"_map"],[97,14,193,4],[97,17,193,15],[97,21,193,19,"Map"],[97,24,193,15],[97,26,193,4],[98,0,194,4,"set"],[98,6,194,4,"set"],[98,9,194,7],[98,10,194,8,"size"],[98,14,194,4],[98,17,194,15,"set"],[98,20,194,18],[98,21,194,19,"_map"],[98,25,194,15],[98,26,194,24,"size"],[98,30,194,4],[99,0,195,3],[101,0,197,2],[101,11,197,9,"Set"],[101,14,197,2],[102,0,198,1],[102,3,21,17],[102,4,198,3,"Function"],[102,12,198,11],[102,13,198,12],[102,26,198,11],[102,27,198,3],[102,29,21,17],[102,30,21,0]]},"type":"js/module"}]}