{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"react-is","data":{"isAsync":false}},{"name":"../utils/invariant","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = getScreenForRouteName;\n\n  var _reactIs = _$$_REQUIRE(_dependencyMap[1], \"react-is\");\n\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"../utils/invariant\"));\n\n  function getScreenForRouteName(routeConfigs, routeName) {\n    var routeConfig = routeConfigs[routeName];\n\n    if (!routeConfig) {\n      throw new Error(\"There is no route defined for key \" + routeName + \".\\n\" + (\"Must be one of: \" + Object.keys(routeConfigs).map(function (a) {\n        return \"'\" + a + \"'\";\n      }).join(',')));\n    }\n\n    if (routeConfig.screen) {\n      return routeConfig.screen;\n    }\n\n    if (typeof routeConfig.getScreen === 'function') {\n      var screen = routeConfig.getScreen();\n      (0, _invariant.default)((0, _reactIs.isValidElementType)(screen), \"The getScreen defined for route '\" + routeName + \" didn't return a valid \" + 'screen or navigator.\\n\\n' + 'Please pass it like this:\\n' + (routeName + \": {\\n  getScreen: () => require('./MyScreen').default\\n}\"));\n      return screen;\n    }\n\n    return routeConfig;\n  }\n});","map":[[9,0,1,0],[11,0,1,41],[13,0,1,98],[13,11,1,107,"getScreenForRouteName"],[13,32,1,98],[13,33,1,129,"routeConfigs"],[13,45,1,98],[13,47,1,142,"routeName"],[13,56,1,98],[13,58,1,152],[14,0,1,153],[14,8,1,157,"routeConfig"],[14,19,1,168],[14,22,1,169,"routeConfigs"],[14,34,1,181],[14,35,1,182,"routeName"],[14,44,1,181],[14,45,1,153],[16,0,1,193],[16,8,1,196],[16,9,1,197,"routeConfig"],[16,20,1,193],[16,22,1,209],[17,0,1,210],[17,12,1,216],[17,16,1,220,"Error"],[17,21,1,216],[17,22,1,226],[17,61,1,263,"routeName"],[17,70,1,226],[17,73,1,273],[17,78,1,226],[17,82,1,280],[17,103,1,299,"Object"],[17,109,1,305],[17,110,1,306,"keys"],[17,114,1,299],[17,115,1,311,"routeConfigs"],[17,127,1,299],[17,129,1,325,"map"],[17,132,1,299],[17,133,1,329],[17,143,1,338,"a"],[17,144,1,329],[17,146,1,340],[18,0,1,341],[18,15,1,347],[18,21,1,351,"a"],[18,22,1,347],[18,25,1,353],[18,28,1,341],[19,0,1,358],[19,7,1,299],[19,9,1,360,"join"],[19,13,1,299],[19,14,1,365],[19,17,1,299],[19,18,1,226],[19,19,1,216],[19,20,1,210],[20,0,1,373],[22,0,1,373],[22,8,1,376,"routeConfig"],[22,19,1,387],[22,20,1,388,"screen"],[22,26,1,373],[22,28,1,395],[23,0,1,396],[23,13,1,403,"routeConfig"],[23,24,1,414],[23,25,1,415,"screen"],[23,31,1,396],[24,0,1,423],[26,0,1,423],[26,8,1,426],[26,15,1,433,"routeConfig"],[26,26,1,444],[26,27,1,445,"getScreen"],[26,36,1,426],[26,41,1,457],[26,51,1,423],[26,53,1,468],[27,0,1,469],[27,10,1,473,"screen"],[27,16,1,479],[27,19,1,480,"routeConfig"],[27,30,1,491],[27,31,1,492,"getScreen"],[27,40,1,480],[27,42,1,469],[28,0,1,504],[28,30,1,514],[28,63,1,533,"screen"],[28,69,1,514],[28,70,1,504],[28,72,1,541],[28,110,1,577,"routeName"],[28,119,1,541],[28,122,1,587],[28,147,1,541],[28,150,1,613],[28,176,1,541],[28,179,1,640],[28,208,1,541],[28,212,1,671,"routeName"],[28,221,1,680],[28,224,1,681],[28,282,1,541],[28,283,1,504],[29,0,1,742],[29,13,1,749,"screen"],[29,19,1,742],[30,0,1,757],[32,0,1,757],[32,11,1,764,"routeConfig"],[32,22,1,757],[33,0,1,777]]},"type":"js/module"}]}