{"dependencies":[{"name":"@babel/runtime/helpers/objectSpread","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"infoLog","data":{"isAsync":false}},{"name":"invariant","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _objectSpread = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/objectSpread\");\n\n  var _classCallCheck = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\");\n\n  var _createClass = _$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\");\n\n  var infoLog = _$$_REQUIRE(_dependencyMap[3], \"infoLog\");\n\n  var invariant = _$$_REQUIRE(_dependencyMap[4], \"invariant\");\n\n  var DEBUG = false;\n\n  var TaskQueue = function () {\n    function TaskQueue(_ref) {\n      var onMoreTasks = _ref.onMoreTasks;\n\n      _classCallCheck(this, TaskQueue);\n\n      this._onMoreTasks = onMoreTasks;\n      this._queueStack = [{\n        tasks: [],\n        popable: false\n      }];\n    }\n\n    _createClass(TaskQueue, [{\n      key: \"enqueue\",\n      value: function enqueue(task) {\n        this._getCurrentQueue().push(task);\n      }\n    }, {\n      key: \"enqueueTasks\",\n      value: function enqueueTasks(tasks) {\n        var _this = this;\n\n        tasks.forEach(function (task) {\n          return _this.enqueue(task);\n        });\n      }\n    }, {\n      key: \"cancelTasks\",\n      value: function cancelTasks(tasksToCancel) {\n        this._queueStack = this._queueStack.map(function (queue) {\n          return _objectSpread({}, queue, {\n            tasks: queue.tasks.filter(function (task) {\n              return tasksToCancel.indexOf(task) === -1;\n            })\n          });\n        }).filter(function (queue, idx) {\n          return queue.tasks.length > 0 || idx === 0;\n        });\n      }\n    }, {\n      key: \"hasTasksToProcess\",\n      value: function hasTasksToProcess() {\n        return this._getCurrentQueue().length > 0;\n      }\n    }, {\n      key: \"processNext\",\n      value: function processNext() {\n        var queue = this._getCurrentQueue();\n\n        if (queue.length) {\n          var task = queue.shift();\n\n          try {\n            if (task.gen) {\n              DEBUG && infoLog('genPromise for task ' + task.name);\n\n              this._genPromise(task);\n            } else if (task.run) {\n              DEBUG && infoLog('run task ' + task.name);\n              task.run();\n            } else {\n              invariant(typeof task === 'function', 'Expected Function, SimpleTask, or PromiseTask, but got:\\n' + JSON.stringify(task, null, 2));\n              DEBUG && infoLog('run anonymous task');\n              task();\n            }\n          } catch (e) {\n            e.message = 'TaskQueue: Error with task ' + (task.name || '') + ': ' + e.message;\n            throw e;\n          }\n        }\n      }\n    }, {\n      key: \"_getCurrentQueue\",\n      value: function _getCurrentQueue() {\n        var stackIdx = this._queueStack.length - 1;\n        var queue = this._queueStack[stackIdx];\n\n        if (queue.popable && queue.tasks.length === 0 && this._queueStack.length > 1) {\n          this._queueStack.pop();\n\n          DEBUG && infoLog('popped queue: ', {\n            stackIdx: stackIdx,\n            queueStackSize: this._queueStack.length\n          });\n          return this._getCurrentQueue();\n        } else {\n          return queue.tasks;\n        }\n      }\n    }, {\n      key: \"_genPromise\",\n      value: function _genPromise(task) {\n        var _this2 = this;\n\n        this._queueStack.push({\n          tasks: [],\n          popable: false\n        });\n\n        var stackIdx = this._queueStack.length - 1;\n        DEBUG && infoLog('push new queue: ', {\n          stackIdx: stackIdx\n        });\n        DEBUG && infoLog('exec gen task ' + task.name);\n        task.gen().then(function () {\n          DEBUG && infoLog('onThen for gen task ' + task.name, {\n            stackIdx: stackIdx,\n            queueStackSize: _this2._queueStack.length\n          });\n          _this2._queueStack[stackIdx].popable = true;\n          _this2.hasTasksToProcess() && _this2._onMoreTasks();\n        }).catch(function (ex) {\n          ex.message = \"TaskQueue: Error resolving Promise in task \" + task.name + \": \" + ex.message;\n          throw ex;\n        }).done();\n      }\n    }]);\n\n    return TaskQueue;\n  }();\n\n  module.exports = TaskQueue;\n});","map":[[2,0,11,0],[10,0,13,0],[10,6,13,6,"infoLog"],[10,13,13,13],[10,16,13,16,"require"],[10,27,13,23],[10,57,13,0],[12,0,14,0],[12,6,14,6,"invariant"],[12,15,14,15],[12,18,14,18,"require"],[12,29,14,25],[12,61,14,0],[14,0,26,0],[14,6,26,6,"DEBUG"],[14,11,26,11],[14,14,26,14],[14,19,26,0],[16,6,44,6,"TaskQueue"],[16,15],[17,0,52,2],[17,29,52,56],[18,0,52,56],[18,10,52,15,"onMoreTasks"],[18,21,52,56],[18,29,52,15,"onMoreTasks"],[18,40,52,56],[20,0,52,56],[22,0,53,4],[22,11,53,9,"_onMoreTasks"],[22,23,53,4],[22,26,53,24,"onMoreTasks"],[22,37,53,4],[23,0,54,4],[23,11,54,9,"_queueStack"],[23,22,54,4],[23,25,54,23],[23,26,54,24],[24,0,54,25,"tasks"],[24,8,54,25,"tasks"],[24,13,54,30],[24,15,54,32],[24,17,54,24],[25,0,54,36,"popable"],[25,8,54,36,"popable"],[25,15,54,43],[25,17,54,45],[26,0,54,24],[26,7,54,23],[26,8,54,4],[27,0,55,3],[31,30,62,10,"task"],[31,34],[31,36,62,28],[32,0,63,4],[32,13,63,9,"_getCurrentQueue"],[32,29,63,4],[32,32,63,28,"push"],[32,36,63,4],[32,37,63,33,"task"],[32,41,63,4],[33,0,64,3],[36,35,66,15,"tasks"],[36,40],[36,42,66,41],[37,0,66,41],[39,0,67,4,"tasks"],[39,8,67,4,"tasks"],[39,13,67,9],[39,14,67,10,"forEach"],[39,21,67,4],[39,22,67,18],[39,32,67,18,"task"],[39,36,67,22],[40,0,67,22],[40,17,67,26],[40,22,67,30],[40,23,67,31,"enqueue"],[40,30,67,26],[40,31,67,39,"task"],[40,35,67,26],[40,36,67,22],[41,0,67,22],[41,9,67,4],[42,0,68,3],[45,34,70,14,"tasksToCancel"],[45,47],[45,49,70,48],[46,0,72,4],[46,13,72,9,"_queueStack"],[46,24,72,4],[46,27,72,23],[46,32,72,28,"_queueStack"],[46,43,72,23],[46,44,73,7,"map"],[46,47,72,23],[46,48,73,11],[46,58,73,11,"queue"],[46,63,73,16],[47,0,73,16],[47,35,74,11,"queue"],[47,40,73,16],[48,0,75,8,"tasks"],[48,12,75,8,"tasks"],[48,17,75,13],[48,19,75,15,"queue"],[48,24,75,20],[48,25,75,21,"tasks"],[48,30,75,15],[48,31,75,27,"filter"],[48,37,75,15],[48,38,75,34],[48,48,75,34,"task"],[48,52,75,38],[49,0,75,38],[49,21,75,42,"tasksToCancel"],[49,34,75,55],[49,35,75,56,"indexOf"],[49,42,75,42],[49,43,75,64,"task"],[49,47,75,42],[49,53,75,74],[49,54,75,75],[49,55,75,38],[50,0,75,38],[50,13,75,15],[51,0,73,16],[52,0,73,16],[52,9,72,23],[52,11,77,7,"filter"],[52,17,72,23],[52,18,77,14],[52,28,77,15,"queue"],[52,33,77,14],[52,35,77,22,"idx"],[52,38,77,14],[53,0,77,14],[53,17,77,30,"queue"],[53,22,77,35],[53,23,77,36,"tasks"],[53,28,77,30],[53,29,77,42,"length"],[53,35,77,30],[53,38,77,51],[53,39,77,30],[53,43,77,56,"idx"],[53,46,77,59],[53,51,77,64],[53,52,77,14],[54,0,77,14],[54,9,72,23],[54,10,72,4],[55,0,78,3],[58,42,90,31],[59,0,91,4],[59,15,91,11],[59,20,91,16,"_getCurrentQueue"],[59,36,91,11],[59,39,91,35,"length"],[59,45,91,11],[59,48,91,44],[59,49,91,4],[60,0,92,3],[63,36,97,22],[64,0,98,4],[64,12,98,10,"queue"],[64,17,98,15],[64,20,98,18],[64,25,98,23,"_getCurrentQueue"],[64,41,98,18],[64,43,98,4],[66,0,99,4],[66,12,99,8,"queue"],[66,17,99,13],[66,18,99,14,"length"],[66,24,99,4],[66,26,99,22],[67,0,100,6],[67,14,100,12,"task"],[67,18,100,16],[67,21,100,19,"queue"],[67,26,100,24],[67,27,100,25,"shift"],[67,32,100,19],[67,34,100,6],[69,0,101,6],[69,14,101,10],[70,0,102,8],[70,16,102,12,"task"],[70,20,102,16],[70,21,102,17,"gen"],[70,24,102,8],[70,26,102,22],[71,0,103,10,"DEBUG"],[71,14,103,10,"DEBUG"],[71,19,103,15],[71,23,103,19,"infoLog"],[71,30,103,26],[71,31,103,27],[71,56,103,52,"task"],[71,60,103,56],[71,61,103,57,"name"],[71,65,103,26],[71,66,103,10],[73,0,104,10],[73,19,104,15,"_genPromise"],[73,30,104,10],[73,31,104,28,"task"],[73,35,104,10],[74,0,105,9],[74,13,102,8],[74,19,105,15],[74,23,105,19,"task"],[74,27,105,23],[74,28,105,24,"run"],[74,31,105,15],[74,33,105,29],[75,0,106,10,"DEBUG"],[75,14,106,10,"DEBUG"],[75,19,106,15],[75,23,106,19,"infoLog"],[75,30,106,26],[75,31,106,27],[75,45,106,41,"task"],[75,49,106,45],[75,50,106,46,"name"],[75,54,106,26],[75,55,106,10],[76,0,107,10,"task"],[76,14,107,10,"task"],[76,18,107,14],[76,19,107,15,"run"],[76,22,107,10],[77,0,108,9],[77,13,105,15],[77,19,108,15],[78,0,109,10,"invariant"],[78,14,109,10,"invariant"],[78,23,109,19],[78,24,110,12],[78,31,110,19,"task"],[78,35,110,12],[78,40,110,28],[78,50,109,19],[78,52,111,12],[78,114,112,14,"JSON"],[78,118,112,18],[78,119,112,19,"stringify"],[78,128,112,14],[78,129,112,29,"task"],[78,133,112,14],[78,135,112,35],[78,139,112,14],[78,141,112,41],[78,142,112,14],[78,143,109,19],[78,144,109,10],[79,0,114,10,"DEBUG"],[79,14,114,10,"DEBUG"],[79,19,114,15],[79,23,114,19,"infoLog"],[79,30,114,26],[79,31,114,27],[79,51,114,26],[79,52,114,10],[80,0,115,10,"task"],[80,14,115,10,"task"],[80,18,115,14],[81,0,116,9],[82,0,117,7],[82,11,101,6],[82,12,117,8],[82,19,117,15,"e"],[82,20,117,8],[82,22,117,18],[83,0,118,8,"e"],[83,12,118,8,"e"],[83,13,118,9],[83,14,118,10,"message"],[83,21,118,8],[83,24,119,10],[83,57,119,43,"task"],[83,61,119,47],[83,62,119,48,"name"],[83,66,119,43],[83,70,119,56],[83,72,119,10],[83,76,119,62],[83,80,119,10],[83,83,119,69,"e"],[83,84,119,70],[83,85,119,71,"message"],[83,92,118,8],[84,0,120,8],[84,18,120,14,"e"],[84,19,120,8],[85,0,121,7],[86,0,122,5],[87,0,123,3],[90,41,128,34],[91,0,129,4],[91,12,129,10,"stackIdx"],[91,20,129,18],[91,23,129,21],[91,28,129,26,"_queueStack"],[91,39,129,21],[91,40,129,38,"length"],[91,46,129,21],[91,49,129,47],[91,50,129,4],[92,0,130,4],[92,12,130,10,"queue"],[92,17,130,15],[92,20,130,18],[92,25,130,23,"_queueStack"],[92,36,130,18],[92,37,130,35,"stackIdx"],[92,45,130,18],[92,46,130,4],[94,0,131,4],[94,12,132,6,"queue"],[94,17,132,11],[94,18,132,12,"popable"],[94,25,132,6],[94,29,133,6,"queue"],[94,34,133,11],[94,35,133,12,"tasks"],[94,40,133,6],[94,41,133,18,"length"],[94,47,133,6],[94,52,133,29],[94,53,132,6],[94,57,134,6],[94,62,134,11,"_queueStack"],[94,73,134,6],[94,74,134,23,"length"],[94,80,134,6],[94,83,134,32],[94,84,131,4],[94,86,135,6],[95,0,136,6],[95,15,136,11,"_queueStack"],[95,26,136,6],[95,27,136,23,"pop"],[95,30,136,6],[97,0,137,6,"DEBUG"],[97,10,137,6,"DEBUG"],[97,15,137,11],[97,19,138,8,"infoLog"],[97,26,138,15],[97,27,138,16],[97,43,138,15],[97,45,138,34],[98,0,139,10,"stackIdx"],[98,12,139,10,"stackIdx"],[98,20,139,18],[98,22,139,10,"stackIdx"],[98,30,138,34],[99,0,140,10,"queueStackSize"],[99,12,140,10,"queueStackSize"],[99,26,140,24],[99,28,140,26],[99,33,140,31,"_queueStack"],[99,44,140,26],[99,45,140,43,"length"],[100,0,138,34],[100,11,138,15],[100,12,137,6],[101,0,142,6],[101,17,142,13],[101,22,142,18,"_getCurrentQueue"],[101,38,142,13],[101,40,142,6],[102,0,143,5],[102,9,131,4],[102,15,143,11],[103,0,144,6],[103,17,144,13,"queue"],[103,22,144,18],[103,23,144,19,"tasks"],[103,28,144,6],[104,0,145,5],[105,0,146,3],[108,34,148,14,"task"],[108,38],[108,40,148,33],[109,0,148,33],[111,0,153,4],[111,13,153,9,"_queueStack"],[111,24,153,4],[111,25,153,21,"push"],[111,29,153,4],[111,30,153,26],[112,0,153,27,"tasks"],[112,10,153,27,"tasks"],[112,15,153,32],[112,17,153,34],[112,19,153,26],[113,0,153,38,"popable"],[113,10,153,38,"popable"],[113,17,153,45],[113,19,153,47],[114,0,153,26],[114,9,153,4],[116,0,154,4],[116,12,154,10,"stackIdx"],[116,20,154,18],[116,23,154,21],[116,28,154,26,"_queueStack"],[116,39,154,21],[116,40,154,38,"length"],[116,46,154,21],[116,49,154,47],[116,50,154,4],[117,0,155,4,"DEBUG"],[117,8,155,4,"DEBUG"],[117,13,155,9],[117,17,155,13,"infoLog"],[117,24,155,20],[117,25,155,21],[117,43,155,20],[117,45,155,41],[118,0,155,42,"stackIdx"],[118,10,155,42,"stackIdx"],[118,18,155,50],[118,20,155,42,"stackIdx"],[119,0,155,41],[119,9,155,20],[119,10,155,4],[120,0,156,4,"DEBUG"],[120,8,156,4,"DEBUG"],[120,13,156,9],[120,17,156,13,"infoLog"],[120,24,156,20],[120,25,156,21],[120,44,156,40,"task"],[120,48,156,44],[120,49,156,45,"name"],[120,53,156,20],[120,54,156,4],[121,0,157,4,"task"],[121,8,157,4,"task"],[121,12,157,8],[121,13,158,7,"gen"],[121,16,157,4],[121,19,159,7,"then"],[121,23,157,4],[121,24,159,12],[121,36,159,18],[122,0,160,8,"DEBUG"],[122,10,160,8,"DEBUG"],[122,15,160,13],[122,19,161,10,"infoLog"],[122,26,161,17],[122,27,161,18],[122,52,161,43,"task"],[122,56,161,47],[122,57,161,48,"name"],[122,61,161,17],[122,63,161,54],[123,0,162,12,"stackIdx"],[123,12,162,12,"stackIdx"],[123,20,162,20],[123,22,162,12,"stackIdx"],[123,30,161,54],[124,0,163,12,"queueStackSize"],[124,12,163,12,"queueStackSize"],[124,26,163,26],[124,28,163,28],[124,34,163,32],[124,35,163,33,"_queueStack"],[124,46,163,28],[124,47,163,45,"length"],[125,0,161,54],[125,11,161,17],[125,12,160,8],[126,0,165,8],[126,10,165,8],[126,16,165,12],[126,17,165,13,"_queueStack"],[126,28,165,8],[126,29,165,25,"stackIdx"],[126,37,165,8],[126,39,165,35,"popable"],[126,46,165,8],[126,49,165,45],[126,53,165,8],[127,0,166,8],[127,10,166,8],[127,16,166,12],[127,17,166,13,"hasTasksToProcess"],[127,34,166,8],[127,40,166,36],[127,46,166,40],[127,47,166,41,"_onMoreTasks"],[127,59,166,36],[127,61,166,8],[128,0,167,7],[128,9,157,4],[128,11,168,7,"catch"],[128,16,157,4],[128,17,168,13],[128,27,168,13,"ex"],[128,29,168,15],[128,31,168,19],[129,0,169,8,"ex"],[129,10,169,8,"ex"],[129,12,169,10],[129,13,169,11,"message"],[129,20,169,8],[129,71,170,10,"task"],[129,75,170,14],[129,76,170,15,"name"],[129,80,169,8],[129,90,171,13,"ex"],[129,92,171,15],[129,93,171,16,"message"],[129,100,169,8],[130,0,172,8],[130,16,172,14,"ex"],[130,18,172,8],[131,0,173,7],[131,9,157,4],[131,11,174,7,"done"],[131,15,157,4],[132,0,175,3],[138,0,178,0,"module"],[138,2,178,0,"module"],[138,8,178,6],[138,9,178,7,"exports"],[138,16,178,0],[138,19,178,17,"TaskQueue"],[138,28,178,0]]},"type":"js/module"}]}