{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/objectSpread","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"./../react-transform-hmr/lib/index.js","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"fbjs/lib/areEqual","data":{"isAsync":false}},{"name":"./RNGestureHandlerModule","data":{"isAsync":false}},{"name":"./State","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = createHandler;\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/inherits\"));\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/objectSpread\"));\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"react\"));\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"./../react-transform-hmr/lib/index.js\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[10], \"react-native\");\n\n  var _areEqual = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11], \"fbjs/lib/areEqual\"));\n\n  var _RNGestureHandlerModule = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12], \"./RNGestureHandlerModule\"));\n\n  var _State = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13], \"./State\"));\n\n  var _stateToPropMappings;\n\n  var _components = {\n    Handler: {\n      displayName: \"Handler\",\n      isInFunction: true\n    }\n  };\n\n  var _reactTransformHmrLibIndexJs2 = (0, _index.default)({\n    filename: \"node_modules/react-native-gesture-handler/createHandler.js\",\n    components: _components,\n    locals: [module],\n    imports: [_react.default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _reactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  var UIManager = _reactNative.NativeModules.UIManager;\n  var oldSetJSResponder = UIManager.setJSResponder,\n      oldClearJSResponder = UIManager.clearJSResponder;\n\n  UIManager.setJSResponder = function (tag, blockNativeResponder) {\n    _RNGestureHandlerModule.default.handleSetJSResponder(tag, blockNativeResponder);\n\n    oldSetJSResponder(tag, blockNativeResponder);\n  };\n\n  UIManager.clearJSResponder = function () {\n    _RNGestureHandlerModule.default.handleClearJSResponder();\n\n    oldClearJSResponder();\n  };\n\n  UIManager.genericDirectEventTypes = (0, _objectSpread2.default)({}, UIManager.genericDirectEventTypes, {\n    onGestureHandlerEvent: {\n      registrationName: 'onGestureHandlerEvent'\n    },\n    onGestureHandlerStateChange: {\n      registrationName: 'onGestureHandlerStateChange'\n    }\n  });\n  var handlerTag = 1;\n  var handlerIDToTag = {};\n\n  function isConfigParam(param, name) {\n    return param !== undefined && (param !== Object(param) || !('__isNative' in param)) && name !== 'onHandlerStateChange' && name !== 'onGestureEvent';\n  }\n\n  function filterConfig(props, validProps) {\n    var defaults = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var res = (0, _objectSpread2.default)({}, defaults);\n    Object.keys(validProps).forEach(function (key) {\n      var value = props[key];\n\n      if (isConfigParam(value, key)) {\n        var _value = props[key];\n\n        if (key === 'simultaneousHandlers' || key === 'waitFor') {\n          _value = transformIntoHandlerTags(props[key]);\n        } else if (key === 'hitSlop') {\n          if (typeof _value !== 'object') {\n            _value = {\n              top: _value,\n              left: _value,\n              bottom: _value,\n              right: _value\n            };\n          }\n        }\n\n        res[key] = _value;\n      }\n    });\n    return res;\n  }\n\n  function transformIntoHandlerTags(handlerIDs) {\n    if (!Array.isArray(handlerIDs)) {\n      handlerIDs = [handlerIDs];\n    }\n\n    return handlerIDs.map(function (handlerID) {\n      return handlerIDToTag[handlerID] || handlerID.current && handlerID.current._handlerTag || -1;\n    }).filter(function (handlerTag) {\n      return handlerTag > 0;\n    });\n  }\n\n  function hasUnresolvedRefs(props) {\n    var extract = function extract(refs) {\n      if (!Array.isArray(refs)) {\n        return refs && refs.current === null;\n      }\n\n      return refs.some(function (r) {\n        return r && r.current === null;\n      });\n    };\n\n    return extract(props['simultaneousHandlers']) || extract(props['waitFor']);\n  }\n\n  var stateToPropMappings = (_stateToPropMappings = {}, (0, _defineProperty2.default)(_stateToPropMappings, _State.default.BEGAN, 'onBegan'), (0, _defineProperty2.default)(_stateToPropMappings, _State.default.FAILED, 'onFailed'), (0, _defineProperty2.default)(_stateToPropMappings, _State.default.CANCELLED, 'onCancelled'), (0, _defineProperty2.default)(_stateToPropMappings, _State.default.ACTIVE, 'onActivated'), (0, _defineProperty2.default)(_stateToPropMappings, _State.default.END, 'onEnded'), _stateToPropMappings);\n\n  function createHandler(handlerName) {\n    var propTypes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var transformProps = arguments.length > 3 ? arguments[3] : undefined;\n    var customNativeProps = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\n    var Handler = function (_React$Component) {\n      (0, _inherits2.default)(Handler, _React$Component);\n\n      function Handler(props) {\n        var _this;\n\n        (0, _classCallCheck2.default)(this, Handler);\n        _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Handler).call(this, props));\n\n        _this._onGestureHandlerEvent = function (event) {\n          if (event.nativeEvent.handlerTag === _this._handlerTag) {\n            _this.props.onGestureEvent && _this.props.onGestureEvent(event);\n          } else {\n            _this.props.onGestureHandlerEvent && _this.props.onGestureHandlerEvent(event);\n          }\n        };\n\n        _this._onGestureHandlerStateChange = function (event) {\n          if (event.nativeEvent.handlerTag === _this._handlerTag) {\n            _this.props.onHandlerStateChange && _this.props.onHandlerStateChange(event);\n            var stateEventName = stateToPropMappings[event.nativeEvent.state];\n\n            if (typeof _this.props[stateEventName] === 'function') {\n              _this.props[stateEventName](event);\n            }\n          } else {\n            _this.props.onGestureHandlerStateChange && _this.props.onGestureHandlerStateChange(event);\n          }\n        };\n\n        _this._refHandler = function (node) {\n          _this._viewNode = node;\n\n          var child = _react.default.Children.only(_this.props.children);\n\n          var ref = child.ref;\n\n          if (ref !== null) {\n            if (typeof ref === 'function') {\n              ref(node);\n            } else {\n              ref.current = node;\n            }\n          }\n        };\n\n        _this._createGestureHandler = function (newConfig) {\n          _this._config = newConfig;\n\n          _RNGestureHandlerModule.default.createGestureHandler(handlerName, _this._handlerTag, newConfig);\n        };\n\n        _this._attachGestureHandler = function (newViewTag) {\n          _this._viewTag = newViewTag;\n\n          _RNGestureHandlerModule.default.attachGestureHandler(_this._handlerTag, newViewTag);\n        };\n\n        _this._updateGestureHandler = function (newConfig) {\n          _this._config = newConfig;\n\n          _RNGestureHandlerModule.default.updateGestureHandler(_this._handlerTag, newConfig);\n        };\n\n        _this._handlerTag = handlerTag++;\n        _this._config = {};\n\n        if (props.id) {\n          if (handlerIDToTag[props.id] !== undefined) {\n            throw new Error(\"Handler with ID \\\"\" + props.id + \"\\\" already registered\");\n          }\n\n          handlerIDToTag[props.id] = _this._handlerTag;\n        }\n\n        return _this;\n      }\n\n      (0, _createClass2.default)(Handler, [{\n        key: \"componentWillUnmount\",\n        value: function componentWillUnmount() {\n          _RNGestureHandlerModule.default.dropGestureHandler(this._handlerTag);\n\n          if (this._updateEnqueued) {\n            clearImmediate(this._updateEnqueued);\n          }\n\n          if (this.props.id) {\n            delete handlerIDToTag[this.props.id];\n          }\n        }\n      }, {\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          var _this2 = this;\n\n          if (hasUnresolvedRefs(this.props)) {\n            this._updateEnqueued = setImmediate(function () {\n              _this2._updateEnqueued = null;\n\n              _this2._update();\n            });\n          }\n\n          this._createGestureHandler(filterConfig(transformProps ? transformProps(this.props) : this.props, (0, _objectSpread2.default)({}, this.constructor.propTypes, customNativeProps), config));\n\n          this._attachGestureHandler((0, _reactNative.findNodeHandle)(this._viewNode));\n        }\n      }, {\n        key: \"componentDidUpdate\",\n        value: function componentDidUpdate() {\n          var viewTag = (0, _reactNative.findNodeHandle)(this._viewNode);\n\n          if (this._viewTag !== viewTag) {\n            this._attachGestureHandler(viewTag);\n          }\n\n          this._update();\n        }\n      }, {\n        key: \"_update\",\n        value: function _update() {\n          var newConfig = filterConfig(transformProps ? transformProps(this.props) : this.props, (0, _objectSpread2.default)({}, this.constructor.propTypes, customNativeProps), config);\n\n          if (!(0, _areEqual.default)(this._config, newConfig)) {\n            this._updateGestureHandler(newConfig);\n          }\n        }\n      }, {\n        key: \"setNativeProps\",\n        value: function setNativeProps(updates) {\n          var mergedProps = (0, _objectSpread2.default)({}, this.props, updates);\n          var newConfig = filterConfig(transformProps ? transformProps(mergedProps) : mergedProps, (0, _objectSpread2.default)({}, this.constructor.propTypes, customNativeProps), config);\n\n          this._updateGestureHandler(newConfig);\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          var gestureEventHandler = this._onGestureHandlerEvent;\n          var _this$props = this.props,\n              onGestureEvent = _this$props.onGestureEvent,\n              onGestureHandlerEvent = _this$props.onGestureHandlerEvent;\n\n          if (onGestureEvent && typeof onGestureEvent !== 'function') {\n            if (onGestureHandlerEvent) {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n\n            gestureEventHandler = this.props.onGestureEvent;\n          } else {\n            if (onGestureHandlerEvent && typeof onGestureHandlerEvent !== 'function') {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n          }\n\n          var gestureStateEventHandler = this._onGestureHandlerStateChange;\n          var _this$props2 = this.props,\n              onHandlerStateChange = _this$props2.onHandlerStateChange,\n              onGestureHandlerStateChange = _this$props2.onGestureHandlerStateChange;\n\n          if (onHandlerStateChange && typeof onHandlerStateChange !== 'function') {\n            if (onGestureHandlerStateChange) {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n\n            gestureStateEventHandler = this.props.onHandlerStateChange;\n          } else {\n            if (onGestureHandlerStateChange && typeof onGestureHandlerStateChange !== 'function') {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n          }\n\n          var child = _react.default.Children.only(this.props.children);\n\n          var grandChildren = child.props.children;\n\n          if (_reactNative.Touchable.TOUCH_TARGET_DEBUG && child.type && (child.type === 'RNGestureHandlerButton' || child.type.name === 'View' || child.type.displayName === 'View')) {\n            grandChildren = _react.default.Children.toArray(grandChildren);\n            grandChildren.push(_reactNative.Touchable.renderDebugView({\n              color: 'mediumspringgreen',\n              hitSlop: child.props.hitSlop\n            }));\n          }\n\n          return _react.default.cloneElement(child, {\n            ref: this._refHandler,\n            collapsable: false,\n            onGestureHandlerEvent: gestureEventHandler,\n            onGestureHandlerStateChange: gestureStateEventHandler\n          }, grandChildren);\n        }\n      }]);\n      return Handler;\n    }(_react.default.Component);\n\n    Handler.displayName = handlerName;\n    Handler.propTypes = propTypes;\n    Handler = _wrapComponent(\"Handler\")(Handler);\n    return Handler;\n  }\n});","map":[[23,0,1,0],[27,0,2,0],[29,0,3,0],[31,0,4,0],[33,0,6,0],[57,6,8,8,"UIManager"],[57,15],[57,18,8,22,"NativeModules"],[57,44],[57,45,8,8,"UIManager"],[57,54],[58,6,12,18,"oldSetJSResponder"],[58,23],[58,26,14,4,"UIManager"],[58,35],[58,36,12,2,"setJSResponder"],[58,50],[59,6,13,20,"oldClearJSResponder"],[59,25],[59,28,14,4,"UIManager"],[59,37],[59,38,13,2,"clearJSResponder"],[59,54],[61,0,15,0,"UIManager"],[61,2,15,0,"UIManager"],[61,11,15,9],[61,12,15,10,"setJSResponder"],[61,26,15,0],[61,29,15,27],[61,39,15,28,"tag"],[61,42,15,27],[61,44,15,33,"blockNativeResponder"],[61,64,15,27],[61,66,15,58],[62,0,16,2,"RNGestureHandlerModule"],[62,36,16,25,"handleSetJSResponder"],[62,56,16,2],[62,57,16,46,"tag"],[62,60,16,2],[62,62,16,51,"blockNativeResponder"],[62,82,16,2],[64,0,17,2,"oldSetJSResponder"],[64,4,17,2,"oldSetJSResponder"],[64,21,17,19],[64,22,17,20,"tag"],[64,25,17,19],[64,27,17,25,"blockNativeResponder"],[64,47,17,19],[64,48,17,2],[65,0,18,1],[65,3,15,0],[67,0,19,0,"UIManager"],[67,2,19,0,"UIManager"],[67,11,19,9],[67,12,19,10,"clearJSResponder"],[67,28,19,0],[67,31,19,29],[67,43,19,35],[68,0,20,2,"RNGestureHandlerModule"],[68,36,20,25,"handleClearJSResponder"],[68,58,20,2],[70,0,21,2,"oldClearJSResponder"],[70,4,21,2,"oldClearJSResponder"],[70,23,21,21],[71,0,22,1],[71,3,19,0],[73,0,28,0,"UIManager"],[73,2,28,0,"UIManager"],[73,11,28,9],[73,12,28,10,"genericDirectEventTypes"],[73,35,28,0],[73,70,29,5,"UIManager"],[73,79,29,14],[73,80,29,15,"genericDirectEventTypes"],[73,103,28,0],[74,0,30,2,"onGestureHandlerEvent"],[74,4,30,2,"onGestureHandlerEvent"],[74,25,30,23],[74,27,30,25],[75,0,30,27,"registrationName"],[75,6,30,27,"registrationName"],[75,22,30,43],[75,24,30,45],[76,0,30,25],[76,5,28,0],[77,0,31,2,"onGestureHandlerStateChange"],[77,4,31,2,"onGestureHandlerStateChange"],[77,31,31,29],[77,33,31,31],[78,0,32,4,"registrationName"],[78,6,32,4,"registrationName"],[78,22,32,20],[78,24,32,22],[79,0,31,31],[80,0,28,0],[81,0,36,0],[81,6,36,4,"handlerTag"],[81,16,36,14],[81,19,36,17],[81,20,36,0],[82,0,37,0],[82,6,37,6,"handlerIDToTag"],[82,20,37,20],[82,23,37,23],[82,25,37,0],[84,0,39,0],[84,11,39,9,"isConfigParam"],[84,24,39,0],[84,25,39,23,"param"],[84,30,39,0],[84,32,39,30,"name"],[84,36,39,0],[84,38,39,36],[85,0,42,2],[85,11,43,4,"param"],[85,16,43,9],[85,21,43,14,"undefined"],[85,30,43,4],[85,35,44,5,"param"],[85,40,44,10],[85,45,44,15,"Object"],[85,51,44,21],[85,52,44,22,"param"],[85,57,44,21],[85,58,44,5],[85,62,44,32],[85,64,44,34],[85,80,44,50,"param"],[85,85,44,32],[85,86,43,4],[85,91,45,4,"name"],[85,95,45,8],[85,100,45,13],[85,122,43,4],[85,126,46,4,"name"],[85,130,46,8],[85,135,46,13],[85,151,42,2],[86,0,48,1],[88,0,50,0],[88,11,50,9,"filterConfig"],[88,23,50,0],[88,24,50,22,"props"],[88,29,50,0],[88,31,50,29,"validProps"],[88,41,50,0],[88,43,50,56],[89,0,50,56],[89,8,50,41,"defaults"],[89,16,50,56],[89,87,50,52],[89,89,50,56],[90,0,51,2],[90,8,51,8,"res"],[90,11,51,11],[90,46,51,19,"defaults"],[90,54,51,11],[90,55,51,2],[91,0,52,2,"Object"],[91,4,52,2,"Object"],[91,10,52,8],[91,11,52,9,"keys"],[91,15,52,2],[91,16,52,14,"validProps"],[91,26,52,2],[91,28,52,26,"forEach"],[91,35,52,2],[91,36,52,34],[91,46,52,34,"key"],[91,49,52,37],[91,51,52,41],[92,0,53,4],[92,10,53,10,"value"],[92,15,53,15],[92,18,53,18,"props"],[92,23,53,23],[92,24,53,24,"key"],[92,27,53,23],[92,28,53,4],[94,0,54,4],[94,10,54,8,"isConfigParam"],[94,23,54,21],[94,24,54,22,"value"],[94,29,54,21],[94,31,54,29,"key"],[94,34,54,21],[94,35,54,4],[94,37,54,35],[95,0,55,6],[95,12,55,10,"value"],[95,18,55,15],[95,21,55,18,"props"],[95,26,55,23],[95,27,55,24,"key"],[95,30,55,23],[95,31,55,6],[97,0,56,6],[97,12,56,10,"key"],[97,15,56,13],[97,20,56,18],[97,42,56,10],[97,46,56,44,"key"],[97,49,56,47],[97,54,56,52],[97,63,56,6],[97,65,56,63],[98,0,57,8,"value"],[98,10,57,8,"value"],[98,16,57,13],[98,19,57,16,"transformIntoHandlerTags"],[98,43,57,40],[98,44,57,41,"props"],[98,49,57,46],[98,50,57,47,"key"],[98,53,57,46],[98,54,57,40],[98,55,57,8],[99,0,58,7],[99,9,56,6],[99,15,58,13],[99,19,58,17,"key"],[99,22,58,20],[99,27,58,25],[99,36,58,13],[99,38,58,36],[100,0,59,8],[100,14,59,12],[100,21,59,19,"value"],[100,27,59,12],[100,32,59,29],[100,40,59,8],[100,42,59,39],[101,0,60,10,"value"],[101,12,60,10,"value"],[101,18,60,15],[101,21,60,18],[102,0,60,20,"top"],[102,14,60,20,"top"],[102,17,60,23],[102,19,60,25,"value"],[102,25,60,18],[103,0,60,32,"left"],[103,14,60,32,"left"],[103,18,60,36],[103,20,60,38,"value"],[103,26,60,18],[104,0,60,45,"bottom"],[104,14,60,45,"bottom"],[104,20,60,51],[104,22,60,53,"value"],[104,28,60,18],[105,0,60,60,"right"],[105,14,60,60,"right"],[105,19,60,65],[105,21,60,67,"value"],[106,0,60,18],[106,13,60,10],[107,0,61,9],[108,0,62,7],[110,0,63,6,"res"],[110,8,63,6,"res"],[110,11,63,9],[110,12,63,10,"key"],[110,15,63,9],[110,16,63,6],[110,19,63,17,"value"],[110,25,63,6],[111,0,64,5],[112,0,65,3],[112,5,52,2],[113,0,66,2],[113,11,66,9,"res"],[113,14,66,2],[114,0,67,1],[116,0,69,0],[116,11,69,9,"transformIntoHandlerTags"],[116,35,69,0],[116,36,69,34,"handlerIDs"],[116,46,69,0],[116,48,69,46],[117,0,70,2],[117,8,70,6],[117,9,70,7,"Array"],[117,14,70,12],[117,15,70,13,"isArray"],[117,22,70,7],[117,23,70,21,"handlerIDs"],[117,33,70,7],[117,34,70,2],[117,36,70,34],[118,0,71,4,"handlerIDs"],[118,6,71,4,"handlerIDs"],[118,16,71,14],[118,19,71,17],[118,20,71,18,"handlerIDs"],[118,30,71,17],[118,31,71,4],[119,0,72,3],[121,0,75,2],[121,11,75,9,"handlerIDs"],[121,21,75,19],[121,22,76,5,"map"],[121,25,75,9],[121,26,77,6],[121,36,77,6,"handlerID"],[121,45,77,15],[122,0,77,15],[122,13,78,8,"handlerIDToTag"],[122,27,78,22],[122,28,78,23,"handlerID"],[122,37,78,22],[122,38,78,8],[122,42,79,9,"handlerID"],[122,51,79,18],[122,52,79,19,"current"],[122,59,79,9],[122,63,79,30,"handlerID"],[122,72,79,39],[122,73,79,40,"current"],[122,80,79,30],[122,81,79,48,"_handlerTag"],[122,92,78,8],[122,96,80,8],[122,97,80,9],[122,98,77,15],[123,0,77,15],[123,5,75,9],[123,7,82,5,"filter"],[123,13,75,9],[123,14,82,12],[123,24,82,12,"handlerTag"],[123,34,82,22],[124,0,82,22],[124,13,82,26,"handlerTag"],[124,23,82,36],[124,26,82,39],[124,27,82,22],[125,0,82,22],[125,5,75,9],[125,6,75,2],[126,0,83,1],[128,0,85,0],[128,11,85,9,"hasUnresolvedRefs"],[128,28,85,0],[128,29,85,27,"props"],[128,34,85,0],[128,36,85,34],[129,0,86,2],[129,8,86,8,"extract"],[129,15,86,15],[129,18,86,18],[129,27,86,8,"extract"],[129,34,86,18],[129,35,86,18,"refs"],[129,39,86,22],[129,41,86,26],[130,0,87,4],[130,10,87,8],[130,11,87,9,"Array"],[130,16,87,14],[130,17,87,15,"isArray"],[130,24,87,9],[130,25,87,23,"refs"],[130,29,87,9],[130,30,87,4],[130,32,87,30],[131,0,88,6],[131,15,88,13,"refs"],[131,19,88,17],[131,23,88,21,"refs"],[131,27,88,25],[131,28,88,26,"current"],[131,35,88,21],[131,40,88,38],[131,44,88,6],[132,0,89,5],[134,0,90,4],[134,13,90,11,"refs"],[134,17,90,15],[134,18,90,16,"some"],[134,22,90,11],[134,23,90,21],[134,33,90,21,"r"],[134,34,90,22],[135,0,90,22],[135,15,90,26,"r"],[135,16,90,27],[135,20,90,31,"r"],[135,21,90,32],[135,22,90,33,"current"],[135,29,90,31],[135,34,90,45],[135,38,90,22],[136,0,90,22],[136,7,90,11],[136,8,90,4],[137,0,91,3],[137,5,86,2],[139,0,92,2],[139,11,92,9,"extract"],[139,18,92,16],[139,19,92,17,"props"],[139,24,92,22],[139,25,92,23],[139,47,92,22],[139,48,92,16],[139,49,92,9],[139,53,92,51,"extract"],[139,60,92,58],[139,61,92,59,"props"],[139,66,92,64],[139,67,92,65],[139,76,92,64],[139,77,92,58],[139,78,92,2],[140,0,93,1],[142,0,95,0],[142,6,95,6,"stateToPropMappings"],[142,25,95,25],[142,108,96,3,"State"],[142,123,96,9,"BEGAN"],[142,128,95,25],[142,130,96,17],[142,139,95,25],[142,194,97,3,"State"],[142,209,97,9,"FAILED"],[142,215,95,25],[142,217,97,18],[142,227,95,25],[142,282,98,3,"State"],[142,297,98,9,"CANCELLED"],[142,306,95,25],[142,308,98,21],[142,321,95,25],[142,376,99,3,"State"],[142,391,99,9,"ACTIVE"],[142,397,95,25],[142,399,99,18],[142,412,95,25],[142,467,100,3,"State"],[142,482,100,9,"END"],[142,485,95,25],[142,487,100,15],[142,496,95,25],[142,520,95,0],[144,0,103,15],[144,11,103,24,"createHandler"],[144,24,103,15],[144,25,104,2,"handlerName"],[144,36,103,15],[144,38,109,2],[145,0,109,2],[145,8,105,2,"propTypes"],[145,17,109,2],[145,88,105,14],[145,90,109,2],[146,0,109,2],[146,8,106,2,"config"],[146,14,109,2],[146,85,106,11],[146,87,109,2],[147,0,109,2],[147,8,107,2,"transformProps"],[147,22,109,2],[148,0,109,2],[148,8,108,2,"customNativeProps"],[148,25,109,2],[148,96,108,22],[148,98,109,2],[150,0,109,2],[150,8,110,8,"Handler"],[150,15,109,2],[151,0,109,2],[153,0,115,4],[153,23,115,16,"props"],[153,28,115,4],[153,30,115,23],[154,0,115,23],[156,0,115,23],[157,0,116,6],[157,113,116,12,"props"],[157,118,116,6],[159,0,115,23],[159,14,127,4,"_onGestureHandlerEvent"],[159,36,115,23],[159,39,127,29],[159,49,127,29,"event"],[159,54,127,34],[159,56,127,38],[160,0,128,6],[160,14,128,10,"event"],[160,19,128,15],[160,20,128,16,"nativeEvent"],[160,31,128,10],[160,32,128,28,"handlerTag"],[160,42,128,10],[160,47,128,43],[160,53,128,48,"_handlerTag"],[160,64,128,6],[160,66,128,61],[161,0,129,8],[161,18,129,13,"props"],[161,23,129,8],[161,24,129,19,"onGestureEvent"],[161,38,129,8],[161,42,129,37],[161,48,129,42,"props"],[161,53,129,37],[161,54,129,48,"onGestureEvent"],[161,68,129,37],[161,69,129,63,"event"],[161,74,129,37],[161,75,129,8],[162,0,130,7],[162,11,128,6],[162,17,130,13],[163,0,131,8],[163,18,131,13,"props"],[163,23,131,8],[163,24,131,19,"onGestureHandlerEvent"],[163,45,131,8],[163,49,132,10],[163,55,132,15,"props"],[163,60,132,10],[163,61,132,21,"onGestureHandlerEvent"],[163,82,132,10],[163,83,132,43,"event"],[163,88,132,10],[163,89,131,8],[164,0,133,7],[165,0,134,5],[165,9,115,23],[167,0,115,23],[167,14,136,4,"_onGestureHandlerStateChange"],[167,42,115,23],[167,45,136,35],[167,55,136,35,"event"],[167,60,136,40],[167,62,136,44],[168,0,137,6],[168,14,137,10,"event"],[168,19,137,15],[168,20,137,16,"nativeEvent"],[168,31,137,10],[168,32,137,28,"handlerTag"],[168,42,137,10],[168,47,137,43],[168,53,137,48,"_handlerTag"],[168,64,137,6],[168,66,137,61],[169,0,138,8],[169,18,138,13,"props"],[169,23,138,8],[169,24,138,19,"onHandlerStateChange"],[169,44,138,8],[169,48,139,10],[169,54,139,15,"props"],[169,59,139,10],[169,60,139,21,"onHandlerStateChange"],[169,80,139,10],[169,81,139,42,"event"],[169,86,139,10],[169,87,138,8],[170,0,141,8],[170,16,141,14,"stateEventName"],[170,30,141,28],[170,33,141,31,"stateToPropMappings"],[170,52,141,50],[170,53,141,51,"event"],[170,58,141,56],[170,59,141,57,"nativeEvent"],[170,70,141,51],[170,71,141,69,"state"],[170,76,141,50],[170,77,141,8],[172,0,142,8],[172,16,142,12],[172,23,142,19],[172,29,142,24,"props"],[172,34,142,19],[172,35,142,30,"stateEventName"],[172,49,142,19],[172,50,142,12],[172,55,142,50],[172,65,142,8],[172,67,142,62],[173,0,143,10],[173,20,143,15,"props"],[173,25,143,10],[173,26,143,21,"stateEventName"],[173,40,143,10],[173,42,143,37,"event"],[173,47,143,10],[174,0,144,9],[175,0,145,7],[175,11,137,6],[175,17,145,13],[176,0,146,8],[176,18,146,13,"props"],[176,23,146,8],[176,24,146,19,"onGestureHandlerStateChange"],[176,51,146,8],[176,55,147,10],[176,61,147,15,"props"],[176,66,147,10],[176,67,147,21,"onGestureHandlerStateChange"],[176,94,147,10],[176,95,147,49,"event"],[176,100,147,10],[176,101,146,8],[177,0,148,7],[178,0,149,5],[178,9,115,23],[180,0,115,23],[180,14,151,4,"_refHandler"],[180,25,115,23],[180,28,151,18],[180,38,151,18,"node"],[180,42,151,22],[180,44,151,26],[181,0,152,6],[181,16,152,11,"_viewNode"],[181,25,152,6],[181,28,152,23,"node"],[181,32,152,6],[183,0,154,6],[183,14,154,12,"child"],[183,19,154,17],[183,22,154,20,"React"],[183,37,154,26,"Children"],[183,45,154,20],[183,46,154,35,"only"],[183,50,154,20],[183,51,154,40],[183,57,154,45,"props"],[183,62,154,40],[183,63,154,51,"children"],[183,71,154,20],[183,72,154,6],[185,0,151,26],[185,14,155,14,"ref"],[185,17,151,26],[185,20,155,22,"child"],[185,25,151,26],[185,26,155,14,"ref"],[185,29,151,26],[187,0,156,6],[187,14,156,10,"ref"],[187,17,156,13],[187,22,156,18],[187,26,156,6],[187,28,156,24],[188,0,157,8],[188,16,157,12],[188,23,157,19,"ref"],[188,26,157,12],[188,31,157,27],[188,41,157,8],[188,43,157,39],[189,0,158,10,"ref"],[189,14,158,10,"ref"],[189,17,158,13],[189,18,158,14,"node"],[189,22,158,13],[189,23,158,10],[190,0,159,9],[190,13,157,8],[190,19,159,15],[191,0,160,10,"ref"],[191,14,160,10,"ref"],[191,17,160,13],[191,18,160,14,"current"],[191,25,160,10],[191,28,160,24,"node"],[191,32,160,10],[192,0,161,9],[193,0,162,7],[194,0,163,5],[194,9,115,23],[196,0,115,23],[196,14,165,4,"_createGestureHandler"],[196,35,115,23],[196,38,165,28],[196,48,165,28,"newConfig"],[196,57,165,37],[196,59,165,41],[197,0,166,6],[197,16,166,11,"_config"],[197,23,166,6],[197,26,166,21,"newConfig"],[197,35,166,6],[199,0,168,6,"RNGestureHandlerModule"],[199,42,168,29,"createGestureHandler"],[199,62,168,6],[199,63,169,8,"handlerName"],[199,74,168,6],[199,76,170,8],[199,82,170,13,"_handlerTag"],[199,93,168,6],[199,95,171,8,"newConfig"],[199,104,168,6],[200,0,173,5],[200,9,115,23],[202,0,115,23],[202,14,175,4,"_attachGestureHandler"],[202,35,115,23],[202,38,175,28],[202,48,175,28,"newViewTag"],[202,58,175,38],[202,60,175,42],[203,0,176,6],[203,16,176,11,"_viewTag"],[203,24,176,6],[203,27,176,22,"newViewTag"],[203,37,176,6],[205,0,178,6,"RNGestureHandlerModule"],[205,42,178,29,"attachGestureHandler"],[205,62,178,6],[205,63,178,50],[205,69,178,55,"_handlerTag"],[205,80,178,6],[205,82,178,68,"newViewTag"],[205,92,178,6],[206,0,179,5],[206,9,115,23],[208,0,115,23],[208,14,181,4,"_updateGestureHandler"],[208,35,115,23],[208,38,181,28],[208,48,181,28,"newConfig"],[208,57,181,37],[208,59,181,41],[209,0,182,6],[209,16,182,11,"_config"],[209,23,182,6],[209,26,182,21,"newConfig"],[209,35,182,6],[211,0,184,6,"RNGestureHandlerModule"],[211,42,184,29,"updateGestureHandler"],[211,62,184,6],[211,63,184,50],[211,69,184,55,"_handlerTag"],[211,80,184,6],[211,82,184,68,"newConfig"],[211,91,184,6],[212,0,185,5],[212,9,115,23],[214,0,117,6],[214,14,117,11,"_handlerTag"],[214,25,117,6],[214,28,117,25,"handlerTag"],[214,38,117,35],[214,40,117,6],[215,0,118,6],[215,14,118,11,"_config"],[215,21,118,6],[215,24,118,21],[215,26,118,6],[217,0,119,6],[217,12,119,10,"props"],[217,17,119,15],[217,18,119,16,"id"],[217,20,119,6],[217,22,119,20],[218,0,120,8],[218,14,120,12,"handlerIDToTag"],[218,28,120,26],[218,29,120,27,"props"],[218,34,120,32],[218,35,120,33,"id"],[218,37,120,26],[218,38,120,12],[218,43,120,41,"undefined"],[218,52,120,8],[218,54,120,52],[219,0,121,10],[219,18,121,16],[219,22,121,20,"Error"],[219,27,121,16],[219,51,121,46,"props"],[219,56,121,51],[219,57,121,52,"id"],[219,59,121,16],[219,86,121,10],[220,0,122,9],[222,0,123,8,"handlerIDToTag"],[222,10,123,8,"handlerIDToTag"],[222,24,123,22],[222,25,123,23,"props"],[222,30,123,28],[222,31,123,29,"id"],[222,33,123,22],[222,34,123,8],[222,37,123,35],[222,43,123,40,"_handlerTag"],[222,54,123,8],[223,0,124,7],[225,0,115,23],[226,0,125,5],[228,0,109,2],[229,0,109,2],[230,0,109,2],[230,47,187,27],[231,0,188,6,"RNGestureHandlerModule"],[231,42,188,29,"dropGestureHandler"],[231,60,188,6],[231,61,188,48],[231,66,188,53,"_handlerTag"],[231,77,188,6],[233,0,189,6],[233,14,189,10],[233,19,189,15,"_updateEnqueued"],[233,34,189,6],[233,36,189,32],[234,0,190,8,"clearImmediate"],[234,12,190,8,"clearImmediate"],[234,26,190,22],[234,27,190,23],[234,32,190,28,"_updateEnqueued"],[234,47,190,22],[234,48,190,8],[235,0,191,7],[237,0,192,6],[237,14,192,10],[237,19,192,15,"props"],[237,24,192,10],[237,25,192,21,"id"],[237,27,192,6],[237,29,192,25],[238,0,193,8],[238,19,193,15,"handlerIDToTag"],[238,33,193,29],[238,34,193,30],[238,39,193,35,"props"],[238,44,193,30],[238,45,193,41,"id"],[238,47,193,29],[238,48,193,8],[239,0,194,7],[240,0,195,5],[241,0,109,2],[242,0,109,2],[243,0,109,2],[243,44,197,24],[244,0,197,24],[246,0,198,6],[246,14,198,10,"hasUnresolvedRefs"],[246,31,198,27],[246,32,198,28],[246,37,198,33,"props"],[246,42,198,27],[246,43,198,6],[246,45,198,41],[247,0,205,8],[247,17,205,13,"_updateEnqueued"],[247,32,205,8],[247,35,205,31,"setImmediate"],[247,47,205,43],[247,48,205,44],[247,60,205,50],[248,0,206,10],[248,14,206,10],[248,20,206,14],[248,21,206,15,"_updateEnqueued"],[248,36,206,10],[248,39,206,33],[248,43,206,10],[250,0,207,10],[250,14,207,10],[250,20,207,14],[250,21,207,15,"_update"],[250,28,207,10],[251,0,208,9],[251,13,205,43],[251,14,205,8],[252,0,209,7],[254,0,211,6],[254,15,211,11,"_createGestureHandler"],[254,36,211,6],[254,37,212,8,"filterConfig"],[254,49,212,20],[254,50,213,10,"transformProps"],[254,64,213,24],[254,67,213,27,"transformProps"],[254,81,213,41],[254,82,213,42],[254,87,213,47,"props"],[254,92,213,41],[254,93,213,24],[254,96,213,56],[254,101,213,61,"props"],[254,106,212,20],[254,140,214,15],[254,145,214,20,"constructor"],[254,156,214,15],[254,157,214,32,"propTypes"],[254,166,212,20],[254,168,214,46,"customNativeProps"],[254,185,212,20],[254,188,215,10,"config"],[254,194,212,20],[254,195,211,6],[256,0,218,6],[256,15,218,11,"_attachGestureHandler"],[256,36,218,6],[256,37,218,33],[256,70,218,48],[256,75,218,53,"_viewNode"],[256,84,218,33],[256,85,218,6],[257,0,219,5],[258,0,109,2],[259,0,109,2],[260,0,109,2],[260,45,221,25],[261,0,222,6],[261,14,222,12,"viewTag"],[261,21,222,19],[261,24,222,22],[261,57,222,37],[261,62,222,42,"_viewNode"],[261,71,222,22],[261,72,222,6],[263,0,223,6],[263,14,223,10],[263,19,223,15,"_viewTag"],[263,27,223,10],[263,32,223,28,"viewTag"],[263,39,223,6],[263,41,223,37],[264,0,224,8],[264,17,224,13,"_attachGestureHandler"],[264,38,224,8],[264,39,224,35,"viewTag"],[264,46,224,8],[265,0,225,7],[267,0,226,6],[267,15,226,11,"_update"],[267,22,226,6],[268,0,227,5],[269,0,109,2],[270,0,109,2],[271,0,109,2],[271,34,229,14],[272,0,230,6],[272,14,230,12,"newConfig"],[272,23,230,21],[272,26,230,24,"filterConfig"],[272,38,230,36],[272,39,231,8,"transformProps"],[272,53,231,22],[272,56,231,25,"transformProps"],[272,70,231,39],[272,71,231,40],[272,76,231,45,"props"],[272,81,231,39],[272,82,231,22],[272,85,231,54],[272,90,231,59,"props"],[272,95,230,36],[272,129,232,13],[272,134,232,18,"constructor"],[272,145,232,13],[272,146,232,30,"propTypes"],[272,155,230,36],[272,157,232,44,"customNativeProps"],[272,174,230,36],[272,177,233,8,"config"],[272,183,230,36],[272,184,230,6],[274,0,235,6],[274,14,235,10],[274,15,235,11],[274,38,235,21],[274,43,235,26,"_config"],[274,50,235,11],[274,52,235,35,"newConfig"],[274,61,235,11],[274,62,235,6],[274,64,235,47],[275,0,236,8],[275,17,236,13,"_updateGestureHandler"],[275,38,236,8],[275,39,236,35,"newConfig"],[275,48,236,8],[276,0,237,7],[277,0,238,5],[278,0,109,2],[279,0,109,2],[280,0,109,2],[280,39,240,19,"updates"],[280,46,109,2],[280,48,240,28],[281,0,241,6],[281,14,241,12,"mergedProps"],[281,25,241,23],[281,60,241,31],[281,65,241,36,"props"],[281,70,241,23],[281,72,241,46,"updates"],[281,79,241,23],[281,80,241,6],[282,0,242,6],[282,14,242,12,"newConfig"],[282,23,242,21],[282,26,242,24,"filterConfig"],[282,38,242,36],[282,39,243,8,"transformProps"],[282,53,243,22],[282,56,243,25,"transformProps"],[282,70,243,39],[282,71,243,40,"mergedProps"],[282,82,243,39],[282,83,243,22],[282,86,243,55,"mergedProps"],[282,97,242,36],[282,131,244,13],[282,136,244,18,"constructor"],[282,147,244,13],[282,148,244,30,"propTypes"],[282,157,242,36],[282,159,244,44,"customNativeProps"],[282,176,242,36],[282,179,245,8,"config"],[282,185,242,36],[282,186,242,6],[284,0,247,6],[284,15,247,11,"_updateGestureHandler"],[284,36,247,6],[284,37,247,33,"newConfig"],[284,46,247,6],[285,0,248,5],[286,0,109,2],[287,0,109,2],[288,0,109,2],[288,33,250,13],[289,0,251,6],[289,14,251,10,"gestureEventHandler"],[289,33,251,29],[289,36,251,32],[289,41,251,37,"_onGestureHandlerEvent"],[289,63,251,6],[290,0,250,13],[290,28,252,56],[290,33,252,61,"props"],[290,38,250,13],[291,0,250,13],[291,14,252,14,"onGestureEvent"],[291,28,250,13],[291,43,252,14,"onGestureEvent"],[291,57,250,13],[292,0,250,13],[292,14,252,30,"onGestureHandlerEvent"],[292,35,250,13],[292,50,252,30,"onGestureHandlerEvent"],[292,71,250,13],[294,0,253,6],[294,14,253,10,"onGestureEvent"],[294,28,253,24],[294,32,253,28],[294,39,253,35,"onGestureEvent"],[294,53,253,28],[294,58,253,54],[294,68,253,6],[294,70,253,66],[295,0,257,8],[295,16,257,12,"onGestureHandlerEvent"],[295,37,257,8],[295,39,257,35],[296,0,258,10],[296,20,258,16],[296,24,258,20,"Error"],[296,29,258,16],[296,30,259,12],[296,103,258,16],[296,104,258,10],[297,0,261,9],[299,0,262,8,"gestureEventHandler"],[299,12,262,8,"gestureEventHandler"],[299,31,262,27],[299,34,262,30],[299,39,262,35,"props"],[299,44,262,30],[299,45,262,41,"onGestureEvent"],[299,59,262,8],[300,0,263,7],[300,11,253,6],[300,17,263,13],[301,0,264,8],[301,16,265,10,"onGestureHandlerEvent"],[301,37,265,31],[301,41,266,10],[301,48,266,17,"onGestureHandlerEvent"],[301,69,266,10],[301,74,266,43],[301,84,264,8],[301,86,267,10],[302,0,268,10],[302,20,268,16],[302,24,268,20,"Error"],[302,29,268,16],[302,30,269,12],[302,103,268,16],[302,104,268,10],[303,0,271,9],[304,0,272,7],[306,0,274,6],[306,14,274,10,"gestureStateEventHandler"],[306,38,274,34],[306,41,274,37],[306,46,274,42,"_onGestureHandlerStateChange"],[306,74,274,6],[307,0,250,13],[307,29,275,68],[307,34,275,73,"props"],[307,39,250,13],[308,0,250,13],[308,14,275,14,"onHandlerStateChange"],[308,34,250,13],[308,50,275,14,"onHandlerStateChange"],[308,70,250,13],[309,0,250,13],[309,14,275,36,"onGestureHandlerStateChange"],[309,41,250,13],[309,57,275,36,"onGestureHandlerStateChange"],[309,84,250,13],[311,0,276,6],[311,14,276,10,"onHandlerStateChange"],[311,34,276,30],[311,38,276,34],[311,45,276,41,"onHandlerStateChange"],[311,65,276,34],[311,70,276,66],[311,80,276,6],[311,82,276,78],[312,0,280,8],[312,16,280,12,"onGestureHandlerStateChange"],[312,43,280,8],[312,45,280,41],[313,0,281,10],[313,20,281,16],[313,24,281,20,"Error"],[313,29,281,16],[313,30,282,12],[313,103,281,16],[313,104,281,10],[314,0,284,9],[316,0,285,8,"gestureStateEventHandler"],[316,12,285,8,"gestureStateEventHandler"],[316,36,285,32],[316,39,285,35],[316,44,285,40,"props"],[316,49,285,35],[316,50,285,46,"onHandlerStateChange"],[316,70,285,8],[317,0,286,7],[317,11,276,6],[317,17,286,13],[318,0,287,8],[318,16,288,10,"onGestureHandlerStateChange"],[318,43,288,37],[318,47,289,10],[318,54,289,17,"onGestureHandlerStateChange"],[318,81,289,10],[318,86,289,49],[318,96,287,8],[318,98,290,10],[319,0,291,10],[319,20,291,16],[319,24,291,20,"Error"],[319,29,291,16],[319,30,292,12],[319,103,291,16],[319,104,291,10],[320,0,294,9],[321,0,295,7],[323,0,297,6],[323,14,297,12,"child"],[323,19,297,17],[323,22,297,20,"React"],[323,37,297,26,"Children"],[323,45,297,20],[323,46,297,35,"only"],[323,50,297,20],[323,51,297,40],[323,56,297,45,"props"],[323,61,297,40],[323,62,297,51,"children"],[323,70,297,20],[323,71,297,6],[325,0,298,6],[325,14,298,10,"grandChildren"],[325,27,298,23],[325,30,298,26,"child"],[325,35,298,31],[325,36,298,32,"props"],[325,41,298,26],[325,42,298,38,"children"],[325,50,298,6],[327,0,299,6],[327,14,300,8,"Touchable"],[327,37,300,18,"TOUCH_TARGET_DEBUG"],[327,55,300,8],[327,59,301,8,"child"],[327,64,301,13],[327,65,301,14,"type"],[327,69,300,8],[327,74,302,9,"child"],[327,79,302,14],[327,80,302,15,"type"],[327,84,302,9],[327,89,302,24],[327,113,302,9],[327,117,303,10,"child"],[327,122,303,15],[327,123,303,16,"type"],[327,127,303,10],[327,128,303,21,"name"],[327,132,303,10],[327,137,303,30],[327,143,302,9],[327,147,304,10,"child"],[327,152,304,15],[327,153,304,16,"type"],[327,157,304,10],[327,158,304,21,"displayName"],[327,169,304,10],[327,174,304,37],[327,180,300,8],[327,181,299,6],[327,183,305,8],[328,0,306,8,"grandChildren"],[328,12,306,8,"grandChildren"],[328,25,306,21],[328,28,306,24,"React"],[328,43,306,30,"Children"],[328,51,306,24],[328,52,306,39,"toArray"],[328,59,306,24],[328,60,306,47,"grandChildren"],[328,73,306,24],[328,74,306,8],[329,0,307,8,"grandChildren"],[329,12,307,8,"grandChildren"],[329,25,307,21],[329,26,307,22,"push"],[329,30,307,8],[329,31,308,10,"Touchable"],[329,54,308,20,"renderDebugView"],[329,69,308,10],[329,70,308,36],[330,0,309,12,"color"],[330,14,309,12,"color"],[330,19,309,17],[330,21,309,19],[330,40,308,36],[331,0,310,12,"hitSlop"],[331,14,310,12,"hitSlop"],[331,21,310,19],[331,23,310,21,"child"],[331,28,310,26],[331,29,310,27,"props"],[331,34,310,21],[331,35,310,33,"hitSlop"],[332,0,308,36],[332,13,308,10],[332,14,307,8],[333,0,313,7],[335,0,314,6],[335,17,314,13,"React"],[335,32,314,19,"cloneElement"],[335,44,314,13],[335,45,315,8,"child"],[335,50,314,13],[335,52,316,8],[336,0,317,10,"ref"],[336,12,317,10,"ref"],[336,15,317,13],[336,17,317,15],[336,22,317,20,"_refHandler"],[336,33,316,8],[337,0,318,10,"collapsable"],[337,12,318,10,"collapsable"],[337,23,318,21],[337,25,318,23],[337,30,316,8],[338,0,319,10,"onGestureHandlerEvent"],[338,12,319,10,"onGestureHandlerEvent"],[338,33,319,31],[338,35,319,33,"gestureEventHandler"],[338,54,316,8],[339,0,320,10,"onGestureHandlerStateChange"],[339,12,320,10,"onGestureHandlerStateChange"],[339,39,320,37],[339,41,320,39,"gestureStateEventHandler"],[340,0,316,8],[340,11,314,13],[340,13,322,8,"grandChildren"],[340,26,314,13],[340,27,314,6],[341,0,324,5],[342,0,109,2],[343,0,109,2],[344,0,109,2],[344,6,110,24,"React"],[344,21,110,30,"Component"],[344,30,109,2],[346,0,110,8,"Handler"],[346,4,110,8,"Handler"],[346,11,109,2],[346,12,111,11,"displayName"],[346,23,109,2],[346,26,111,25,"handlerName"],[346,37,109,2],[347,0,110,8,"Handler"],[347,4,110,8,"Handler"],[347,11,109,2],[347,12,113,11,"propTypes"],[347,21,109,2],[347,24,113,23,"propTypes"],[347,33,109,2],[348,0,109,2],[349,0,326,2],[349,11,326,9,"Handler"],[349,18,326,2],[350,0,327,1]]},"type":"js/module"}]}