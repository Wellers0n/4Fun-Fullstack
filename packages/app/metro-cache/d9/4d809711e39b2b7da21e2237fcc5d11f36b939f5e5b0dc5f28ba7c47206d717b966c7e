{"dependencies":[{"name":"./isFunction","data":{"isAsync":false}},{"name":"./_isMasked","data":{"isAsync":false}},{"name":"./isObject","data":{"isAsync":false}},{"name":"./_toSource","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var isFunction = _$$_REQUIRE(_dependencyMap[0], \"./isFunction\"),\n      isMasked = _$$_REQUIRE(_dependencyMap[1], \"./_isMasked\"),\n      isObject = _$$_REQUIRE(_dependencyMap[2], \"./isObject\"),\n      toSource = _$$_REQUIRE(_dependencyMap[3], \"./_toSource\");\n\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n  var funcProto = Function.prototype,\n      objectProto = Object.prototype;\n  var funcToString = funcProto.toString;\n  var hasOwnProperty = objectProto.hasOwnProperty;\n  var reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&').replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$');\n\n  function baseIsNative(value) {\n    if (!isObject(value) || isMasked(value)) {\n      return false;\n    }\n\n    var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n    return pattern.test(toSource(value));\n  }\n\n  module.exports = baseIsNative;\n});","map":[[2,0,1,0],[2,6,1,4,"isFunction"],[2,16,1,14],[2,19,1,17,"require"],[2,30,1,24],[2,65,1,0],[3,0,1,0],[3,6,2,4,"isMasked"],[3,14,2,12],[3,17,2,15,"require"],[3,28,2,22],[3,62,1,0],[4,0,1,0],[4,6,3,4,"isObject"],[4,14,3,12],[4,17,3,15,"require"],[4,28,3,22],[4,61,1,0],[5,0,1,0],[5,6,4,4,"toSource"],[5,14,4,12],[5,17,4,15,"require"],[5,28,4,22],[5,62,1,0],[7,0,10,0],[7,6,10,4,"reRegExpChar"],[7,18,10,16],[7,21,10,19],[7,42,10,0],[8,0,13,0],[8,6,13,4,"reIsHostCtor"],[8,18,13,16],[8,21,13,19],[8,50,13,0],[9,0,16,0],[9,6,16,4,"funcProto"],[9,15,16,13],[9,18,16,16,"Function"],[9,26,16,24],[9,27,16,25,"prototype"],[9,36,16,0],[10,0,16,0],[10,6,17,4,"objectProto"],[10,17,17,15],[10,20,17,18,"Object"],[10,26,17,24],[10,27,17,25,"prototype"],[10,36,16,0],[11,0,20,0],[11,6,20,4,"funcToString"],[11,18,20,16],[11,21,20,19,"funcProto"],[11,30,20,28],[11,31,20,29,"toString"],[11,39,20,0],[12,0,23,0],[12,6,23,4,"hasOwnProperty"],[12,20,23,18],[12,23,23,21,"objectProto"],[12,34,23,32],[12,35,23,33,"hasOwnProperty"],[12,49,23,0],[13,0,26,0],[13,6,26,4,"reIsNative"],[13,16,26,14],[13,19,26,17,"RegExp"],[13,25,26,23],[13,26,26,24],[13,32,27,2,"funcToString"],[13,44,27,14],[13,45,27,15,"call"],[13,49,27,2],[13,50,27,20,"hasOwnProperty"],[13,64,27,2],[13,66,27,36,"replace"],[13,73,27,2],[13,74,27,44,"reRegExpChar"],[13,86,27,2],[13,88,27,58],[13,94,27,2],[13,96,28,3,"replace"],[13,103,27,2],[13,104,28,11],[13,160,27,2],[13,162,28,69],[13,169,27,2],[13,170,26,24],[13,173,28,80],[13,176,26,23],[13,177,26,0],[15,0,39,0],[15,11,39,9,"baseIsNative"],[15,23,39,0],[15,24,39,22,"value"],[15,29,39,0],[15,31,39,29],[16,0,40,2],[16,8,40,6],[16,9,40,7,"isObject"],[16,17,40,15],[16,18,40,16,"value"],[16,23,40,15],[16,24,40,6],[16,28,40,26,"isMasked"],[16,36,40,34],[16,37,40,35,"value"],[16,42,40,34],[16,43,40,2],[16,45,40,43],[17,0,41,4],[17,13,41,11],[17,18,41,4],[18,0,42,3],[20,0,43,2],[20,8,43,6,"pattern"],[20,15,43,13],[20,18,43,16,"isFunction"],[20,28,43,26],[20,29,43,27,"value"],[20,34,43,26],[20,35,43,16],[20,38,43,36,"reIsNative"],[20,48,43,16],[20,51,43,49,"reIsHostCtor"],[20,63,43,2],[21,0,44,2],[21,11,44,9,"pattern"],[21,18,44,16],[21,19,44,17,"test"],[21,23,44,9],[21,24,44,22,"toSource"],[21,32,44,30],[21,33,44,31,"value"],[21,38,44,30],[21,39,44,9],[21,40,44,2],[22,0,45,1],[24,0,47,0,"module"],[24,2,47,0,"module"],[24,8,47,6],[24,9,47,7,"exports"],[24,16,47,0],[24,19,47,17,"baseIsNative"],[24,31,47,0]]},"type":"js/module"}]}