{"dependencies":[{"name":"./_arrayPush","data":{"isAsync":false}},{"name":"./_isFlattenable","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var arrayPush = _$$_REQUIRE(_dependencyMap[0], \"./_arrayPush\"),\n      isFlattenable = _$$_REQUIRE(_dependencyMap[1], \"./_isFlattenable\");\n\n  function baseFlatten(array, depth, predicate, isStrict, result) {\n    var index = -1,\n        length = array.length;\n    predicate || (predicate = isFlattenable);\n    result || (result = []);\n\n    while (++index < length) {\n      var value = array[index];\n\n      if (depth > 0 && predicate(value)) {\n        if (depth > 1) {\n          baseFlatten(value, depth - 1, predicate, isStrict, result);\n        } else {\n          arrayPush(result, value);\n        }\n      } else if (!isStrict) {\n        result[result.length] = value;\n      }\n    }\n\n    return result;\n  }\n\n  module.exports = baseFlatten;\n});","map":[[2,0,1,0],[2,6,1,4,"arrayPush"],[2,15,1,13],[2,18,1,16,"require"],[2,29,1,23],[2,64,1,0],[3,0,1,0],[3,6,2,4,"isFlattenable"],[3,19,2,17],[3,22,2,20,"require"],[3,33,2,27],[3,72,1,0],[5,0,15,0],[5,11,15,9,"baseFlatten"],[5,22,15,0],[5,23,15,21,"array"],[5,28,15,0],[5,30,15,28,"depth"],[5,35,15,0],[5,37,15,35,"predicate"],[5,46,15,0],[5,48,15,46,"isStrict"],[5,56,15,0],[5,58,15,56,"result"],[5,64,15,0],[5,66,15,64],[6,0,16,2],[6,8,16,6,"index"],[6,13,16,11],[6,16,16,14],[6,17,16,15],[6,18,16,2],[7,0,16,2],[7,8,17,6,"length"],[7,14,17,12],[7,17,17,15,"array"],[7,22,17,20],[7,23,17,21,"length"],[7,29,16,2],[8,0,19,2,"predicate"],[8,4,19,2,"predicate"],[8,13,19,11],[8,18,19,16,"predicate"],[8,27,19,25],[8,30,19,28,"isFlattenable"],[8,43,19,11],[8,44,19,2],[9,0,20,2,"result"],[9,4,20,2,"result"],[9,10,20,8],[9,15,20,13,"result"],[9,21,20,19],[9,24,20,22],[9,26,20,8],[9,27,20,2],[11,0,22,2],[11,11,22,9],[11,13,22,11,"index"],[11,18,22,9],[11,21,22,19,"length"],[11,27,22,2],[11,29,22,27],[12,0,23,4],[12,10,23,8,"value"],[12,15,23,13],[12,18,23,16,"array"],[12,23,23,21],[12,24,23,22,"index"],[12,29,23,21],[12,30,23,4],[14,0,24,4],[14,10,24,8,"depth"],[14,15,24,13],[14,18,24,16],[14,19,24,8],[14,23,24,21,"predicate"],[14,32,24,30],[14,33,24,31,"value"],[14,38,24,30],[14,39,24,4],[14,41,24,39],[15,0,25,6],[15,12,25,10,"depth"],[15,17,25,15],[15,20,25,18],[15,21,25,6],[15,23,25,21],[16,0,27,8,"baseFlatten"],[16,10,27,8,"baseFlatten"],[16,21,27,19],[16,22,27,20,"value"],[16,27,27,19],[16,29,27,27,"depth"],[16,34,27,32],[16,37,27,35],[16,38,27,19],[16,40,27,38,"predicate"],[16,49,27,19],[16,51,27,49,"isStrict"],[16,59,27,19],[16,61,27,59,"result"],[16,67,27,19],[16,68,27,8],[17,0,28,7],[17,9,25,6],[17,15,28,13],[18,0,29,8,"arrayPush"],[18,10,29,8,"arrayPush"],[18,19,29,17],[18,20,29,18,"result"],[18,26,29,17],[18,28,29,26,"value"],[18,33,29,17],[18,34,29,8],[19,0,30,7],[20,0,31,5],[20,7,24,4],[20,13,31,11],[20,17,31,15],[20,18,31,16,"isStrict"],[20,26,31,11],[20,28,31,26],[21,0,32,6,"result"],[21,8,32,6,"result"],[21,14,32,12],[21,15,32,13,"result"],[21,21,32,19],[21,22,32,20,"length"],[21,28,32,12],[21,29,32,6],[21,32,32,30,"value"],[21,37,32,6],[22,0,33,5],[23,0,34,3],[25,0,35,2],[25,11,35,9,"result"],[25,17,35,2],[26,0,36,1],[28,0,38,0,"module"],[28,2,38,0,"module"],[28,8,38,6],[28,9,38,7,"exports"],[28,16,38,0],[28,19,38,17,"baseFlatten"],[28,30,38,0]]},"type":"js/module"}]}