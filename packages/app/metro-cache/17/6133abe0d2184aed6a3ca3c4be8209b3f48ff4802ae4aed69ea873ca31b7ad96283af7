{"dependencies":[{"name":"symbolicateStackTrace","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var symbolicateStackTrace = _$$_REQUIRE(_dependencyMap[0], \"symbolicateStackTrace\");\n\n  var cache = new Map();\n  var YellowBoxSymbolication = {\n    delete: function _delete(stack) {\n      cache.delete(getCacheKey(stack));\n    },\n    symbolicate: function symbolicate(stack) {\n      var key = getCacheKey(stack);\n      var promise = cache.get(key);\n\n      if (promise == null) {\n        promise = symbolicateStackTrace(stack).then(sanitize);\n        cache.set(key, promise);\n      }\n\n      return promise;\n    }\n  };\n\n  var getCacheKey = function getCacheKey(stack) {\n    return JSON.stringify(stack);\n  };\n\n  var sanitize = function sanitize(maybeStack) {\n    if (!Array.isArray(maybeStack)) {\n      throw new Error('Expected stack to be an array.');\n    }\n\n    var stack = [];\n\n    for (var _iterator = maybeStack, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var _maybeFrame = _ref;\n\n      if (typeof _maybeFrame !== 'object' || _maybeFrame == null) {\n        throw new Error('Expected each stack frame to be an object.');\n      }\n\n      if (typeof _maybeFrame.column !== 'number' && _maybeFrame.column != null) {\n        throw new Error('Expected stack frame `column` to be a nullable number.');\n      }\n\n      if (typeof _maybeFrame.file !== 'string') {\n        throw new Error('Expected stack frame `file` to be a string.');\n      }\n\n      if (typeof _maybeFrame.lineNumber !== 'number') {\n        throw new Error('Expected stack frame `lineNumber` to be a number.');\n      }\n\n      if (typeof _maybeFrame.methodName !== 'string') {\n        throw new Error('Expected stack frame `methodName` to be a string.');\n      }\n\n      stack.push({\n        column: _maybeFrame.column,\n        file: _maybeFrame.file,\n        lineNumber: _maybeFrame.lineNumber,\n        methodName: _maybeFrame.methodName\n      });\n    }\n\n    return stack;\n  };\n\n  module.exports = YellowBoxSymbolication;\n});","map":[[2,0,11,0],[4,0,13,0],[4,6,13,6,"symbolicateStackTrace"],[4,27,13,27],[4,30,13,30,"require"],[4,41,13,37],[4,85,13,0],[6,0,21,0],[6,6,21,6,"cache"],[6,11,21,42],[6,14,21,45],[6,18,21,49,"Map"],[6,21,21,45],[6,23,21,0],[7,0,23,0],[7,6,23,6,"YellowBoxSymbolication"],[7,28,23,28],[7,31,23,31],[8,0,24,2,"delete"],[8,4,24,2,"delete"],[8,10,23,31],[8,29,24,9,"stack"],[8,34,23,31],[8,36,24,29],[9,0,25,4,"cache"],[9,6,25,4,"cache"],[9,11,25,9],[9,12,25,10,"delete"],[9,18,25,4],[9,19,25,17,"getCacheKey"],[9,30,25,28],[9,31,25,29,"stack"],[9,36,25,28],[9,37,25,4],[10,0,26,3],[10,5,23,31],[11,0,28,2,"symbolicate"],[11,4,28,2,"symbolicate"],[11,15,23,31],[11,38,28,14,"stack"],[11,43,23,31],[11,45,28,44],[12,0,29,4],[12,10,29,10,"key"],[12,13,29,13],[12,16,29,16,"getCacheKey"],[12,27,29,27],[12,28,29,28,"stack"],[12,33,29,27],[12,34,29,4],[13,0,31,4],[13,10,31,8,"promise"],[13,17,31,15],[13,20,31,18,"cache"],[13,25,31,23],[13,26,31,24,"get"],[13,29,31,18],[13,30,31,28,"key"],[13,33,31,18],[13,34,31,4],[15,0,32,4],[15,10,32,8,"promise"],[15,17,32,15],[15,21,32,19],[15,25,32,4],[15,27,32,25],[16,0,33,6,"promise"],[16,8,33,6,"promise"],[16,15,33,13],[16,18,33,16,"symbolicateStackTrace"],[16,39,33,37],[16,40,33,38,"stack"],[16,45,33,37],[16,46,33,16],[16,47,33,45,"then"],[16,51,33,16],[16,52,33,50,"sanitize"],[16,60,33,16],[16,61,33,6],[17,0,34,6,"cache"],[17,8,34,6,"cache"],[17,13,34,11],[17,14,34,12,"set"],[17,17,34,6],[17,18,34,16,"key"],[17,21,34,6],[17,23,34,21,"promise"],[17,30,34,6],[18,0,35,5],[20,0,37,4],[20,13,37,11,"promise"],[20,20,37,4],[21,0,38,3],[22,0,23,31],[22,3,23,0],[24,0,41,0],[24,6,41,6,"getCacheKey"],[24,17,41,17],[24,20,41,20],[24,29,41,6,"getCacheKey"],[24,40,41,20],[24,41,41,21,"stack"],[24,46,41,20],[24,48,41,48],[25,0,42,2],[25,11,42,9,"JSON"],[25,15,42,13],[25,16,42,14,"stringify"],[25,25,42,9],[25,26,42,24,"stack"],[25,31,42,9],[25,32,42,2],[26,0,43,1],[26,3,41,0],[28,0,48,0],[28,6,48,6,"sanitize"],[28,14,48,14],[28,17,48,17],[28,26,48,6,"sanitize"],[28,34,48,17],[28,35,48,18,"maybeStack"],[28,45,48,17],[28,47,48,47],[29,0,49,2],[29,8,49,6],[29,9,49,7,"Array"],[29,14,49,12],[29,15,49,13,"isArray"],[29,22,49,7],[29,23,49,21,"maybeStack"],[29,33,49,7],[29,34,49,2],[29,36,49,34],[30,0,50,4],[30,12,50,10],[30,16,50,14,"Error"],[30,21,50,10],[30,22,50,20],[30,54,50,10],[30,55,50,4],[31,0,51,3],[33,0,52,2],[33,8,52,8,"stack"],[33,13,52,13],[33,16,52,16],[33,18,52,2],[35,0,53,2],[35,25,53,27,"maybeStack"],[35,35,53,2],[35,195,53,39],[36,0,53,39],[38,0,53,39],[39,0,53,39],[40,0,53,39],[41,0,53,39],[42,0,53,39],[43,0,53,39],[44,0,53,39],[45,0,53,39],[47,0,53,39],[47,10,53,13,"maybeFrame"],[47,21,53,39],[49,0,54,4],[49,10,54,8],[49,17,54,15,"maybeFrame"],[49,28,54,8],[49,33,54,30],[49,41,54,8],[49,45,54,42,"maybeFrame"],[49,56,54,52],[49,60,54,56],[49,64,54,4],[49,66,54,62],[50,0,55,6],[50,14,55,12],[50,18,55,16,"Error"],[50,23,55,12],[50,24,55,22],[50,68,55,12],[50,69,55,6],[51,0,56,5],[53,0,57,4],[53,10,57,8],[53,17,57,15,"maybeFrame"],[53,28,57,25],[53,29,57,26,"column"],[53,35,57,8],[53,40,57,37],[53,48,57,8],[53,52,57,49,"maybeFrame"],[53,63,57,59],[53,64,57,60,"column"],[53,70,57,49],[53,74,57,70],[53,78,57,4],[53,80,57,76],[54,0,58,6],[54,14,58,12],[54,18,58,16,"Error"],[54,23,58,12],[54,24,58,22],[54,80,58,12],[54,81,58,6],[55,0,59,5],[57,0,60,4],[57,10,60,8],[57,17,60,15,"maybeFrame"],[57,28,60,25],[57,29,60,26,"file"],[57,33,60,8],[57,38,60,35],[57,46,60,4],[57,48,60,45],[58,0,61,6],[58,14,61,12],[58,18,61,16,"Error"],[58,23,61,12],[58,24,61,22],[58,69,61,12],[58,70,61,6],[59,0,62,5],[61,0,63,4],[61,10,63,8],[61,17,63,15,"maybeFrame"],[61,28,63,25],[61,29,63,26,"lineNumber"],[61,39,63,8],[61,44,63,41],[61,52,63,4],[61,54,63,51],[62,0,64,6],[62,14,64,12],[62,18,64,16,"Error"],[62,23,64,12],[62,24,64,22],[62,75,64,12],[62,76,64,6],[63,0,65,5],[65,0,66,4],[65,10,66,8],[65,17,66,15,"maybeFrame"],[65,28,66,25],[65,29,66,26,"methodName"],[65,39,66,8],[65,44,66,41],[65,52,66,4],[65,54,66,51],[66,0,67,6],[66,14,67,12],[66,18,67,16,"Error"],[66,23,67,12],[66,24,67,22],[66,75,67,12],[66,76,67,6],[67,0,68,5],[69,0,69,4,"stack"],[69,6,69,4,"stack"],[69,11,69,9],[69,12,69,10,"push"],[69,16,69,4],[69,17,69,15],[70,0,70,6,"column"],[70,8,70,6,"column"],[70,14,70,12],[70,16,70,14,"maybeFrame"],[70,27,70,24],[70,28,70,25,"column"],[70,34,69,15],[71,0,71,6,"file"],[71,8,71,6,"file"],[71,12,71,10],[71,14,71,12,"maybeFrame"],[71,25,71,22],[71,26,71,23,"file"],[71,30,69,15],[72,0,72,6,"lineNumber"],[72,8,72,6,"lineNumber"],[72,18,72,16],[72,20,72,18,"maybeFrame"],[72,31,72,28],[72,32,72,29,"lineNumber"],[72,42,69,15],[73,0,73,6,"methodName"],[73,8,73,6,"methodName"],[73,18,73,16],[73,20,73,18,"maybeFrame"],[73,31,73,28],[73,32,73,29,"methodName"],[74,0,69,15],[74,7,69,4],[75,0,75,3],[77,0,76,2],[77,11,76,9,"stack"],[77,16,76,2],[78,0,77,1],[78,3,48,0],[80,0,79,0,"module"],[80,2,79,0,"module"],[80,8,79,6],[80,9,79,7,"exports"],[80,16,79,0],[80,19,79,17,"YellowBoxSymbolication"],[80,41,79,0]]},"type":"js/module"}]}