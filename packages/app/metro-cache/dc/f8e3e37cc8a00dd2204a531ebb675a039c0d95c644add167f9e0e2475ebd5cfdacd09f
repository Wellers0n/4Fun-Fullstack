{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"isAsync":false}},{"name":"invariant","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _slicedToArray = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n\n  var invariant = _$$_REQUIRE(_dependencyMap[1], \"invariant\");\n\n  function elementsThatOverlapOffsets(offsets, itemCount, getFrameMetrics) {\n    var out = [];\n    var outLength = 0;\n\n    for (var ii = 0; ii < itemCount; ii++) {\n      var frame = getFrameMetrics(ii);\n      var trailingOffset = frame.offset + frame.length;\n\n      for (var kk = 0; kk < offsets.length; kk++) {\n        if (out[kk] == null && trailingOffset >= offsets[kk]) {\n          out[kk] = ii;\n          outLength++;\n\n          if (kk === offsets.length - 1) {\n            invariant(outLength === offsets.length, 'bad offsets input, should be in increasing order: %s', JSON.stringify(offsets));\n            return out;\n          }\n        }\n      }\n    }\n\n    return out;\n  }\n\n  function newRangeCount(prev, next) {\n    return next.last - next.first + 1 - Math.max(0, 1 + Math.min(next.last, prev.last) - Math.max(next.first, prev.first));\n  }\n\n  function computeWindowedRenderLimits(props, prev, getFrameMetricsApprox, scrollMetrics) {\n    var data = props.data,\n        getItemCount = props.getItemCount,\n        maxToRenderPerBatch = props.maxToRenderPerBatch,\n        windowSize = props.windowSize;\n    var itemCount = getItemCount(data);\n\n    if (itemCount === 0) {\n      return prev;\n    }\n\n    var offset = scrollMetrics.offset,\n        velocity = scrollMetrics.velocity,\n        visibleLength = scrollMetrics.visibleLength;\n    var visibleBegin = Math.max(0, offset);\n    var visibleEnd = visibleBegin + visibleLength;\n    var overscanLength = (windowSize - 1) * visibleLength;\n    var leadFactor = 0.5;\n    var fillPreference = velocity > 1 ? 'after' : velocity < -1 ? 'before' : 'none';\n    var overscanBegin = Math.max(0, visibleBegin - (1 - leadFactor) * overscanLength);\n    var overscanEnd = Math.max(0, visibleEnd + leadFactor * overscanLength);\n    var lastItemOffset = getFrameMetricsApprox(itemCount - 1).offset;\n\n    if (lastItemOffset < overscanBegin) {\n      return {\n        first: Math.max(0, itemCount - 1 - maxToRenderPerBatch),\n        last: itemCount - 1\n      };\n    }\n\n    var _elementsThatOverlapO = elementsThatOverlapOffsets([overscanBegin, visibleBegin, visibleEnd, overscanEnd], props.getItemCount(props.data), getFrameMetricsApprox),\n        _elementsThatOverlapO2 = _slicedToArray(_elementsThatOverlapO, 4),\n        overscanFirst = _elementsThatOverlapO2[0],\n        first = _elementsThatOverlapO2[1],\n        last = _elementsThatOverlapO2[2],\n        overscanLast = _elementsThatOverlapO2[3];\n\n    overscanFirst = overscanFirst == null ? 0 : overscanFirst;\n    first = first == null ? Math.max(0, overscanFirst) : first;\n    overscanLast = overscanLast == null ? itemCount - 1 : overscanLast;\n    last = last == null ? Math.min(overscanLast, first + maxToRenderPerBatch - 1) : last;\n    var visible = {\n      first: first,\n      last: last\n    };\n    var newCellCount = newRangeCount(prev, visible);\n\n    while (true) {\n      if (first <= overscanFirst && last >= overscanLast) {\n        break;\n      }\n\n      var maxNewCells = newCellCount >= maxToRenderPerBatch;\n      var firstWillAddMore = first <= prev.first || first > prev.last;\n      var firstShouldIncrement = first > overscanFirst && (!maxNewCells || !firstWillAddMore);\n      var lastWillAddMore = last >= prev.last || last < prev.first;\n      var lastShouldIncrement = last < overscanLast && (!maxNewCells || !lastWillAddMore);\n\n      if (maxNewCells && !firstShouldIncrement && !lastShouldIncrement) {\n        break;\n      }\n\n      if (firstShouldIncrement && !(fillPreference === 'after' && lastShouldIncrement && lastWillAddMore)) {\n        if (firstWillAddMore) {\n          newCellCount++;\n        }\n\n        first--;\n      }\n\n      if (lastShouldIncrement && !(fillPreference === 'before' && firstShouldIncrement && firstWillAddMore)) {\n        if (lastWillAddMore) {\n          newCellCount++;\n        }\n\n        last++;\n      }\n    }\n\n    if (!(last >= first && first >= 0 && last < itemCount && first >= overscanFirst && last <= overscanLast && first <= visible.first && last >= visible.last)) {\n      throw new Error('Bad window calculation ' + JSON.stringify({\n        first: first,\n        last: last,\n        itemCount: itemCount,\n        overscanFirst: overscanFirst,\n        overscanLast: overscanLast,\n        visible: visible\n      }));\n    }\n\n    return {\n      first: first,\n      last: last\n    };\n  }\n\n  var VirtualizeUtils = {\n    computeWindowedRenderLimits: computeWindowedRenderLimits,\n    elementsThatOverlapOffsets: elementsThatOverlapOffsets,\n    newRangeCount: newRangeCount\n  };\n  module.exports = VirtualizeUtils;\n});","map":[[2,0,10,0],[6,0,12,0],[6,6,12,6,"invariant"],[6,15,12,15],[6,18,12,18,"require"],[6,29,12,25],[6,61,12,0],[8,0,19,0],[8,11,19,9,"elementsThatOverlapOffsets"],[8,37,19,0],[8,38,20,2,"offsets"],[8,45,19,0],[8,47,21,2,"itemCount"],[8,56,19,0],[8,58,22,2,"getFrameMetrics"],[8,73,19,0],[8,75,23,17],[9,0,24,2],[9,8,24,8,"out"],[9,11,24,11],[9,14,24,14],[9,16,24,2],[10,0,25,2],[10,8,25,6,"outLength"],[10,17,25,15],[10,20,25,18],[10,21,25,2],[12,0,26,2],[12,9,26,7],[12,13,26,11,"ii"],[12,15,26,13],[12,18,26,16],[12,19,26,2],[12,21,26,19,"ii"],[12,23,26,21],[12,26,26,24,"itemCount"],[12,35,26,2],[12,37,26,35,"ii"],[12,39,26,37],[12,41,26,2],[12,43,26,41],[13,0,27,4],[13,10,27,10,"frame"],[13,15,27,15],[13,18,27,18,"getFrameMetrics"],[13,33,27,33],[13,34,27,34,"ii"],[13,36,27,33],[13,37,27,4],[14,0,28,4],[14,10,28,10,"trailingOffset"],[14,24,28,24],[14,27,28,27,"frame"],[14,32,28,32],[14,33,28,33,"offset"],[14,39,28,27],[14,42,28,42,"frame"],[14,47,28,47],[14,48,28,48,"length"],[14,54,28,4],[16,0,29,4],[16,11,29,9],[16,15,29,13,"kk"],[16,17,29,15],[16,20,29,18],[16,21,29,4],[16,23,29,21,"kk"],[16,25,29,23],[16,28,29,26,"offsets"],[16,35,29,33],[16,36,29,34,"length"],[16,42,29,4],[16,44,29,42,"kk"],[16,46,29,44],[16,48,29,4],[16,50,29,48],[17,0,30,6],[17,12,30,10,"out"],[17,15,30,13],[17,16,30,14,"kk"],[17,18,30,13],[17,19,30,10],[17,23,30,21],[17,27,30,10],[17,31,30,29,"trailingOffset"],[17,45,30,43],[17,49,30,47,"offsets"],[17,56,30,54],[17,57,30,55,"kk"],[17,59,30,54],[17,60,30,6],[17,62,30,60],[18,0,31,8,"out"],[18,10,31,8,"out"],[18,13,31,11],[18,14,31,12,"kk"],[18,16,31,11],[18,17,31,8],[18,20,31,18,"ii"],[18,22,31,8],[19,0,32,8,"outLength"],[19,10,32,8,"outLength"],[19,19,32,17],[21,0,33,8],[21,14,33,12,"kk"],[21,16,33,14],[21,21,33,19,"offsets"],[21,28,33,26],[21,29,33,27,"length"],[21,35,33,19],[21,38,33,36],[21,39,33,8],[21,41,33,39],[22,0,34,10,"invariant"],[22,12,34,10,"invariant"],[22,21,34,19],[22,22,35,12,"outLength"],[22,31,35,21],[22,36,35,26,"offsets"],[22,43,35,33],[22,44,35,34,"length"],[22,50,34,19],[22,52,36,12],[22,106,34,19],[22,108,37,12,"JSON"],[22,112,37,16],[22,113,37,17,"stringify"],[22,122,37,12],[22,123,37,27,"offsets"],[22,130,37,12],[22,131,34,19],[22,132,34,10],[23,0,39,10],[23,19,39,17,"out"],[23,22,39,10],[24,0,40,9],[25,0,41,7],[26,0,42,5],[27,0,43,3],[29,0,44,2],[29,11,44,9,"out"],[29,14,44,2],[30,0,45,1],[32,0,53,0],[32,11,53,9,"newRangeCount"],[32,24,53,0],[32,25,54,2,"prev"],[32,29,53,0],[32,31,55,2,"next"],[32,35,53,0],[32,37,56,10],[33,0,57,2],[33,11,58,4,"next"],[33,15,58,8],[33,16,58,9,"last"],[33,20,58,4],[33,23,59,4,"next"],[33,27,59,8],[33,28,59,9,"first"],[33,33,58,4],[33,36,60,4],[33,37,58,4],[33,40,61,4,"Math"],[33,44,61,8],[33,45,61,9,"max"],[33,48,61,4],[33,49,62,6],[33,50,61,4],[33,52,63,6],[33,56,63,10,"Math"],[33,60,63,14],[33,61,63,15,"min"],[33,64,63,10],[33,65,63,19,"next"],[33,69,63,23],[33,70,63,24,"last"],[33,74,63,10],[33,76,63,30,"prev"],[33,80,63,34],[33,81,63,35,"last"],[33,85,63,10],[33,86,63,6],[33,89,63,43,"Math"],[33,93,63,47],[33,94,63,48,"max"],[33,97,63,43],[33,98,63,52,"next"],[33,102,63,56],[33,103,63,57,"first"],[33,108,63,43],[33,110,63,64,"prev"],[33,114,63,68],[33,115,63,69,"first"],[33,120,63,43],[33,121,61,4],[33,122,57,2],[34,0,66,1],[36,0,74,0],[36,11,74,9,"computeWindowedRenderLimits"],[36,38,74,0],[36,39,75,2,"props"],[36,44,74,0],[36,46,81,2,"prev"],[36,50,74,0],[36,52,82,2,"getFrameMetricsApprox"],[36,73,74,0],[36,75,83,2,"scrollMetrics"],[36,88,74,0],[36,90,89,33],[37,0,89,33],[37,8,90,9,"data"],[37,12,89,33],[37,15,90,64,"props"],[37,20,89,33],[37,21,90,9,"data"],[37,25,89,33],[38,0,89,33],[38,8,90,15,"getItemCount"],[38,20,89,33],[38,23,90,64,"props"],[38,28,89,33],[38,29,90,15,"getItemCount"],[38,41,89,33],[39,0,89,33],[39,8,90,29,"maxToRenderPerBatch"],[39,27,89,33],[39,30,90,64,"props"],[39,35,89,33],[39,36,90,29,"maxToRenderPerBatch"],[39,55,89,33],[40,0,89,33],[40,8,90,50,"windowSize"],[40,18,89,33],[40,21,90,64,"props"],[40,26,89,33],[40,27,90,50,"windowSize"],[40,37,89,33],[41,0,91,2],[41,8,91,8,"itemCount"],[41,17,91,17],[41,20,91,20,"getItemCount"],[41,32,91,32],[41,33,91,33,"data"],[41,37,91,32],[41,38,91,2],[43,0,92,2],[43,8,92,6,"itemCount"],[43,17,92,15],[43,22,92,20],[43,23,92,2],[43,25,92,23],[44,0,93,4],[44,13,93,11,"prev"],[44,17,93,4],[45,0,94,3],[47,0,89,33],[47,8,95,9,"offset"],[47,14,89,33],[47,17,95,44,"scrollMetrics"],[47,30,89,33],[47,31,95,9,"offset"],[47,37,89,33],[48,0,89,33],[48,8,95,17,"velocity"],[48,16,89,33],[48,19,95,44,"scrollMetrics"],[48,32,89,33],[48,33,95,17,"velocity"],[48,41,89,33],[49,0,89,33],[49,8,95,27,"visibleLength"],[49,21,89,33],[49,24,95,44,"scrollMetrics"],[49,37,89,33],[49,38,95,27,"visibleLength"],[49,51,89,33],[50,0,100,2],[50,8,100,8,"visibleBegin"],[50,20,100,20],[50,23,100,23,"Math"],[50,27,100,27],[50,28,100,28,"max"],[50,31,100,23],[50,32,100,32],[50,33,100,23],[50,35,100,35,"offset"],[50,41,100,23],[50,42,100,2],[51,0,101,2],[51,8,101,8,"visibleEnd"],[51,18,101,18],[51,21,101,21,"visibleBegin"],[51,33,101,33],[51,36,101,36,"visibleLength"],[51,49,101,2],[52,0,102,2],[52,8,102,8,"overscanLength"],[52,22,102,22],[52,25,102,25],[52,26,102,26,"windowSize"],[52,36,102,36],[52,39,102,39],[52,40,102,25],[52,44,102,44,"visibleLength"],[52,57,102,2],[53,0,105,2],[53,8,105,8,"leadFactor"],[53,18,105,18],[53,21,105,21],[53,24,105,2],[54,0,107,2],[54,8,107,8,"fillPreference"],[54,22,107,22],[54,25,108,4,"velocity"],[54,33,108,12],[54,36,108,15],[54,37,108,4],[54,40,108,19],[54,47,108,4],[54,50,108,29,"velocity"],[54,58,108,37],[54,61,108,40],[54,62,108,41],[54,63,108,29],[54,66,108,45],[54,74,108,29],[54,77,108,56],[54,83,107,2],[55,0,110,2],[55,8,110,8,"overscanBegin"],[55,21,110,21],[55,24,110,24,"Math"],[55,28,110,28],[55,29,110,29,"max"],[55,32,110,24],[55,33,111,4],[55,34,110,24],[55,36,112,4,"visibleBegin"],[55,48,112,16],[55,51,112,19],[55,52,112,20],[55,56,112,24,"leadFactor"],[55,66,112,19],[55,70,112,38,"overscanLength"],[55,84,110,24],[55,85,110,2],[56,0,114,2],[56,8,114,8,"overscanEnd"],[56,19,114,19],[56,22,114,22,"Math"],[56,26,114,26],[56,27,114,27,"max"],[56,30,114,22],[56,31,114,31],[56,32,114,22],[56,34,114,34,"visibleEnd"],[56,44,114,44],[56,47,114,47,"leadFactor"],[56,57,114,57],[56,60,114,60,"overscanLength"],[56,74,114,22],[56,75,114,2],[57,0,116,2],[57,8,116,8,"lastItemOffset"],[57,22,116,22],[57,25,116,25,"getFrameMetricsApprox"],[57,46,116,46],[57,47,116,47,"itemCount"],[57,56,116,56],[57,59,116,59],[57,60,116,46],[57,61,116,25],[57,62,116,62,"offset"],[57,68,116,2],[59,0,117,2],[59,8,117,6,"lastItemOffset"],[59,22,117,20],[59,25,117,23,"overscanBegin"],[59,38,117,2],[59,40,117,38],[60,0,119,4],[60,13,119,11],[61,0,120,6,"first"],[61,8,120,6,"first"],[61,13,120,11],[61,15,120,13,"Math"],[61,19,120,17],[61,20,120,18,"max"],[61,23,120,13],[61,24,120,22],[61,25,120,13],[61,27,120,25,"itemCount"],[61,36,120,34],[61,39,120,37],[61,40,120,25],[61,43,120,41,"maxToRenderPerBatch"],[61,62,120,13],[61,63,119,11],[62,0,121,6,"last"],[62,8,121,6,"last"],[62,12,121,10],[62,14,121,12,"itemCount"],[62,23,121,21],[62,26,121,24],[63,0,119,11],[63,7,119,4],[64,0,123,3],[66,0,89,33],[66,32,126,51,"elementsThatOverlapOffsets"],[66,58,126,77],[66,59,127,4],[66,60,127,5,"overscanBegin"],[66,73,127,4],[66,75,127,20,"visibleBegin"],[66,87,127,4],[66,89,127,34,"visibleEnd"],[66,99,127,4],[66,101,127,46,"overscanEnd"],[66,112,127,4],[66,113,126,77],[66,115,128,4,"props"],[66,120,128,9],[66,121,128,10,"getItemCount"],[66,133,128,4],[66,134,128,23,"props"],[66,139,128,28],[66,140,128,29,"data"],[66,144,128,4],[66,145,126,77],[66,147,129,4,"getFrameMetricsApprox"],[66,168,126,77],[66,169,89,33],[67,0,89,33],[68,0,89,33],[68,8,126,7,"overscanFirst"],[68,21,89,33],[69,0,89,33],[69,8,126,22,"first"],[69,13,89,33],[70,0,89,33],[70,8,126,29,"last"],[70,12,89,33],[71,0,89,33],[71,8,126,35,"overscanLast"],[71,20,89,33],[73,0,131,2,"overscanFirst"],[73,4,131,2,"overscanFirst"],[73,17,131,15],[73,20,131,18,"overscanFirst"],[73,33,131,31],[73,37,131,35],[73,41,131,18],[73,44,131,42],[73,45,131,18],[73,48,131,46,"overscanFirst"],[73,61,131,2],[74,0,132,2,"first"],[74,4,132,2,"first"],[74,9,132,7],[74,12,132,10,"first"],[74,17,132,15],[74,21,132,19],[74,25,132,10],[74,28,132,26,"Math"],[74,32,132,30],[74,33,132,31,"max"],[74,36,132,26],[74,37,132,35],[74,38,132,26],[74,40,132,38,"overscanFirst"],[74,53,132,26],[74,54,132,10],[74,57,132,55,"first"],[74,62,132,2],[75,0,133,2,"overscanLast"],[75,4,133,2,"overscanLast"],[75,16,133,14],[75,19,133,17,"overscanLast"],[75,31,133,29],[75,35,133,33],[75,39,133,17],[75,42,133,40,"itemCount"],[75,51,133,49],[75,54,133,52],[75,55,133,17],[75,58,133,56,"overscanLast"],[75,70,133,2],[76,0,134,2,"last"],[76,4,134,2,"last"],[76,8,134,6],[76,11,135,4,"last"],[76,15,135,8],[76,19,135,12],[76,23,135,4],[76,26,136,8,"Math"],[76,30,136,12],[76,31,136,13,"min"],[76,34,136,8],[76,35,136,17,"overscanLast"],[76,47,136,8],[76,49,136,31,"first"],[76,54,136,36],[76,57,136,39,"maxToRenderPerBatch"],[76,76,136,31],[76,79,136,61],[76,80,136,8],[76,81,135,4],[76,84,137,8,"last"],[76,88,134,2],[77,0,138,2],[77,8,138,8,"visible"],[77,15,138,15],[77,18,138,18],[78,0,138,19,"first"],[78,6,138,19,"first"],[78,11,138,24],[78,13,138,19,"first"],[78,18,138,18],[79,0,138,26,"last"],[79,6,138,26,"last"],[79,10,138,30],[79,12,138,26,"last"],[80,0,138,18],[80,5,138,2],[81,0,144,2],[81,8,144,6,"newCellCount"],[81,20,144,18],[81,23,144,21,"newRangeCount"],[81,36,144,34],[81,37,144,35,"prev"],[81,41,144,34],[81,43,144,41,"visible"],[81,50,144,34],[81,51,144,2],[83,0,146,2],[83,11,146,9],[83,15,146,2],[83,17,146,15],[84,0,147,4],[84,10,147,8,"first"],[84,15,147,13],[84,19,147,17,"overscanFirst"],[84,32,147,8],[84,36,147,34,"last"],[84,40,147,38],[84,44,147,42,"overscanLast"],[84,56,147,4],[84,58,147,56],[85,0,149,6],[86,0,150,5],[88,0,151,4],[88,10,151,10,"maxNewCells"],[88,21,151,21],[88,24,151,24,"newCellCount"],[88,36,151,36],[88,40,151,40,"maxToRenderPerBatch"],[88,59,151,4],[89,0,152,4],[89,10,152,10,"firstWillAddMore"],[89,26,152,26],[89,29,152,29,"first"],[89,34,152,34],[89,38,152,38,"prev"],[89,42,152,42],[89,43,152,43,"first"],[89,48,152,29],[89,52,152,52,"first"],[89,57,152,57],[89,60,152,60,"prev"],[89,64,152,64],[89,65,152,65,"last"],[89,69,152,4],[90,0,153,4],[90,10,153,10,"firstShouldIncrement"],[90,30,153,30],[90,33,154,6,"first"],[90,38,154,11],[90,41,154,14,"overscanFirst"],[90,54,154,6],[90,59,154,32],[90,60,154,33,"maxNewCells"],[90,71,154,32],[90,75,154,48],[90,76,154,49,"firstWillAddMore"],[90,92,154,6],[90,93,153,4],[91,0,155,4],[91,10,155,10,"lastWillAddMore"],[91,25,155,25],[91,28,155,28,"last"],[91,32,155,32],[91,36,155,36,"prev"],[91,40,155,40],[91,41,155,41,"last"],[91,45,155,28],[91,49,155,49,"last"],[91,53,155,53],[91,56,155,56,"prev"],[91,60,155,60],[91,61,155,61,"first"],[91,66,155,4],[92,0,156,4],[92,10,156,10,"lastShouldIncrement"],[92,29,156,29],[92,32,157,6,"last"],[92,36,157,10],[92,39,157,13,"overscanLast"],[92,51,157,6],[92,56,157,30],[92,57,157,31,"maxNewCells"],[92,68,157,30],[92,72,157,46],[92,73,157,47,"lastWillAddMore"],[92,88,157,6],[92,89,156,4],[94,0,158,4],[94,10,158,8,"maxNewCells"],[94,21,158,19],[94,25,158,23],[94,26,158,24,"firstShouldIncrement"],[94,46,158,8],[94,50,158,48],[94,51,158,49,"lastShouldIncrement"],[94,70,158,4],[94,72,158,70],[95,0,163,6],[96,0,164,5],[98,0,165,4],[98,10,166,6,"firstShouldIncrement"],[98,30,166,26],[98,34,167,6],[98,36,167,8,"fillPreference"],[98,50,167,22],[98,55,167,27],[98,62,167,8],[98,66,167,38,"lastShouldIncrement"],[98,85,167,8],[98,89,167,61,"lastWillAddMore"],[98,104,167,6],[98,105,165,4],[98,107,168,6],[99,0,169,6],[99,12,169,10,"firstWillAddMore"],[99,28,169,6],[99,30,169,28],[100,0,170,8,"newCellCount"],[100,10,170,8,"newCellCount"],[100,22,170,20],[101,0,171,7],[103,0,172,6,"first"],[103,8,172,6,"first"],[103,13,172,11],[104,0,173,5],[106,0,174,4],[106,10,175,6,"lastShouldIncrement"],[106,29,175,25],[106,33,176,6],[106,35,176,8,"fillPreference"],[106,49,176,22],[106,54,176,27],[106,62,176,8],[106,66,176,39,"firstShouldIncrement"],[106,86,176,8],[106,90,176,63,"firstWillAddMore"],[106,106,176,6],[106,107,174,4],[106,109,177,6],[107,0,178,6],[107,12,178,10,"lastWillAddMore"],[107,27,178,6],[107,29,178,27],[108,0,179,8,"newCellCount"],[108,10,179,8,"newCellCount"],[108,22,179,20],[109,0,180,7],[111,0,181,6,"last"],[111,8,181,6,"last"],[111,12,181,10],[112,0,182,5],[113,0,183,3],[115,0,184,2],[115,8,185,4],[115,10,186,6,"last"],[115,14,186,10],[115,18,186,14,"first"],[115,23,186,6],[115,27,187,6,"first"],[115,32,187,11],[115,36,187,15],[115,37,186,6],[115,41,188,6,"last"],[115,45,188,10],[115,48,188,13,"itemCount"],[115,57,186,6],[115,61,189,6,"first"],[115,66,189,11],[115,70,189,15,"overscanFirst"],[115,83,186,6],[115,87,190,6,"last"],[115,91,190,10],[115,95,190,14,"overscanLast"],[115,107,186,6],[115,111,191,6,"first"],[115,116,191,11],[115,120,191,15,"visible"],[115,127,191,22],[115,128,191,23,"first"],[115,133,186,6],[115,137,192,6,"last"],[115,141,192,10],[115,145,192,14,"visible"],[115,152,192,21],[115,153,192,22,"last"],[115,157,185,4],[115,158,184,2],[115,160,194,4],[116,0,195,4],[116,12,195,10],[116,16,195,14,"Error"],[116,21,195,10],[116,22,196,6],[116,50,197,8,"JSON"],[116,54,197,12],[116,55,197,13,"stringify"],[116,64,197,8],[116,65,197,23],[117,0,198,10,"first"],[117,8,198,10,"first"],[117,13,198,15],[117,15,198,10,"first"],[117,20,197,23],[118,0,199,10,"last"],[118,8,199,10,"last"],[118,12,199,14],[118,14,199,10,"last"],[118,18,197,23],[119,0,200,10,"itemCount"],[119,8,200,10,"itemCount"],[119,17,200,19],[119,19,200,10,"itemCount"],[119,28,197,23],[120,0,201,10,"overscanFirst"],[120,8,201,10,"overscanFirst"],[120,21,201,23],[120,23,201,10,"overscanFirst"],[120,36,197,23],[121,0,202,10,"overscanLast"],[121,8,202,10,"overscanLast"],[121,20,202,22],[121,22,202,10,"overscanLast"],[121,34,197,23],[122,0,203,10,"visible"],[122,8,203,10,"visible"],[122,15,203,17],[122,17,203,10,"visible"],[123,0,197,23],[123,7,197,8],[123,8,195,10],[123,9,195,4],[124,0,206,3],[126,0,207,2],[126,11,207,9],[127,0,207,10,"first"],[127,6,207,10,"first"],[127,11,207,15],[127,13,207,10,"first"],[127,18,207,9],[128,0,207,17,"last"],[128,6,207,17,"last"],[128,10,207,21],[128,12,207,17,"last"],[129,0,207,9],[129,5,207,2],[130,0,208,1],[132,0,210,0],[132,6,210,6,"VirtualizeUtils"],[132,21,210,21],[132,24,210,24],[133,0,211,2,"computeWindowedRenderLimits"],[133,4,211,2,"computeWindowedRenderLimits"],[133,31,211,29],[133,33,211,2,"computeWindowedRenderLimits"],[133,60,210,24],[134,0,212,2,"elementsThatOverlapOffsets"],[134,4,212,2,"elementsThatOverlapOffsets"],[134,30,212,28],[134,32,212,2,"elementsThatOverlapOffsets"],[134,58,210,24],[135,0,213,2,"newRangeCount"],[135,4,213,2,"newRangeCount"],[135,17,213,15],[135,19,213,2,"newRangeCount"],[136,0,210,24],[136,3,210,0],[137,0,216,0,"module"],[137,2,216,0,"module"],[137,8,216,6],[137,9,216,7,"exports"],[137,16,216,0],[137,19,216,17,"VirtualizeUtils"],[137,34,216,0]]},"type":"js/module"}]}