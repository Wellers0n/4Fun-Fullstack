{"dependencies":[{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"bezier","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/classCallCheck\");\n\n  var _createClass = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/createClass\");\n\n  var _ease;\n\n  var Easing = function () {\n    function Easing() {\n      _classCallCheck(this, Easing);\n    }\n\n    _createClass(Easing, null, [{\n      key: \"step0\",\n      value: function step0(n) {\n        return n > 0 ? 1 : 0;\n      }\n    }, {\n      key: \"step1\",\n      value: function step1(n) {\n        return n >= 1 ? 1 : 0;\n      }\n    }, {\n      key: \"linear\",\n      value: function linear(t) {\n        return t;\n      }\n    }, {\n      key: \"ease\",\n      value: function ease(t) {\n        if (!_ease) {\n          _ease = Easing.bezier(0.42, 0, 1, 1);\n        }\n\n        return _ease(t);\n      }\n    }, {\n      key: \"quad\",\n      value: function quad(t) {\n        return t * t;\n      }\n    }, {\n      key: \"cubic\",\n      value: function cubic(t) {\n        return t * t * t;\n      }\n    }, {\n      key: \"poly\",\n      value: function poly(n) {\n        return function (t) {\n          return Math.pow(t, n);\n        };\n      }\n    }, {\n      key: \"sin\",\n      value: function sin(t) {\n        return 1 - Math.cos(t * Math.PI / 2);\n      }\n    }, {\n      key: \"circle\",\n      value: function circle(t) {\n        return 1 - Math.sqrt(1 - t * t);\n      }\n    }, {\n      key: \"exp\",\n      value: function exp(t) {\n        return Math.pow(2, 10 * (t - 1));\n      }\n    }, {\n      key: \"elastic\",\n      value: function elastic() {\n        var bounciness = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n        var p = bounciness * Math.PI;\n        return function (t) {\n          return 1 - Math.pow(Math.cos(t * Math.PI / 2), 3) * Math.cos(t * p);\n        };\n      }\n    }, {\n      key: \"back\",\n      value: function back() {\n        var s = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1.70158;\n        return function (t) {\n          return t * t * ((s + 1) * t - s);\n        };\n      }\n    }, {\n      key: \"bounce\",\n      value: function bounce(t) {\n        if (t < 1 / 2.75) {\n          return 7.5625 * t * t;\n        }\n\n        if (t < 2 / 2.75) {\n          var _t = t - 1.5 / 2.75;\n\n          return 7.5625 * _t * _t + 0.75;\n        }\n\n        if (t < 2.5 / 2.75) {\n          var _t2 = t - 2.25 / 2.75;\n\n          return 7.5625 * _t2 * _t2 + 0.9375;\n        }\n\n        var t2 = t - 2.625 / 2.75;\n        return 7.5625 * t2 * t2 + 0.984375;\n      }\n    }, {\n      key: \"bezier\",\n      value: function bezier(x1, y1, x2, y2) {\n        var _bezier = _$$_REQUIRE(_dependencyMap[2], \"bezier\");\n\n        return _bezier(x1, y1, x2, y2);\n      }\n    }, {\n      key: \"in\",\n      value: function _in(easing) {\n        return easing;\n      }\n    }, {\n      key: \"out\",\n      value: function out(easing) {\n        return function (t) {\n          return 1 - easing(1 - t);\n        };\n      }\n    }, {\n      key: \"inOut\",\n      value: function inOut(easing) {\n        return function (t) {\n          if (t < 0.5) {\n            return easing(t * 2) / 2;\n          }\n\n          return 1 - easing((1 - t) * 2) / 2;\n        };\n      }\n    }]);\n\n    return Easing;\n  }();\n\n  module.exports = Easing;\n});","map":[[2,0,11,0],[8,0,13,0],[8,6,13,4,"ease"],[8,11,13,0],[10,6,60,6,"Easing"],[10,12],[17,28,64,15,"n"],[17,29],[17,31,64,26],[18,0,65,4],[18,15,65,11,"n"],[18,16,65,12],[18,19,65,15],[18,20,65,11],[18,23,65,19],[18,24,65,11],[18,27,65,23],[18,28,65,4],[19,0,66,3],[22,28,71,15,"n"],[22,29],[22,31,71,26],[23,0,72,4],[23,15,72,11,"n"],[23,16,72,12],[23,20,72,16],[23,21,72,11],[23,24,72,20],[23,25,72,11],[23,28,72,24],[23,29,72,4],[24,0,73,3],[27,29,81,16,"t"],[27,30],[27,32,81,27],[28,0,82,4],[28,15,82,11,"t"],[28,16,82,4],[29,0,83,3],[32,27,91,14,"t"],[32,28],[32,30,91,33],[33,0,92,4],[33,12,92,8],[33,13,92,9,"ease"],[33,18,92,4],[33,20,92,15],[34,0,93,6,"ease"],[34,10,93,6,"ease"],[34,15,93,10],[34,18,93,13,"Easing"],[34,24,93,19],[34,25,93,20,"bezier"],[34,31,93,13],[34,32,93,27],[34,36,93,13],[34,38,93,33],[34,39,93,13],[34,41,93,36],[34,42,93,13],[34,44,93,39],[34,45,93,13],[34,46,93,6],[35,0,94,5],[37,0,95,4],[37,15,95,11,"ease"],[37,20,95,15],[37,21,95,16,"t"],[37,22,95,15],[37,23,95,4],[38,0,96,3],[41,27,104,14,"t"],[41,28],[41,30,104,25],[42,0,105,4],[42,15,105,11,"t"],[42,16,105,12],[42,19,105,15,"t"],[42,20,105,4],[43,0,106,3],[46,28,114,15,"t"],[46,29],[46,31,114,26],[47,0,115,4],[47,15,115,11,"t"],[47,16,115,12],[47,19,115,15,"t"],[47,20,115,11],[47,23,115,19,"t"],[47,24,115,4],[48,0,116,3],[51,27,124,14,"n"],[51,28],[51,30,124,25],[52,0,125,4],[52,15,125,11],[52,25,125,12,"t"],[52,26,125,11],[53,0,125,11],[53,17,125,26,"Math"],[53,21,125,30],[53,22,125,31,"pow"],[53,25,125,26],[53,26,125,35,"t"],[53,27,125,26],[53,29,125,38,"n"],[53,30,125,26],[53,31,125,11],[54,0,125,11],[54,9,125,4],[55,0,126,3],[58,26,133,13,"t"],[58,27],[58,29,133,24],[59,0,134,4],[59,15,134,11],[59,19,134,15,"Math"],[59,23,134,19],[59,24,134,20,"cos"],[59,27,134,15],[59,28,134,25,"t"],[59,29,134,26],[59,32,134,29,"Math"],[59,36,134,33],[59,37,134,34,"PI"],[59,39,134,24],[59,42,134,40],[59,43,134,15],[59,44,134,4],[60,0,135,3],[63,29,142,16,"t"],[63,30],[63,32,142,27],[64,0,143,4],[64,15,143,11],[64,19,143,15,"Math"],[64,23,143,19],[64,24,143,20,"sqrt"],[64,28,143,15],[64,29,143,25],[64,33,143,29,"t"],[64,34,143,30],[64,37,143,33,"t"],[64,38,143,15],[64,39,143,4],[65,0,144,3],[68,26,151,13,"t"],[68,27],[68,29,151,24],[69,0,152,4],[69,15,152,11,"Math"],[69,19,152,15],[69,20,152,16,"pow"],[69,23,152,11],[69,24,152,20],[69,25,152,11],[69,27,152,23],[69,33,152,29,"t"],[69,34,152,30],[69,37,152,33],[69,38,152,23],[69,39,152,11],[69,40,152,4],[70,0,153,3],[73,32,165,64],[74,0,165,64],[74,12,165,17,"bounciness"],[74,22,165,64],[74,93,165,38],[74,94,165,64],[75,0,166,4],[75,12,166,10,"p"],[75,13,166,11],[75,16,166,14,"bounciness"],[75,26,166,24],[75,29,166,27,"Math"],[75,33,166,31],[75,34,166,32,"PI"],[75,36,166,4],[76,0,167,4],[76,15,167,11],[76,25,167,11,"t"],[76,26,167,12],[77,0,167,12],[77,17,167,16],[77,21,167,20,"Math"],[77,25,167,24],[77,26,167,25,"pow"],[77,29,167,20],[77,30,167,29,"Math"],[77,34,167,33],[77,35,167,34,"cos"],[77,38,167,29],[77,39,167,39,"t"],[77,40,167,40],[77,43,167,43,"Math"],[77,47,167,47],[77,48,167,48,"PI"],[77,50,167,38],[77,53,167,54],[77,54,167,29],[77,55,167,20],[77,57,167,58],[77,58,167,20],[77,62,167,63,"Math"],[77,66,167,67],[77,67,167,68,"cos"],[77,70,167,63],[77,71,167,72,"t"],[77,72,167,73],[77,75,167,76,"p"],[77,76,167,63],[77,77,167,12],[78,0,167,12],[78,9,167,4],[79,0,168,3],[82,29,178,58],[83,0,178,58],[83,12,178,14,"s"],[83,13,178,58],[83,84,178,26],[83,91,178,58],[84,0,179,4],[84,15,179,11],[84,25,179,11,"t"],[84,26,179,12],[85,0,179,12],[85,17,179,16,"t"],[85,18,179,17],[85,21,179,20,"t"],[85,22,179,16],[85,26,179,25],[85,27,179,26,"s"],[85,28,179,27],[85,31,179,30],[85,32,179,25],[85,36,179,35,"t"],[85,37,179,25],[85,40,179,39,"s"],[85,41,179,16],[85,42,179,12],[86,0,179,12],[86,9,179,4],[87,0,180,3],[90,29,187,16,"t"],[90,30],[90,32,187,35],[91,0,188,4],[91,12,188,8,"t"],[91,13,188,9],[91,16,188,12],[91,20,188,16],[91,24,188,4],[91,26,188,22],[92,0,189,6],[92,17,189,13],[92,26,189,22,"t"],[92,27,189,13],[92,30,189,26,"t"],[92,31,189,6],[93,0,190,5],[95,0,192,4],[95,12,192,8,"t"],[95,13,192,9],[95,16,192,12],[95,20,192,16],[95,24,192,4],[95,26,192,22],[96,0,193,6],[96,14,193,12,"t2"],[96,16,193,14],[96,19,193,17,"t"],[96,20,193,18],[96,23,193,21],[96,29,193,27],[96,33,193,6],[98,0,194,6],[98,17,194,13],[98,26,194,22,"t2"],[98,28,194,13],[98,31,194,27,"t2"],[98,33,194,13],[98,36,194,32],[98,40,194,6],[99,0,195,5],[101,0,197,4],[101,12,197,8,"t"],[101,13,197,9],[101,16,197,12],[101,22,197,18],[101,26,197,4],[101,28,197,24],[102,0,198,6],[102,14,198,12,"t2"],[102,17,198,14],[102,20,198,17,"t"],[102,21,198,18],[102,24,198,21],[102,31,198,28],[102,35,198,6],[104,0,199,6],[104,17,199,13],[104,26,199,22,"t2"],[104,29,199,13],[104,32,199,27,"t2"],[104,35,199,13],[104,38,199,32],[104,44,199,6],[105,0,200,5],[107,0,202,4],[107,12,202,10,"t2"],[107,14,202,12],[107,17,202,15,"t"],[107,18,202,16],[107,21,202,19],[107,29,202,27],[107,33,202,4],[108,0,203,4],[108,15,203,11],[108,24,203,20,"t2"],[108,26,203,11],[108,29,203,25,"t2"],[108,31,203,11],[108,34,203,30],[108,42,203,4],[109,0,204,3],[112,29,214,4,"x1"],[112,31],[112,33,215,4,"y1"],[112,35],[112,37,216,4,"x2"],[112,39],[112,41,217,4,"y2"],[112,43],[112,45,218,27],[113,0,219,4],[113,12,219,10,"_bezier"],[113,19,219,17],[113,22,219,20,"require"],[113,33,219,27],[113,62,219,4],[115,0,220,4],[115,15,220,11,"_bezier"],[115,22,220,18],[115,23,220,19,"x1"],[115,25,220,18],[115,27,220,23,"y1"],[115,29,220,18],[115,31,220,27,"x2"],[115,33,220,18],[115,35,220,31,"y2"],[115,37,220,18],[115,38,220,4],[116,0,221,3],[119,26,226,12,"easing"],[119,32],[119,34,226,66],[120,0,227,4],[120,15,227,11,"easing"],[120,21,227,4],[121,0,228,3],[124,26,233,13,"easing"],[124,32],[124,34,233,67],[125,0,234,4],[125,15,234,11],[125,25,234,11,"t"],[125,26,234,12],[126,0,234,12],[126,17,234,16],[126,21,234,20,"easing"],[126,27,234,26],[126,28,234,27],[126,32,234,31,"t"],[126,33,234,26],[126,34,234,12],[127,0,234,12],[127,9,234,4],[128,0,235,3],[131,28,242,15,"easing"],[131,34],[131,36,242,69],[132,0,243,4],[132,15,243,11],[132,25,243,11,"t"],[132,26,243,12],[132,28,243,16],[133,0,244,6],[133,14,244,10,"t"],[133,15,244,11],[133,18,244,14],[133,21,244,6],[133,23,244,19],[134,0,245,8],[134,19,245,15,"easing"],[134,25,245,21],[134,26,245,22,"t"],[134,27,245,23],[134,30,245,26],[134,31,245,21],[134,32,245,15],[134,35,245,31],[134,36,245,8],[135,0,246,7],[137,0,247,6],[137,17,247,13],[137,21,247,17,"easing"],[137,27,247,23],[137,28,247,24],[137,29,247,25],[137,33,247,29,"t"],[137,34,247,24],[137,38,247,34],[137,39,247,23],[137,40,247,17],[137,43,247,39],[137,44,247,6],[138,0,248,5],[138,9,243,4],[139,0,249,3],[145,0,252,0,"module"],[145,2,252,0,"module"],[145,8,252,6],[145,9,252,7,"exports"],[145,16,252,0],[145,19,252,17,"Easing"],[145,25,252,0]]},"type":"js/module"}]}