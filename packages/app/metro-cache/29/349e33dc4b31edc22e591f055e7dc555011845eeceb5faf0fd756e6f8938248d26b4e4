{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/objectSpread","data":{"isAsync":false}},{"name":"@react-navigation/core","data":{"isAsync":false}},{"name":"./DrawerActions","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/objectSpread\"));\n\n  var _core = _$$_REQUIRE(_dependencyMap[2], \"@react-navigation/core\");\n\n  var _DrawerActions = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"./DrawerActions\"));\n\n  function withDefaultValue(obj, key, defaultValue) {\n    if (obj.hasOwnProperty(key) && typeof obj[key] !== 'undefined') {\n      return obj;\n    }\n\n    obj[key] = defaultValue;\n    return obj;\n  }\n\n  var getActiveRouteKey = function getActiveRouteKey(route) {\n    if (route.routes && route.routes[route.index]) {\n      return getActiveRouteKey(route.routes[route.index]);\n    }\n\n    return route.key;\n  };\n\n  var _default = function _default(routeConfigs) {\n    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    config = (0, _objectSpread2.default)({}, config);\n    config = withDefaultValue(config, 'resetOnBlur', config.unmountInactiveRoutes ? true : !!config.resetOnBlur);\n    config = withDefaultValue(config, 'backBehavior', 'initialRoute');\n    var switchRouter = (0, _core.SwitchRouter)(routeConfigs, config);\n\n    var __id = -1;\n\n    var genId = function genId() {\n      __id++;\n      return __id;\n    };\n\n    return (0, _objectSpread2.default)({}, switchRouter, {\n      getActionCreators: function getActionCreators(route, navStateKey) {\n        return (0, _objectSpread2.default)({\n          openDrawer: function openDrawer() {\n            return _DrawerActions.default.openDrawer({\n              key: navStateKey\n            });\n          },\n          closeDrawer: function closeDrawer() {\n            return _DrawerActions.default.closeDrawer({\n              key: navStateKey\n            });\n          },\n          toggleDrawer: function toggleDrawer() {\n            return _DrawerActions.default.toggleDrawer({\n              key: navStateKey\n            });\n          }\n        }, switchRouter.getActionCreators(route, navStateKey));\n      },\n      getStateForAction: function getStateForAction(action, state) {\n        if (!state) {\n          return (0, _objectSpread2.default)({}, switchRouter.getStateForAction(action, undefined), {\n            isDrawerOpen: false,\n            isDrawerIdle: true,\n            drawerMovementDirection: null,\n            openId: genId(),\n            closeId: genId(),\n            toggleId: genId()\n          });\n        }\n\n        var isRouterTargeted = action.key == null || action.key === state.key;\n\n        if (isRouterTargeted) {\n          if (action.type === _DrawerActions.default.DRAWER_CLOSED) {\n            return (0, _objectSpread2.default)({}, state, {\n              isDrawerOpen: false,\n              isDrawerIdle: true,\n              drawerMovementDirection: null\n            });\n          }\n\n          if (action.type === _DrawerActions.default.DRAWER_OPENED) {\n            return (0, _objectSpread2.default)({}, state, {\n              isDrawerOpen: true,\n              isDrawerIdle: true,\n              drawerMovementDirection: null\n            });\n          }\n\n          if (action.type === _DrawerActions.default.CLOSE_DRAWER) {\n            return (0, _objectSpread2.default)({}, state, {\n              closeId: genId()\n            });\n          }\n\n          if (action.type === _DrawerActions.default.MARK_DRAWER_SETTLING) {\n            return (0, _objectSpread2.default)({}, state, {\n              isDrawerIdle: false,\n              drawerMovementDirection: action.willShow ? 'opening' : 'closing'\n            });\n          }\n\n          if (action.type === _DrawerActions.default.MARK_DRAWER_ACTIVE) {\n            return (0, _objectSpread2.default)({}, state, {\n              isDrawerIdle: false,\n              drawerMovementDirection: null\n            });\n          }\n\n          if (action.type === _DrawerActions.default.MARK_DRAWER_IDLE) {\n            return (0, _objectSpread2.default)({}, state, {\n              isDrawerIdle: true,\n              drawerMovementDirection: null\n            });\n          }\n\n          if (action.type === _core.NavigationActions.BACK && (state.isDrawerOpen || !state.isDrawerIdle) && state.drawerMovementDirection !== 'closing') {\n            return (0, _objectSpread2.default)({}, state, {\n              closeId: genId()\n            });\n          }\n\n          if (action.type === _DrawerActions.default.OPEN_DRAWER) {\n            return (0, _objectSpread2.default)({}, state, {\n              openId: genId()\n            });\n          }\n\n          if (action.type === _DrawerActions.default.TOGGLE_DRAWER) {\n            return (0, _objectSpread2.default)({}, state, {\n              toggleId: genId()\n            });\n          }\n        }\n\n        var switchedState = switchRouter.getStateForAction(action, state);\n\n        if (switchedState === null) {\n          return null;\n        }\n\n        if (switchedState !== state) {\n          if (getActiveRouteKey(switchedState) !== getActiveRouteKey(state) && (state.isDrawerOpen || state.drawerMovementDirection !== 'closing')) {\n            return (0, _objectSpread2.default)({}, switchedState, {\n              closeId: genId()\n            });\n          }\n\n          return switchedState;\n        }\n\n        return state;\n      }\n    });\n  };\n\n  exports.default = _default;\n});","map":[[11,0,1,0],[13,0,2,0],[15,0,4,0],[15,11,4,9,"withDefaultValue"],[15,27,4,0],[15,28,4,26,"obj"],[15,31,4,0],[15,33,4,31,"key"],[15,36,4,0],[15,38,4,36,"defaultValue"],[15,50,4,0],[15,52,4,50],[16,0,5,2],[16,8,5,6,"obj"],[16,11,5,9],[16,12,5,10,"hasOwnProperty"],[16,26,5,6],[16,27,5,25,"key"],[16,30,5,6],[16,35,5,33],[16,42,5,40,"obj"],[16,45,5,43],[16,46,5,44,"key"],[16,49,5,43],[16,50,5,33],[16,55,5,53],[16,66,5,2],[16,68,5,66],[17,0,6,4],[17,13,6,11,"obj"],[17,16,6,4],[18,0,7,3],[20,0,9,2,"obj"],[20,4,9,2,"obj"],[20,7,9,5],[20,8,9,6,"key"],[20,11,9,5],[20,12,9,2],[20,15,9,13,"defaultValue"],[20,27,9,2],[21,0,10,2],[21,11,10,9,"obj"],[21,14,10,2],[22,0,11,1],[24,0,13,0],[24,6,13,6,"getActiveRouteKey"],[24,23,13,23],[24,26,13,26],[24,35,13,6,"getActiveRouteKey"],[24,52,13,26],[24,53,13,26,"route"],[24,58,13,31],[24,60,13,35],[25,0,14,2],[25,8,14,6,"route"],[25,13,14,11],[25,14,14,12,"routes"],[25,20,14,6],[25,24,14,22,"route"],[25,29,14,27],[25,30,14,28,"routes"],[25,36,14,22],[25,37,14,35,"route"],[25,42,14,40],[25,43,14,41,"index"],[25,48,14,22],[25,49,14,2],[25,51,14,49],[26,0,15,4],[26,13,15,11,"getActiveRouteKey"],[26,30,15,28],[26,31,15,29,"route"],[26,36,15,34],[26,37,15,35,"routes"],[26,43,15,29],[26,44,15,42,"route"],[26,49,15,47],[26,50,15,48,"index"],[26,55,15,29],[26,56,15,28],[26,57,15,4],[27,0,16,3],[29,0,17,2],[29,11,17,9,"route"],[29,16,17,14],[29,17,17,15,"key"],[29,20,17,2],[30,0,18,1],[30,3,13,0],[32,17,20,16],[32,35,20,17,"routeConfigs"],[32,47,20,16],[32,49,20,47],[33,0,20,47],[33,8,20,31,"config"],[33,14,20,47],[33,85,20,40],[33,87,20,47],[34,0,21,2,"config"],[34,4,21,2,"config"],[34,10,21,8],[34,45,21,16,"config"],[34,51,21,8],[34,52,21,2],[35,0,22,2,"config"],[35,4,22,2,"config"],[35,10,22,8],[35,13,22,11,"withDefaultValue"],[35,29,22,27],[35,30,22,28,"config"],[35,36,22,27],[35,38,22,36],[35,51,22,27],[35,53,22,51,"config"],[35,59,22,57],[35,60,22,58,"unmountInactiveRoutes"],[35,81,22,51],[35,84,22,82],[35,88,22,51],[35,91,22,89],[35,92,22,90],[35,93,22,91,"config"],[35,99,22,97],[35,100,22,98,"resetOnBlur"],[35,111,22,27],[35,112,22,2],[36,0,23,2,"config"],[36,4,23,2,"config"],[36,10,23,8],[36,13,23,11,"withDefaultValue"],[36,29,23,27],[36,30,23,28,"config"],[36,36,23,27],[36,38,23,36],[36,52,23,27],[36,54,23,52],[36,68,23,27],[36,69,23,2],[37,0,25,2],[37,8,25,8,"switchRouter"],[37,20,25,20],[37,23,25,23],[37,47,25,36,"routeConfigs"],[37,59,25,23],[37,61,25,50,"config"],[37,67,25,23],[37,68,25,2],[39,0,27,2],[39,8,27,6,"__id"],[39,12,27,10],[39,15,27,13],[39,16,27,14],[39,17,27,2],[41,0,28,2],[41,8,28,8,"genId"],[41,13,28,13],[41,16,28,16],[41,25,28,8,"genId"],[41,30,28,16],[41,33,28,22],[42,0,29,4,"__id"],[42,6,29,4,"__id"],[42,10,29,8],[43,0,30,4],[43,13,30,11,"__id"],[43,17,30,4],[44,0,31,3],[44,5,28,2],[46,0,33,2],[46,43,34,7,"switchRouter"],[46,55,33,2],[47,0,36,4,"getActionCreators"],[47,6,36,4,"getActionCreators"],[47,23,33,2],[47,52,36,22,"route"],[47,57,33,2],[47,59,36,29,"navStateKey"],[47,70,33,2],[47,72,36,42],[48,0,37,6],[49,0,38,8,"openDrawer"],[49,10,38,8,"openDrawer"],[49,20,38,18],[49,22,38,20],[50,0,38,20],[50,19,38,26,"DrawerActions"],[50,42,38,40,"openDrawer"],[50,52,38,26],[50,53,38,51],[51,0,38,53,"key"],[51,14,38,53,"key"],[51,17,38,56],[51,19,38,58,"navStateKey"],[52,0,38,51],[52,13,38,26],[52,14,38,20],[53,0,38,20],[53,11,37,6],[54,0,39,8,"closeDrawer"],[54,10,39,8,"closeDrawer"],[54,21,39,19],[54,23,39,21],[55,0,39,21],[55,19,39,27,"DrawerActions"],[55,42,39,41,"closeDrawer"],[55,53,39,27],[55,54,39,53],[56,0,39,55,"key"],[56,14,39,55,"key"],[56,17,39,58],[56,19,39,60,"navStateKey"],[57,0,39,53],[57,13,39,27],[57,14,39,21],[58,0,39,21],[58,11,37,6],[59,0,40,8,"toggleDrawer"],[59,10,40,8,"toggleDrawer"],[59,22,40,20],[59,24,40,22],[60,0,40,22],[60,19,40,28,"DrawerActions"],[60,42,40,42,"toggleDrawer"],[60,54,40,28],[60,55,40,55],[61,0,40,57,"key"],[61,14,40,57,"key"],[61,17,40,60],[61,19,40,62,"navStateKey"],[62,0,40,55],[62,13,40,28],[62,14,40,22],[63,0,40,22],[64,0,37,6],[64,11,41,11,"switchRouter"],[64,23,41,23],[64,24,41,24,"getActionCreators"],[64,41,41,11],[64,42,41,42,"route"],[64,47,41,11],[64,49,41,49,"navStateKey"],[64,60,41,11],[64,61,37,6],[65,0,43,5],[65,7,33,2],[66,0,45,4,"getStateForAction"],[66,6,45,4,"getStateForAction"],[66,23,33,2],[66,52,45,22,"action"],[66,58,33,2],[66,60,45,30,"state"],[66,65,33,2],[66,67,45,37],[67,0,47,6],[67,12,47,10],[67,13,47,11,"state"],[67,18,47,6],[67,20,47,18],[68,0,48,8],[68,49,49,13,"switchRouter"],[68,61,49,25],[68,62,49,26,"getStateForAction"],[68,79,49,13],[68,80,49,44,"action"],[68,86,49,13],[68,88,49,52,"undefined"],[68,97,49,13],[68,98,48,8],[69,0,50,10,"isDrawerOpen"],[69,12,50,10,"isDrawerOpen"],[69,24,50,22],[69,26,50,24],[69,31,48,8],[70,0,51,10,"isDrawerIdle"],[70,12,51,10,"isDrawerIdle"],[70,24,51,22],[70,26,51,24],[70,30,48,8],[71,0,52,10,"drawerMovementDirection"],[71,12,52,10,"drawerMovementDirection"],[71,35,52,33],[71,37,52,35],[71,41,48,8],[72,0,53,10,"openId"],[72,12,53,10,"openId"],[72,18,53,16],[72,20,53,18,"genId"],[72,25,53,23],[72,27,48,8],[73,0,54,10,"closeId"],[73,12,54,10,"closeId"],[73,19,54,17],[73,21,54,19,"genId"],[73,26,54,24],[73,28,48,8],[74,0,55,10,"toggleId"],[74,12,55,10,"toggleId"],[74,20,55,18],[74,22,55,20,"genId"],[74,27,55,25],[75,0,48,8],[76,0,57,7],[78,0,59,6],[78,12,59,12,"isRouterTargeted"],[78,28,59,28],[78,31,59,31,"action"],[78,37,59,37],[78,38,59,38,"key"],[78,41,59,31],[78,45,59,45],[78,49,59,31],[78,53,59,53,"action"],[78,59,59,59],[78,60,59,60,"key"],[78,63,59,53],[78,68,59,68,"state"],[78,73,59,73],[78,74,59,74,"key"],[78,77,59,6],[80,0,61,6],[80,12,61,10,"isRouterTargeted"],[80,28,61,6],[80,30,61,28],[81,0,64,8],[81,14,64,12,"action"],[81,20,64,18],[81,21,64,19,"type"],[81,25,64,12],[81,30,64,28,"DrawerActions"],[81,53,64,42,"DRAWER_CLOSED"],[81,66,64,8],[81,68,64,57],[82,0,65,10],[82,51,66,15,"state"],[82,56,65,10],[83,0,67,12,"isDrawerOpen"],[83,14,67,12,"isDrawerOpen"],[83,26,67,24],[83,28,67,26],[83,33,65,10],[84,0,68,12,"isDrawerIdle"],[84,14,68,12,"isDrawerIdle"],[84,26,68,24],[84,28,68,26],[84,32,65,10],[85,0,69,12,"drawerMovementDirection"],[85,14,69,12,"drawerMovementDirection"],[85,37,69,35],[85,39,69,37],[86,0,65,10],[87,0,71,9],[89,0,73,8],[89,14,73,12,"action"],[89,20,73,18],[89,21,73,19,"type"],[89,25,73,12],[89,30,73,28,"DrawerActions"],[89,53,73,42,"DRAWER_OPENED"],[89,66,73,8],[89,68,73,57],[90,0,74,10],[90,51,75,15,"state"],[90,56,74,10],[91,0,76,12,"isDrawerOpen"],[91,14,76,12,"isDrawerOpen"],[91,26,76,24],[91,28,76,26],[91,32,74,10],[92,0,77,12,"isDrawerIdle"],[92,14,77,12,"isDrawerIdle"],[92,26,77,24],[92,28,77,26],[92,32,74,10],[93,0,78,12,"drawerMovementDirection"],[93,14,78,12,"drawerMovementDirection"],[93,37,78,35],[93,39,78,37],[94,0,74,10],[95,0,80,9],[97,0,82,8],[97,14,82,12,"action"],[97,20,82,18],[97,21,82,19,"type"],[97,25,82,12],[97,30,82,28,"DrawerActions"],[97,53,82,42,"CLOSE_DRAWER"],[97,65,82,8],[97,67,82,56],[98,0,83,10],[98,51,84,15,"state"],[98,56,83,10],[99,0,85,12,"closeId"],[99,14,85,12,"closeId"],[99,21,85,19],[99,23,85,21,"genId"],[99,28,85,26],[100,0,83,10],[101,0,87,9],[103,0,89,8],[103,14,89,12,"action"],[103,20,89,18],[103,21,89,19,"type"],[103,25,89,12],[103,30,89,28,"DrawerActions"],[103,53,89,42,"MARK_DRAWER_SETTLING"],[103,73,89,8],[103,75,89,64],[104,0,90,10],[104,51,91,15,"state"],[104,56,90,10],[105,0,92,12,"isDrawerIdle"],[105,14,92,12,"isDrawerIdle"],[105,26,92,24],[105,28,92,26],[105,33,90,10],[106,0,93,12,"drawerMovementDirection"],[106,14,93,12,"drawerMovementDirection"],[106,37,93,35],[106,39,93,37,"action"],[106,45,93,43],[106,46,93,44,"willShow"],[106,54,93,37],[106,57,93,55],[106,66,93,37],[106,69,93,67],[107,0,90,10],[108,0,95,9],[110,0,97,8],[110,14,97,12,"action"],[110,20,97,18],[110,21,97,19,"type"],[110,25,97,12],[110,30,97,28,"DrawerActions"],[110,53,97,42,"MARK_DRAWER_ACTIVE"],[110,71,97,8],[110,73,97,62],[111,0,98,10],[111,51,99,15,"state"],[111,56,98,10],[112,0,100,12,"isDrawerIdle"],[112,14,100,12,"isDrawerIdle"],[112,26,100,24],[112,28,100,26],[112,33,98,10],[113,0,101,12,"drawerMovementDirection"],[113,14,101,12,"drawerMovementDirection"],[113,37,101,35],[113,39,101,37],[114,0,98,10],[115,0,103,9],[117,0,105,8],[117,14,105,12,"action"],[117,20,105,18],[117,21,105,19,"type"],[117,25,105,12],[117,30,105,28,"DrawerActions"],[117,53,105,42,"MARK_DRAWER_IDLE"],[117,69,105,8],[117,71,105,60],[118,0,106,10],[118,51,107,15,"state"],[118,56,106,10],[119,0,108,12,"isDrawerIdle"],[119,14,108,12,"isDrawerIdle"],[119,26,108,24],[119,28,108,26],[119,32,106,10],[120,0,109,12,"drawerMovementDirection"],[120,14,109,12,"drawerMovementDirection"],[120,37,109,35],[120,39,109,37],[121,0,106,10],[122,0,111,9],[124,0,113,8],[124,14,113,12,"action"],[124,20,113,18],[124,21,113,19,"type"],[124,25,113,12],[124,30,113,28,"NavigationActions"],[124,54,113,46,"BACK"],[124,58,113,12],[124,63,113,55,"state"],[124,68,113,60],[124,69,113,61,"isDrawerOpen"],[124,81,113,55],[124,85,113,77],[124,86,113,78,"state"],[124,91,113,83],[124,92,113,84,"isDrawerIdle"],[124,104,113,12],[124,109,113,101,"state"],[124,114,113,106],[124,115,113,107,"drawerMovementDirection"],[124,138,113,101],[124,143,113,135],[124,152,113,8],[124,154,113,146],[125,0,114,10],[125,51,115,15,"state"],[125,56,114,10],[126,0,116,12,"closeId"],[126,14,116,12,"closeId"],[126,21,116,19],[126,23,116,21,"genId"],[126,28,116,26],[127,0,114,10],[128,0,118,9],[130,0,120,8],[130,14,120,12,"action"],[130,20,120,18],[130,21,120,19,"type"],[130,25,120,12],[130,30,120,28,"DrawerActions"],[130,53,120,42,"OPEN_DRAWER"],[130,64,120,8],[130,66,120,55],[131,0,121,10],[131,51,122,15,"state"],[131,56,121,10],[132,0,123,12,"openId"],[132,14,123,12,"openId"],[132,20,123,18],[132,22,123,20,"genId"],[132,27,123,25],[133,0,121,10],[134,0,125,9],[136,0,127,8],[136,14,127,12,"action"],[136,20,127,18],[136,21,127,19,"type"],[136,25,127,12],[136,30,127,28,"DrawerActions"],[136,53,127,42,"TOGGLE_DRAWER"],[136,66,127,8],[136,68,127,57],[137,0,128,10],[137,51,129,15,"state"],[137,56,128,10],[138,0,130,12,"toggleId"],[138,14,130,12,"toggleId"],[138,22,130,20],[138,24,130,22,"genId"],[138,29,130,27],[139,0,128,10],[140,0,132,9],[141,0,133,7],[143,0,136,6],[143,12,136,12,"switchedState"],[143,25,136,25],[143,28,136,28,"switchRouter"],[143,40,136,40],[143,41,136,41,"getStateForAction"],[143,58,136,28],[143,59,136,59,"action"],[143,65,136,28],[143,67,136,67,"state"],[143,72,136,28],[143,73,136,6],[145,0,138,6],[145,12,138,10,"switchedState"],[145,25,138,23],[145,30,138,28],[145,34,138,6],[145,36,138,34],[146,0,140,8],[146,17,140,15],[146,21,140,8],[147,0,141,7],[149,0,144,6],[149,12,144,10,"switchedState"],[149,25,144,23],[149,30,144,28,"state"],[149,35,144,6],[149,37,144,35],[150,0,146,8],[150,14,146,12,"getActiveRouteKey"],[150,31,146,29],[150,32,146,30,"switchedState"],[150,45,146,29],[150,46,146,12],[150,51,146,49,"getActiveRouteKey"],[150,68,146,66],[150,69,146,67,"state"],[150,74,146,66],[150,75,146,12],[150,80,146,78,"state"],[150,85,146,83],[150,86,146,84,"isDrawerOpen"],[150,98,146,78],[150,102,146,100,"state"],[150,107,146,105],[150,108,146,106,"drawerMovementDirection"],[150,131,146,100],[150,136,146,134],[150,145,146,12],[150,146,146,8],[150,148,146,146],[151,0,147,10],[151,51,148,15,"switchedState"],[151,64,147,10],[152,0,149,12,"closeId"],[152,14,149,12,"closeId"],[152,21,149,19],[152,23,149,21,"genId"],[152,28,149,26],[153,0,147,10],[154,0,151,9],[156,0,156,8],[156,17,156,15,"switchedState"],[156,30,156,8],[157,0,157,7],[159,0,159,6],[159,15,159,13,"state"],[159,20,159,6],[160,0,160,5],[161,0,33,2],[162,0,162,1],[162,3]]},"type":"js/module"}]}