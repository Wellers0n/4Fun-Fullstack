{"dependencies":[],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var token = '%[a-f0-9]{2}';\n  var singleMatcher = new RegExp(token, 'gi');\n  var multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\n  function decodeComponents(components, split) {\n    try {\n      return decodeURIComponent(components.join(''));\n    } catch (err) {}\n\n    if (components.length === 1) {\n      return components;\n    }\n\n    split = split || 1;\n    var left = components.slice(0, split);\n    var right = components.slice(split);\n    return Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n  }\n\n  function decode(input) {\n    try {\n      return decodeURIComponent(input);\n    } catch (err) {\n      var tokens = input.match(singleMatcher);\n\n      for (var i = 1; i < tokens.length; i++) {\n        input = decodeComponents(tokens, i).join('');\n        tokens = input.match(singleMatcher);\n      }\n\n      return input;\n    }\n  }\n\n  function customDecodeURIComponent(input) {\n    var replaceMap = {\n      '%FE%FF': \"\\uFFFD\\uFFFD\",\n      '%FF%FE': \"\\uFFFD\\uFFFD\"\n    };\n    var match = multiMatcher.exec(input);\n\n    while (match) {\n      try {\n        replaceMap[match[0]] = decodeURIComponent(match[0]);\n      } catch (err) {\n        var result = decode(match[0]);\n\n        if (result !== match[0]) {\n          replaceMap[match[0]] = result;\n        }\n      }\n\n      match = multiMatcher.exec(input);\n    }\n\n    replaceMap['%C2'] = \"\\uFFFD\";\n    var entries = Object.keys(replaceMap);\n\n    for (var i = 0; i < entries.length; i++) {\n      var key = entries[i];\n      input = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n    }\n\n    return input;\n  }\n\n  module.exports = function (encodedURI) {\n    if (typeof encodedURI !== 'string') {\n      throw new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n    }\n\n    try {\n      encodedURI = encodedURI.replace(/\\+/g, ' ');\n      return decodeURIComponent(encodedURI);\n    } catch (err) {\n      return customDecodeURIComponent(encodedURI);\n    }\n  };\n});","map":[[2,0,1,0],[4,0,2,0],[4,6,2,4,"token"],[4,11,2,9],[4,14,2,12],[4,28,2,0],[5,0,3,0],[5,6,3,4,"singleMatcher"],[5,19,3,17],[5,22,3,20],[5,26,3,24,"RegExp"],[5,32,3,20],[5,33,3,31,"token"],[5,38,3,20],[5,40,3,38],[5,44,3,20],[5,45,3,0],[6,0,4,0],[6,6,4,4,"multiMatcher"],[6,18,4,16],[6,21,4,19],[6,25,4,23,"RegExp"],[6,31,4,19],[6,32,4,30],[6,38,4,36,"token"],[6,43,4,30],[6,46,4,44],[6,50,4,19],[6,52,4,50],[6,56,4,19],[6,57,4,0],[8,0,6,0],[8,11,6,9,"decodeComponents"],[8,27,6,0],[8,28,6,26,"components"],[8,38,6,0],[8,40,6,38,"split"],[8,45,6,0],[8,47,6,45],[9,0,7,1],[9,8,7,5],[10,0,9,2],[10,13,9,9,"decodeURIComponent"],[10,31,9,27],[10,32,9,28,"components"],[10,42,9,38],[10,43,9,39,"join"],[10,47,9,28],[10,48,9,44],[10,50,9,28],[10,51,9,27],[10,52,9,2],[11,0,10,2],[11,5,7,1],[11,6,10,3],[11,13,10,10,"err"],[11,16,10,3],[11,18,10,15],[11,19,12,2],[13,0,14,1],[13,8,14,5,"components"],[13,18,14,15],[13,19,14,16,"length"],[13,25,14,5],[13,30,14,27],[13,31,14,1],[13,33,14,30],[14,0,15,2],[14,13,15,9,"components"],[14,23,15,2],[15,0,16,2],[17,0,18,1,"split"],[17,4,18,1,"split"],[17,9,18,6],[17,12,18,9,"split"],[17,17,18,14],[17,21,18,18],[17,22,18,1],[18,0,21,1],[18,8,21,5,"left"],[18,12,21,9],[18,15,21,12,"components"],[18,25,21,22],[18,26,21,23,"slice"],[18,31,21,12],[18,32,21,29],[18,33,21,12],[18,35,21,32,"split"],[18,40,21,12],[18,41,21,1],[19,0,22,1],[19,8,22,5,"right"],[19,13,22,10],[19,16,22,13,"components"],[19,26,22,23],[19,27,22,24,"slice"],[19,32,22,13],[19,33,22,30,"split"],[19,38,22,13],[19,39,22,1],[20,0,24,1],[20,11,24,8,"Array"],[20,16,24,13],[20,17,24,14,"prototype"],[20,26,24,8],[20,27,24,24,"concat"],[20,33,24,8],[20,34,24,31,"call"],[20,38,24,8],[20,39,24,36],[20,41,24,8],[20,43,24,40,"decodeComponents"],[20,59,24,56],[20,60,24,57,"left"],[20,64,24,56],[20,65,24,8],[20,67,24,64,"decodeComponents"],[20,83,24,80],[20,84,24,81,"right"],[20,89,24,80],[20,90,24,8],[20,91,24,1],[21,0,25,1],[23,0,27,0],[23,11,27,9,"decode"],[23,17,27,0],[23,18,27,16,"input"],[23,23,27,0],[23,25,27,23],[24,0,28,1],[24,8,28,5],[25,0,29,2],[25,13,29,9,"decodeURIComponent"],[25,31,29,27],[25,32,29,28,"input"],[25,37,29,27],[25,38,29,2],[26,0,30,2],[26,5,28,1],[26,6,30,3],[26,13,30,10,"err"],[26,16,30,3],[26,18,30,15],[27,0,31,2],[27,10,31,6,"tokens"],[27,16,31,12],[27,19,31,15,"input"],[27,24,31,20],[27,25,31,21,"match"],[27,30,31,15],[27,31,31,27,"singleMatcher"],[27,44,31,15],[27,45,31,2],[29,0,33,2],[29,11,33,7],[29,15,33,11,"i"],[29,16,33,12],[29,19,33,15],[29,20,33,2],[29,22,33,18,"i"],[29,23,33,19],[29,26,33,22,"tokens"],[29,32,33,28],[29,33,33,29,"length"],[29,39,33,2],[29,41,33,37,"i"],[29,42,33,38],[29,44,33,2],[29,46,33,42],[30,0,34,3,"input"],[30,8,34,3,"input"],[30,13,34,8],[30,16,34,11,"decodeComponents"],[30,32,34,27],[30,33,34,28,"tokens"],[30,39,34,27],[30,41,34,36,"i"],[30,42,34,27],[30,43,34,11],[30,44,34,39,"join"],[30,48,34,11],[30,49,34,44],[30,51,34,11],[30,52,34,3],[31,0,36,3,"tokens"],[31,8,36,3,"tokens"],[31,14,36,9],[31,17,36,12,"input"],[31,22,36,17],[31,23,36,18,"match"],[31,28,36,12],[31,29,36,24,"singleMatcher"],[31,42,36,12],[31,43,36,3],[32,0,37,3],[34,0,39,2],[34,13,39,9,"input"],[34,18,39,2],[35,0,40,2],[36,0,41,1],[38,0,43,0],[38,11,43,9,"customDecodeURIComponent"],[38,35,43,0],[38,36,43,34,"input"],[38,41,43,0],[38,43,43,41],[39,0,45,1],[39,8,45,5,"replaceMap"],[39,18,45,15],[39,21,45,18],[40,0,46,2],[40,16,46,12],[40,30,45,18],[41,0,47,2],[41,16,47,12],[42,0,45,18],[42,5,45,1],[43,0,50,1],[43,8,50,5,"match"],[43,13,50,10],[43,16,50,13,"multiMatcher"],[43,28,50,25],[43,29,50,26,"exec"],[43,33,50,13],[43,34,50,31,"input"],[43,39,50,13],[43,40,50,1],[45,0,51,1],[45,11,51,8,"match"],[45,16,51,1],[45,18,51,15],[46,0,52,2],[46,10,52,6],[47,0,54,3,"replaceMap"],[47,8,54,3,"replaceMap"],[47,18,54,13],[47,19,54,14,"match"],[47,24,54,19],[47,25,54,20],[47,26,54,19],[47,27,54,13],[47,28,54,3],[47,31,54,26,"decodeURIComponent"],[47,49,54,44],[47,50,54,45,"match"],[47,55,54,50],[47,56,54,51],[47,57,54,50],[47,58,54,44],[47,59,54,3],[48,0,55,3],[48,7,52,2],[48,8,55,4],[48,15,55,11,"err"],[48,18,55,4],[48,20,55,16],[49,0,56,3],[49,12,56,7,"result"],[49,18,56,13],[49,21,56,16,"decode"],[49,27,56,22],[49,28,56,23,"match"],[49,33,56,28],[49,34,56,29],[49,35,56,28],[49,36,56,22],[49,37,56,3],[51,0,58,3],[51,12,58,7,"result"],[51,18,58,13],[51,23,58,18,"match"],[51,28,58,23],[51,29,58,24],[51,30,58,23],[51,31,58,3],[51,33,58,28],[52,0,59,4,"replaceMap"],[52,10,59,4,"replaceMap"],[52,20,59,14],[52,21,59,15,"match"],[52,26,59,20],[52,27,59,21],[52,28,59,20],[52,29,59,14],[52,30,59,4],[52,33,59,27,"result"],[52,39,59,4],[53,0,60,4],[54,0,61,3],[56,0,63,2,"match"],[56,6,63,2,"match"],[56,11,63,7],[56,14,63,10,"multiMatcher"],[56,26,63,22],[56,27,63,23,"exec"],[56,31,63,10],[56,32,63,28,"input"],[56,37,63,10],[56,38,63,2],[57,0,64,2],[59,0,67,1,"replaceMap"],[59,4,67,1,"replaceMap"],[59,14,67,11],[59,15,67,12],[59,20,67,11],[59,21,67,1],[59,24,67,21],[59,32,67,1],[60,0,69,1],[60,8,69,5,"entries"],[60,15,69,12],[60,18,69,15,"Object"],[60,24,69,21],[60,25,69,22,"keys"],[60,29,69,15],[60,30,69,27,"replaceMap"],[60,40,69,15],[60,41,69,1],[62,0,71,1],[62,9,71,6],[62,13,71,10,"i"],[62,14,71,11],[62,17,71,14],[62,18,71,1],[62,20,71,17,"i"],[62,21,71,18],[62,24,71,21,"entries"],[62,31,71,28],[62,32,71,29,"length"],[62,38,71,1],[62,40,71,37,"i"],[62,41,71,38],[62,43,71,1],[62,45,71,42],[63,0,73,2],[63,10,73,6,"key"],[63,13,73,9],[63,16,73,12,"entries"],[63,23,73,19],[63,24,73,20,"i"],[63,25,73,19],[63,26,73,2],[64,0,74,2,"input"],[64,6,74,2,"input"],[64,11,74,7],[64,14,74,10,"input"],[64,19,74,15],[64,20,74,16,"replace"],[64,27,74,10],[64,28,74,24],[64,32,74,28,"RegExp"],[64,38,74,24],[64,39,74,35,"key"],[64,42,74,24],[64,44,74,40],[64,47,74,24],[64,48,74,10],[64,50,74,46,"replaceMap"],[64,60,74,56],[64,61,74,57,"key"],[64,64,74,56],[64,65,74,10],[64,66,74,2],[65,0,75,2],[67,0,77,1],[67,11,77,8,"input"],[67,16,77,1],[68,0,78,1],[70,0,80,0,"module"],[70,2,80,0,"module"],[70,8,80,6],[70,9,80,7,"exports"],[70,16,80,0],[70,19,80,17],[70,29,80,27,"encodedURI"],[70,39,80,17],[70,41,80,39],[71,0,81,1],[71,8,81,5],[71,15,81,12,"encodedURI"],[71,25,81,5],[71,30,81,27],[71,38,81,1],[71,40,81,37],[72,0,82,2],[72,12,82,8],[72,16,82,12,"TypeError"],[72,25,82,8],[72,26,82,22],[72,82,82,78],[72,89,82,85,"encodedURI"],[72,99,82,22],[72,102,82,98],[72,105,82,8],[72,106,82,2],[73,0,83,2],[75,0,85,1],[75,8,85,5],[76,0,86,2,"encodedURI"],[76,6,86,2,"encodedURI"],[76,16,86,12],[76,19,86,15,"encodedURI"],[76,29,86,25],[76,30,86,26,"replace"],[76,37,86,15],[76,38,86,34],[76,43,86,15],[76,45,86,41],[76,48,86,15],[76,49,86,2],[77,0,89,2],[77,13,89,9,"decodeURIComponent"],[77,31,89,27],[77,32,89,28,"encodedURI"],[77,42,89,27],[77,43,89,2],[78,0,90,2],[78,5,85,1],[78,6,90,3],[78,13,90,10,"err"],[78,16,90,3],[78,18,90,15],[79,0,92,2],[79,13,92,9,"customDecodeURIComponent"],[79,37,92,33],[79,38,92,34,"encodedURI"],[79,48,92,33],[79,49,92,2],[80,0,93,2],[81,0,94,1],[81,3,80,0]]},"type":"js/module"}]}