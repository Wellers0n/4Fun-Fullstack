{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/objectSpread","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"./../../../../node_modules/react-transform-hmr/lib/index.js","data":{"isAsync":false}},{"name":"invariant","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"./GestureHandler","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/objectSpread\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/inherits\"));\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8], \"react\"));\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"./../../../../node_modules/react-transform-hmr/lib/index.js\"));\n\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"invariant\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[11], \"react-native\");\n\n  var _GestureHandler = _$$_REQUIRE(_dependencyMap[12], \"./GestureHandler\");\n\n  var _class,\n      _temp,\n      _jsxFileName = \"/home/coffee/Documents/Boilerplate-fullstack/packages/app/node_modules/react-native-gesture-handler/DrawerLayout.js\";\n\n  var _components = {\n    DrawerLayout: {\n      displayName: \"DrawerLayout\"\n    }\n  };\n\n  var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index.default)({\n    filename: \"node_modules/react-native-gesture-handler/DrawerLayout.js\",\n    components: _components,\n    locals: [module],\n    imports: [_react.default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _node_modulesReactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  var DRAG_TOSS = 0.05;\n  var IDLE = 'Idle';\n  var DRAGGING = 'Dragging';\n  var SETTLING = 'Settling';\n\n  var DrawerLayout = _wrapComponent(\"DrawerLayout\")((_temp = _class = function (_Component) {\n    (0, _inherits2.default)(DrawerLayout, _Component);\n\n    function DrawerLayout(_props, context) {\n      var _this;\n\n      (0, _classCallCheck2.default)(this, DrawerLayout);\n      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DrawerLayout).call(this, _props, context));\n      _this._accessibilityIsModalView = _react.default.createRef();\n      _this._pointerEventsView = _react.default.createRef();\n      _this._panGestureHandler = _react.default.createRef();\n      _this._drawerShown = false;\n\n      _this._updateAnimatedEvent = function (props, state) {\n        var drawerPosition = props.drawerPosition,\n            drawerWidth = props.drawerWidth,\n            drawerType = props.drawerType;\n        var dragXValue = state.dragX,\n            touchXValue = state.touchX,\n            drawerTranslation = state.drawerTranslation,\n            containerWidth = state.containerWidth;\n        var dragX = dragXValue;\n        var touchX = touchXValue;\n\n        if (drawerPosition !== 'left') {\n          dragX = _reactNative.Animated.multiply(new _reactNative.Animated.Value(-1), dragXValue);\n          touchX = _reactNative.Animated.add(new _reactNative.Animated.Value(containerWidth), _reactNative.Animated.multiply(new _reactNative.Animated.Value(-1), touchXValue));\n          touchXValue.setValue(containerWidth);\n        } else {\n          touchXValue.setValue(0);\n        }\n\n        var translationX = dragX;\n\n        if (drawerType === 'front') {\n          var startPositionX = _reactNative.Animated.add(touchX, _reactNative.Animated.multiply(new _reactNative.Animated.Value(-1), dragX));\n\n          var dragOffsetFromOnStartPosition = startPositionX.interpolate({\n            inputRange: [drawerWidth - 1, drawerWidth, drawerWidth + 1],\n            outputRange: [0, 0, 1]\n          });\n          translationX = _reactNative.Animated.add(dragX, dragOffsetFromOnStartPosition);\n        }\n\n        _this._openValue = _reactNative.Animated.add(translationX, drawerTranslation).interpolate({\n          inputRange: [0, drawerWidth],\n          outputRange: [0, 1],\n          extrapolate: 'clamp'\n        });\n        _this._onGestureEvent = _reactNative.Animated.event([{\n          nativeEvent: {\n            translationX: dragXValue,\n            x: touchXValue\n          }\n        }], {\n          useNativeDriver: props.useNativeAnimations\n        });\n      };\n\n      _this._handleContainerLayout = function (_ref) {\n        var nativeEvent = _ref.nativeEvent;\n\n        _this.setState({\n          containerWidth: nativeEvent.layout.width\n        });\n      };\n\n      _this._emitStateChanged = function (newState, drawerWillShow) {\n        _this.props.onDrawerStateChanged && _this.props.onDrawerStateChanged(newState, drawerWillShow);\n      };\n\n      _this._openingHandlerStateChange = function (_ref2) {\n        var nativeEvent = _ref2.nativeEvent;\n\n        if (nativeEvent.oldState === _GestureHandler.State.ACTIVE) {\n          _this._handleRelease(nativeEvent);\n        } else if (nativeEvent.state === _GestureHandler.State.ACTIVE) {\n          _this._emitStateChanged(DRAGGING, false);\n\n          if (_this.props.keyboardDismissMode === 'on-drag') {\n            _reactNative.Keyboard.dismiss();\n          }\n\n          if (_this.props.hideStatusBar) {\n            _reactNative.StatusBar.setHidden(true, _this.props.statusBarAnimation || 'slide');\n          }\n        }\n      };\n\n      _this._onTapHandlerStateChange = function (_ref3) {\n        var nativeEvent = _ref3.nativeEvent;\n\n        if (_this._drawerShown && nativeEvent.oldState === _GestureHandler.State.ACTIVE && _this.props.drawerLockMode !== 'locked-open') {\n          _this.closeDrawer();\n        }\n      };\n\n      _this._handleRelease = function (nativeEvent) {\n        var _this$props = _this.props,\n            drawerWidth = _this$props.drawerWidth,\n            drawerPosition = _this$props.drawerPosition,\n            drawerType = _this$props.drawerType;\n        var containerWidth = _this.state.containerWidth;\n        var dragX = nativeEvent.translationX,\n            velocityX = nativeEvent.velocityX,\n            touchX = nativeEvent.x;\n\n        if (drawerPosition !== 'left') {\n          dragX = -dragX;\n          touchX = containerWidth - touchX;\n          velocityX = -velocityX;\n        }\n\n        var gestureStartX = touchX - dragX;\n        var dragOffsetBasedOnStart = 0;\n\n        if (drawerType === 'front') {\n          dragOffsetBasedOnStart = gestureStartX > drawerWidth ? gestureStartX - drawerWidth : 0;\n        }\n\n        var startOffsetX = dragX + dragOffsetBasedOnStart + (_this._drawerShown ? drawerWidth : 0);\n        var projOffsetX = startOffsetX + DRAG_TOSS * velocityX;\n        var shouldOpen = projOffsetX > drawerWidth / 2;\n\n        if (shouldOpen) {\n          _this._animateDrawer(startOffsetX, drawerWidth, velocityX);\n        } else {\n          _this._animateDrawer(startOffsetX, 0, velocityX);\n        }\n      };\n\n      _this._updateShowing = function (showing) {\n        _this._drawerShown = showing;\n        _this._accessibilityIsModalView.current && _this._accessibilityIsModalView.current.setNativeProps({\n          accessibilityViewIsModal: showing\n        });\n        _this._pointerEventsView.current && _this._pointerEventsView.current.setNativeProps({\n          pointerEvents: showing ? 'auto' : 'none'\n        });\n        var _this$props2 = _this.props,\n            drawerPosition = _this$props2.drawerPosition,\n            minSwipeDistance = _this$props2.minSwipeDistance,\n            edgeWidth = _this$props2.edgeWidth;\n        var fromLeft = drawerPosition === 'left';\n        var gestureOrientation = (fromLeft ? 1 : -1) * (_this._drawerShown ? -1 : 1);\n        var hitSlop = fromLeft ? {\n          left: 0,\n          width: showing ? undefined : edgeWidth\n        } : {\n          right: 0,\n          width: showing ? undefined : edgeWidth\n        };\n        _this._panGestureHandler.current && _this._panGestureHandler.current.setNativeProps({\n          hitSlop: hitSlop,\n          activeOffsetX: gestureOrientation * minSwipeDistance\n        });\n      };\n\n      _this._animateDrawer = function (fromValue, toValue, velocity) {\n        _this.state.dragX.setValue(0);\n\n        _this.state.touchX.setValue(_this.props.drawerPosition === 'left' ? 0 : _this.state.containerWidth);\n\n        if (fromValue !== undefined) {\n          var nextFramePosition = fromValue;\n\n          if (_this.props.useNativeAnimations) {\n            if (fromValue < toValue && velocity > 0) {\n              nextFramePosition = Math.min(fromValue + velocity / 60.0, toValue);\n            } else if (fromValue > toValue && velocity < 0) {\n              nextFramePosition = Math.max(fromValue + velocity / 60.0, toValue);\n            }\n          }\n\n          _this.state.drawerTranslation.setValue(nextFramePosition);\n        }\n\n        var willShow = toValue !== 0;\n\n        _this._updateShowing(willShow);\n\n        _this._emitStateChanged(SETTLING, willShow);\n\n        if (_this.props.hideStatusBar) {\n          _reactNative.StatusBar.setHidden(willShow, _this.props.statusBarAnimation || 'slide');\n        }\n\n        _reactNative.Animated.spring(_this.state.drawerTranslation, {\n          velocity: velocity,\n          bounciness: 0,\n          toValue: toValue,\n          useNativeDriver: _this.props.useNativeAnimations\n        }).start(function (_ref4) {\n          var finished = _ref4.finished;\n\n          if (finished) {\n            _this._emitStateChanged(IDLE, willShow);\n\n            if (willShow) {\n              _this.props.onDrawerOpen && _this.props.onDrawerOpen();\n            } else {\n              _this.props.onDrawerClose && _this.props.onDrawerClose();\n            }\n          }\n        });\n      };\n\n      _this.openDrawer = function () {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n        _this._animateDrawer(undefined, _this.props.drawerWidth, options.velocity ? options.velocity : 0);\n\n        _this.forceUpdate();\n      };\n\n      _this.closeDrawer = function () {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n        _this._animateDrawer(undefined, 0, options.velocity ? options.velocity : 0);\n\n        _this.forceUpdate();\n      };\n\n      _this._renderOverlay = function () {\n        (0, _invariant.default)(_this._openValue, 'should be set');\n\n        var overlayOpacity = _this._openValue.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, 0.7],\n          extrapolate: 'clamp'\n        });\n\n        var dynamicOverlayStyles = {\n          opacity: overlayOpacity,\n          backgroundColor: _this.props.overlayColor\n        };\n        return _react.default.createElement(_GestureHandler.TapGestureHandler, {\n          onHandlerStateChange: _this._onTapHandlerStateChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 381\n          }\n        }, _react.default.createElement(_reactNative.Animated.View, {\n          pointerEvents: _this._drawerShown ? 'auto' : 'none',\n          ref: _this._pointerEventsView,\n          style: [styles.overlay, dynamicOverlayStyles],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 382\n          }\n        }));\n      };\n\n      _this._renderDrawer = function () {\n        var _this$props3 = _this.props,\n            drawerBackgroundColor = _this$props3.drawerBackgroundColor,\n            drawerWidth = _this$props3.drawerWidth,\n            drawerPosition = _this$props3.drawerPosition,\n            drawerType = _this$props3.drawerType,\n            drawerContainerStyle = _this$props3.drawerContainerStyle,\n            contentContainerStyle = _this$props3.contentContainerStyle;\n        var fromLeft = drawerPosition === 'left';\n        var drawerSlide = drawerType !== 'back';\n        var containerSlide = drawerType !== 'front';\n        var reverseContentDirection = _reactNative.I18nManager.isRTL ? fromLeft : !fromLeft;\n        var dynamicDrawerStyles = {\n          backgroundColor: drawerBackgroundColor,\n          width: drawerWidth\n        };\n        var openValue = _this._openValue;\n        (0, _invariant.default)(openValue, 'should be set');\n        var containerStyles;\n\n        if (containerSlide) {\n          var containerTranslateX = openValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: fromLeft ? [0, drawerWidth] : [0, -drawerWidth],\n            extrapolate: 'clamp'\n          });\n          containerStyles = {\n            transform: [{\n              translateX: containerTranslateX\n            }]\n          };\n        }\n\n        var drawerTranslateX = 0;\n\n        if (drawerSlide) {\n          var closedDrawerOffset = fromLeft ? -drawerWidth : drawerWidth;\n          drawerTranslateX = openValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: [closedDrawerOffset, 0],\n            extrapolate: 'clamp'\n          });\n        }\n\n        var drawerStyles = {\n          transform: [{\n            translateX: drawerTranslateX\n          }],\n          flexDirection: reverseContentDirection ? 'row-reverse' : 'row'\n        };\n        return _react.default.createElement(_reactNative.Animated.View, {\n          style: styles.main,\n          onLayout: _this._handleContainerLayout,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 445\n          }\n        }, _react.default.createElement(_reactNative.Animated.View, {\n          style: [drawerType === 'front' ? styles.containerOnBack : styles.containerInFront, containerStyles, contentContainerStyle],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 446\n          }\n        }, typeof _this.props.children === 'function' ? _this.props.children(_this._openValue) : _this.props.children, _this._renderOverlay()), _react.default.createElement(_reactNative.Animated.View, {\n          pointerEvents: \"box-none\",\n          ref: _this._accessibilityIsModalView,\n          accessibilityViewIsModal: _this._drawerShown,\n          style: [styles.drawerContainer, drawerStyles, drawerContainerStyle],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 459\n          }\n        }, _react.default.createElement(_reactNative.View, {\n          style: dynamicDrawerStyles,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 464\n          }\n        }, _this.props.renderNavigationView(_this._openValue))));\n      };\n\n      _this._setPanGestureRef = function (ref) {\n        _this._panGestureHandler.current = ref;\n        _this.props.onGestureRef && _this.props.onGestureRef(ref);\n      };\n\n      var _dragX = new _reactNative.Animated.Value(0);\n\n      var _touchX = new _reactNative.Animated.Value(0);\n\n      var _drawerTranslation = new _reactNative.Animated.Value(0);\n\n      _this.state = {\n        dragX: _dragX,\n        touchX: _touchX,\n        drawerTranslation: _drawerTranslation,\n        containerWidth: 0\n      };\n\n      _this._updateAnimatedEvent(_props, _this.state);\n\n      return _this;\n    }\n\n    (0, _createClass2.default)(DrawerLayout, [{\n      key: \"componentWillUpdate\",\n      value: function componentWillUpdate(props, state) {\n        if (this.props.drawerPosition !== props.drawerPosition || this.props.drawerWidth !== props.drawerWidth || this.props.drawerType !== props.drawerType || this.state.containerWidth !== state.containerWidth) {\n          this._updateAnimatedEvent(props, state);\n        }\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this$props4 = this.props,\n            drawerPosition = _this$props4.drawerPosition,\n            drawerLockMode = _this$props4.drawerLockMode,\n            edgeWidth = _this$props4.edgeWidth,\n            minSwipeDistance = _this$props4.minSwipeDistance;\n        var fromLeft = drawerPosition === 'left';\n        var gestureOrientation = (fromLeft ? 1 : -1) * (this._drawerShown ? -1 : 1);\n        var hitSlop = fromLeft ? {\n          left: 0,\n          width: this._drawerShown ? undefined : edgeWidth\n        } : {\n          right: 0,\n          width: this._drawerShown ? undefined : edgeWidth\n        };\n        return _react.default.createElement(_GestureHandler.PanGestureHandler, {\n          ref: this._setPanGestureRef,\n          hitSlop: hitSlop,\n          activeOffsetX: gestureOrientation * minSwipeDistance,\n          failOffsetY: [-15, 15],\n          onGestureEvent: this._onGestureEvent,\n          onHandlerStateChange: this._openingHandlerStateChange,\n          enabled: drawerLockMode !== 'locked-closed' && drawerLockMode !== 'locked-open',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 501\n          }\n        }, this._renderDrawer());\n      }\n    }]);\n    return DrawerLayout;\n  }(_react.Component), _class.defaultProps = {\n    drawerWidth: 200,\n    drawerPosition: 'left',\n    useNativeAnimations: true,\n    drawerType: 'front',\n    edgeWidth: 20,\n    minSwipeDistance: 3,\n    overlayColor: 'black',\n    drawerLockMode: 'unlocked'\n  }, _class.positions = {\n    Left: 'left',\n    Right: 'right'\n  }, _temp));\n\n  var _default2 = DrawerLayout;\n  exports.default = _default2;\n\n  var styles = _reactNative.StyleSheet.create({\n    drawerContainer: (0, _objectSpread2.default)({}, _reactNative.StyleSheet.absoluteFillObject, {\n      zIndex: 1001,\n      flexDirection: 'row'\n    }),\n    containerInFront: (0, _objectSpread2.default)({}, _reactNative.StyleSheet.absoluteFillObject, {\n      zIndex: 1002\n    }),\n    containerOnBack: (0, _objectSpread2.default)({}, _reactNative.StyleSheet.absoluteFillObject),\n    main: {\n      flex: 1,\n      zIndex: 0,\n      overflow: 'hidden'\n    },\n    overlay: (0, _objectSpread2.default)({}, _reactNative.StyleSheet.absoluteFillObject, {\n      zIndex: 1000\n    })\n  });\n});","map":[[23,0,11,0],[27,0,12,0],[29,0,13,0],[31,0,22,0],[56,0,24,0],[56,6,24,6,"DRAG_TOSS"],[56,15,24,15],[56,18,24,18],[56,22,24,0],[57,0,26,0],[57,6,26,6,"IDLE"],[57,10,26,10],[57,13,26,13],[57,19,26,0],[58,0,27,0],[58,6,27,6,"DRAGGING"],[58,14,27,14],[58,17,27,17],[58,27,27,0],[59,0,28,0],[59,6,28,6,"SETTLING"],[59,14,28,14],[59,17,28,17],[59,27,28,0],[64,0,96,2],[64,26,96,14,"props"],[64,32,96,2],[64,34,96,31,"context"],[64,41,96,2],[64,43,96,45],[65,0,96,45],[67,0,96,45],[68,0,97,4],[68,116,97,10,"props"],[68,122,97,4],[68,124,97,17,"context"],[68,131,97,4],[69,0,96,45],[69,12,91,2,"_accessibilityIsModalView"],[69,37,96,45],[69,40,91,30,"React"],[69,55,91,36,"createRef"],[69,64,91,30],[69,66,96,45],[70,0,96,45],[70,12,92,2,"_pointerEventsView"],[70,30,96,45],[70,33,92,23,"React"],[70,48,92,29,"createRef"],[70,57,92,23],[70,59,96,45],[71,0,96,45],[71,12,93,2,"_panGestureHandler"],[71,30,96,45],[71,33,93,23,"React"],[71,48,93,29,"createRef"],[71,57,93,23],[71,59,96,45],[72,0,96,45],[72,12,94,2,"_drawerShown"],[72,24,96,45],[72,27,94,17],[72,32,96,45],[74,0,96,45],[74,12,124,2,"_updateAnimatedEvent"],[74,32,96,45],[74,35,124,25],[74,45,124,26,"props"],[74,50,124,25],[74,52,124,43,"state"],[74,57,124,25],[74,59,124,64],[75,0,124,64],[75,12,126,12,"drawerPosition"],[75,26,124,64],[75,29,126,56,"props"],[75,34,124,64],[75,35,126,12,"drawerPosition"],[75,49,124,64],[76,0,124,64],[76,12,126,28,"drawerWidth"],[76,23,124,64],[76,26,126,56,"props"],[76,31,124,64],[76,32,126,28,"drawerWidth"],[76,43,124,64],[77,0,124,64],[77,12,126,41,"drawerType"],[77,22,124,64],[77,25,126,56,"props"],[77,30,124,64],[77,31,126,41,"drawerType"],[77,41,124,64],[78,0,124,64],[78,12,128,13,"dragXValue"],[78,22,124,64],[78,25,132,8,"state"],[78,30,124,64],[78,31,128,6,"dragX"],[78,36,124,64],[79,0,124,64],[79,12,129,14,"touchXValue"],[79,23,124,64],[79,26,132,8,"state"],[79,31,124,64],[79,32,129,6,"touchX"],[79,38,124,64],[80,0,124,64],[80,12,130,6,"drawerTranslation"],[80,29,124,64],[80,32,132,8,"state"],[80,37,124,64],[80,38,130,6,"drawerTranslation"],[80,55,124,64],[81,0,124,64],[81,12,131,6,"containerWidth"],[81,26,124,64],[81,29,132,8,"state"],[81,34,124,64],[81,35,131,6,"containerWidth"],[81,49,124,64],[82,0,134,4],[82,12,134,8,"dragX"],[82,17,134,13],[82,20,134,16,"dragXValue"],[82,30,134,4],[83,0,135,4],[83,12,135,8,"touchX"],[83,18,135,14],[83,21,135,17,"touchXValue"],[83,32,135,4],[85,0,137,4],[85,12,137,8,"drawerPosition"],[85,26,137,22],[85,31,137,27],[85,37,137,4],[85,39,137,35],[86,0,145,6,"dragX"],[86,10,145,6,"dragX"],[86,15,145,11],[86,18,145,14,"Animated"],[86,40,145,23,"multiply"],[86,48,145,14],[86,49,145,32],[86,53,145,36,"Animated"],[86,75,145,45,"Value"],[86,80,145,32],[86,81,145,51],[86,82,145,52],[86,83,145,32],[86,84,145,14],[86,86,145,56,"dragXValue"],[86,96,145,14],[86,97,145,6],[87,0,146,6,"touchX"],[87,10,146,6,"touchX"],[87,16,146,12],[87,19,146,15,"Animated"],[87,41,146,24,"add"],[87,44,146,15],[87,45,147,8],[87,49,147,12,"Animated"],[87,71,147,21,"Value"],[87,76,147,8],[87,77,147,27,"containerWidth"],[87,91,147,8],[87,92,146,15],[87,94,148,8,"Animated"],[87,116,148,17,"multiply"],[87,124,148,8],[87,125,148,26],[87,129,148,30,"Animated"],[87,151,148,39,"Value"],[87,156,148,26],[87,157,148,45],[87,158,148,46],[87,159,148,26],[87,160,148,8],[87,162,148,50,"touchXValue"],[87,173,148,8],[87,174,146,15],[87,175,146,6],[88,0,150,6,"touchXValue"],[88,10,150,6,"touchXValue"],[88,21,150,17],[88,22,150,18,"setValue"],[88,30,150,6],[88,31,150,27,"containerWidth"],[88,45,150,6],[89,0,151,5],[89,9,137,4],[89,15,151,11],[90,0,152,6,"touchXValue"],[90,10,152,6,"touchXValue"],[90,21,152,17],[90,22,152,18,"setValue"],[90,30,152,6],[90,31,152,27],[90,32,152,6],[91,0,153,5],[93,0,179,4],[93,12,179,8,"translationX"],[93,24,179,20],[93,27,179,23,"dragX"],[93,32,179,4],[95,0,180,4],[95,12,180,8,"drawerType"],[95,22,180,18],[95,27,180,23],[95,34,180,4],[95,36,180,32],[96,0,181,6],[96,14,181,12,"startPositionX"],[96,28,181,26],[96,31,181,29,"Animated"],[96,53,181,38,"add"],[96,56,181,29],[96,57,182,8,"touchX"],[96,63,181,29],[96,65,183,8,"Animated"],[96,87,183,17,"multiply"],[96,95,183,8],[96,96,183,26],[96,100,183,30,"Animated"],[96,122,183,39,"Value"],[96,127,183,26],[96,128,183,45],[96,129,183,46],[96,130,183,26],[96,131,183,8],[96,133,183,50,"dragX"],[96,138,183,8],[96,139,181,29],[96,140,181,6],[98,0,186,6],[98,14,186,12,"dragOffsetFromOnStartPosition"],[98,43,186,41],[98,46,186,44,"startPositionX"],[98,60,186,58],[98,61,186,59,"interpolate"],[98,72,186,44],[98,73,186,71],[99,0,187,8,"inputRange"],[99,12,187,8,"inputRange"],[99,22,187,18],[99,24,187,20],[99,25,187,21,"drawerWidth"],[99,36,187,32],[99,39,187,35],[99,40,187,20],[99,42,187,38,"drawerWidth"],[99,53,187,20],[99,55,187,51,"drawerWidth"],[99,66,187,62],[99,69,187,65],[99,70,187,20],[99,71,186,71],[100,0,188,8,"outputRange"],[100,12,188,8,"outputRange"],[100,23,188,19],[100,25,188,21],[100,26,188,22],[100,27,188,21],[100,29,188,25],[100,30,188,21],[100,32,188,28],[100,33,188,21],[101,0,186,71],[101,11,186,44],[101,12,186,6],[102,0,190,6,"translationX"],[102,10,190,6,"translationX"],[102,22,190,18],[102,25,190,21,"Animated"],[102,47,190,30,"add"],[102,50,190,21],[102,51,190,34,"dragX"],[102,56,190,21],[102,58,190,41,"dragOffsetFromOnStartPosition"],[102,87,190,21],[102,88,190,6],[103,0,191,5],[105,0,193,4],[105,14,193,9,"_openValue"],[105,24,193,4],[105,27,193,22,"Animated"],[105,49,193,31,"add"],[105,52,193,22],[105,53,193,35,"translationX"],[105,65,193,22],[105,67,193,49,"drawerTranslation"],[105,84,193,22],[105,86,193,68,"interpolate"],[105,97,193,22],[105,98,194,6],[106,0,195,8,"inputRange"],[106,10,195,8,"inputRange"],[106,20,195,18],[106,22,195,20],[106,23,195,21],[106,24,195,20],[106,26,195,24,"drawerWidth"],[106,37,195,20],[106,38,194,6],[107,0,196,8,"outputRange"],[107,10,196,8,"outputRange"],[107,21,196,19],[107,23,196,21],[107,24,196,22],[107,25,196,21],[107,27,196,25],[107,28,196,21],[107,29,194,6],[108,0,197,8,"extrapolate"],[108,10,197,8,"extrapolate"],[108,21,197,19],[108,23,197,21],[109,0,194,6],[109,9,193,22],[109,10,193,4],[110,0,201,4],[110,14,201,9,"_onGestureEvent"],[110,29,201,4],[110,32,201,27,"Animated"],[110,54,201,36,"event"],[110,59,201,27],[110,60,202,6],[110,61,202,7],[111,0,202,9,"nativeEvent"],[111,10,202,9,"nativeEvent"],[111,21,202,20],[111,23,202,22],[112,0,202,24,"translationX"],[112,12,202,24,"translationX"],[112,24,202,36],[112,26,202,38,"dragXValue"],[112,36,202,22],[113,0,202,50,"x"],[113,12,202,50,"x"],[113,13,202,51],[113,15,202,53,"touchXValue"],[114,0,202,22],[115,0,202,7],[115,9,202,6],[115,10,201,27],[115,12,203,6],[116,0,203,8,"useNativeDriver"],[116,10,203,8,"useNativeDriver"],[116,25,203,23],[116,27,203,25,"props"],[116,32,203,30],[116,33,203,31,"useNativeAnimations"],[117,0,203,6],[117,9,201,27],[117,10,201,4],[118,0,205,3],[118,7,96,45],[120,0,96,45],[120,12,207,2,"_handleContainerLayout"],[120,34,96,45],[120,37,207,27],[120,53,207,48],[121,0,207,48],[121,12,207,30,"nativeEvent"],[121,23,207,48],[121,31,207,30,"nativeEvent"],[121,42,207,48],[123,0,208,4],[123,14,208,9,"setState"],[123,22,208,4],[123,23,208,18],[124,0,208,20,"containerWidth"],[124,10,208,20,"containerWidth"],[124,24,208,34],[124,26,208,36,"nativeEvent"],[124,37,208,47],[124,38,208,48,"layout"],[124,44,208,36],[124,45,208,55,"width"],[125,0,208,18],[125,9,208,4],[126,0,209,3],[126,7,96,45],[128,0,96,45],[128,12,211,2,"_emitStateChanged"],[128,29,96,45],[128,32,211,22],[128,42,211,23,"newState"],[128,50,211,22],[128,52,211,41,"drawerWillShow"],[128,66,211,22],[128,68,211,69],[129,0,212,4],[129,14,212,9,"props"],[129,19,212,4],[129,20,212,15,"onDrawerStateChanged"],[129,40,212,4],[129,44,213,6],[129,50,213,11,"props"],[129,55,213,6],[129,56,213,17,"onDrawerStateChanged"],[129,76,213,6],[129,77,213,38,"newState"],[129,85,213,6],[129,87,213,48,"drawerWillShow"],[129,101,213,6],[129,102,212,4],[130,0,214,3],[130,7,96,45],[132,0,96,45],[132,12,216,2,"_openingHandlerStateChange"],[132,38,96,45],[132,41,216,31],[132,58,216,52],[133,0,216,52],[133,12,216,34,"nativeEvent"],[133,23,216,52],[133,32,216,34,"nativeEvent"],[133,43,216,52],[135,0,217,4],[135,12,217,8,"nativeEvent"],[135,23,217,19],[135,24,217,20,"oldState"],[135,32,217,8],[135,37,217,33,"State"],[135,59,217,39,"ACTIVE"],[135,65,217,4],[135,67,217,47],[136,0,218,6],[136,16,218,11,"_handleRelease"],[136,30,218,6],[136,31,218,26,"nativeEvent"],[136,42,218,6],[137,0,219,5],[137,9,217,4],[137,15,219,11],[137,19,219,15,"nativeEvent"],[137,30,219,26],[137,31,219,27,"state"],[137,36,219,15],[137,41,219,37,"State"],[137,63,219,43,"ACTIVE"],[137,69,219,11],[137,71,219,51],[138,0,220,6],[138,16,220,11,"_emitStateChanged"],[138,33,220,6],[138,34,220,29,"DRAGGING"],[138,42,220,6],[138,44,220,39],[138,49,220,6],[140,0,221,6],[140,14,221,10],[140,20,221,15,"props"],[140,25,221,10],[140,26,221,21,"keyboardDismissMode"],[140,45,221,10],[140,50,221,45],[140,59,221,6],[140,61,221,56],[141,0,222,8,"Keyboard"],[141,34,222,17,"dismiss"],[141,41,222,8],[142,0,223,7],[144,0,224,6],[144,14,224,10],[144,20,224,15,"props"],[144,25,224,10],[144,26,224,21,"hideStatusBar"],[144,39,224,6],[144,41,224,36],[145,0,225,8,"StatusBar"],[145,35,225,18,"setHidden"],[145,44,225,8],[145,45,225,28],[145,49,225,8],[145,51,225,34],[145,57,225,39,"props"],[145,62,225,34],[145,63,225,45,"statusBarAnimation"],[145,81,225,34],[145,85,225,67],[145,92,225,8],[146,0,226,7],[147,0,227,5],[148,0,228,3],[148,7,96,45],[150,0,96,45],[150,12,230,2,"_onTapHandlerStateChange"],[150,36,96,45],[150,39,230,29],[150,56,230,50],[151,0,230,50],[151,12,230,32,"nativeEvent"],[151,23,230,50],[151,32,230,32,"nativeEvent"],[151,43,230,50],[153,0,231,4],[153,12,232,6],[153,18,232,11,"_drawerShown"],[153,30,232,6],[153,34,233,6,"nativeEvent"],[153,45,233,17],[153,46,233,18,"oldState"],[153,54,233,6],[153,59,233,31,"State"],[153,81,233,37,"ACTIVE"],[153,87,232,6],[153,91,234,6],[153,97,234,11,"props"],[153,102,234,6],[153,103,234,17,"drawerLockMode"],[153,117,234,6],[153,122,234,36],[153,135,231,4],[153,137,235,6],[154,0,236,6],[154,16,236,11,"closeDrawer"],[154,27,236,6],[155,0,237,5],[156,0,238,3],[156,7,96,45],[158,0,96,45],[158,12,240,2,"_handleRelease"],[158,26,96,45],[158,29,240,19],[158,39,240,19,"nativeEvent"],[158,50,240,30],[158,52,240,34],[159,0,240,34],[159,26,241,56],[159,32,241,61,"props"],[159,37,240,34],[160,0,240,34],[160,12,241,12,"drawerWidth"],[160,23,240,34],[160,38,241,12,"drawerWidth"],[160,49,240,34],[161,0,240,34],[161,12,241,25,"drawerPosition"],[161,26,240,34],[161,41,241,25,"drawerPosition"],[161,55,240,34],[162,0,240,34],[162,12,241,41,"drawerType"],[162,22,240,34],[162,37,241,41,"drawerType"],[162,47,240,34],[163,0,240,34],[163,12,242,12,"containerWidth"],[163,26,240,34],[163,29,242,31],[163,35,242,36,"state"],[163,40,240,34],[163,41,242,12,"containerWidth"],[163,55,240,34],[164,0,240,34],[164,12,243,24,"dragX"],[164,17,240,34],[164,20,243,56,"nativeEvent"],[164,31,240,34],[164,32,243,10,"translationX"],[164,44,240,34],[165,0,240,34],[165,12,243,31,"velocityX"],[165,21,240,34],[165,24,243,56,"nativeEvent"],[165,35,240,34],[165,36,243,31,"velocityX"],[165,45,240,34],[166,0,240,34],[166,12,243,45,"touchX"],[166,18,240,34],[166,21,243,56,"nativeEvent"],[166,32,240,34],[166,33,243,42,"x"],[166,34,240,34],[168,0,245,4],[168,12,245,8,"drawerPosition"],[168,26,245,22],[168,31,245,27],[168,37,245,4],[168,39,245,35],[169,0,248,6,"dragX"],[169,10,248,6,"dragX"],[169,15,248,11],[169,18,248,14],[169,19,248,15,"dragX"],[169,24,248,6],[170,0,249,6,"touchX"],[170,10,249,6,"touchX"],[170,16,249,12],[170,19,249,15,"containerWidth"],[170,33,249,29],[170,36,249,32,"touchX"],[170,42,249,6],[171,0,250,6,"velocityX"],[171,10,250,6,"velocityX"],[171,19,250,15],[171,22,250,18],[171,23,250,19,"velocityX"],[171,32,250,6],[172,0,251,5],[174,0,253,4],[174,12,253,10,"gestureStartX"],[174,25,253,23],[174,28,253,26,"touchX"],[174,34,253,32],[174,37,253,35,"dragX"],[174,42,253,4],[175,0,254,4],[175,12,254,8,"dragOffsetBasedOnStart"],[175,34,254,30],[175,37,254,33],[175,38,254,4],[177,0,256,4],[177,12,256,8,"drawerType"],[177,22,256,18],[177,27,256,23],[177,34,256,4],[177,36,256,32],[178,0,257,6,"dragOffsetBasedOnStart"],[178,10,257,6,"dragOffsetBasedOnStart"],[178,32,257,28],[178,35,258,8,"gestureStartX"],[178,48,258,21],[178,51,258,24,"drawerWidth"],[178,62,258,8],[178,65,258,38,"gestureStartX"],[178,78,258,51],[178,81,258,54,"drawerWidth"],[178,92,258,8],[178,95,258,68],[178,96,257,6],[179,0,259,5],[181,0,261,4],[181,12,261,10,"startOffsetX"],[181,24,261,22],[181,27,262,6,"dragX"],[181,32,262,11],[181,35,262,14,"dragOffsetBasedOnStart"],[181,57,262,6],[181,61,262,40],[181,67,262,45,"_drawerShown"],[181,79,262,40],[181,82,262,60,"drawerWidth"],[181,93,262,40],[181,96,262,74],[181,97,262,6],[181,98,261,4],[182,0,263,4],[182,12,263,10,"projOffsetX"],[182,23,263,21],[182,26,263,24,"startOffsetX"],[182,38,263,36],[182,41,263,39,"DRAG_TOSS"],[182,50,263,48],[182,53,263,51,"velocityX"],[182,62,263,4],[183,0,265,4],[183,12,265,10,"shouldOpen"],[183,22,265,20],[183,25,265,23,"projOffsetX"],[183,36,265,34],[183,39,265,37,"drawerWidth"],[183,50,265,48],[183,53,265,51],[183,54,265,4],[185,0,267,4],[185,12,267,8,"shouldOpen"],[185,22,267,4],[185,24,267,20],[186,0,268,6],[186,16,268,11,"_animateDrawer"],[186,30,268,6],[186,31,268,26,"startOffsetX"],[186,43,268,6],[186,45,268,40,"drawerWidth"],[186,56,268,6],[186,58,268,53,"velocityX"],[186,67,268,6],[187,0,269,5],[187,9,267,4],[187,15,269,11],[188,0,270,6],[188,16,270,11,"_animateDrawer"],[188,30,270,6],[188,31,270,26,"startOffsetX"],[188,43,270,6],[188,45,270,40],[188,46,270,6],[188,48,270,43,"velocityX"],[188,57,270,6],[189,0,271,5],[190,0,272,3],[190,7,96,45],[192,0,96,45],[192,12,274,2,"_updateShowing"],[192,26,96,45],[192,29,274,19],[192,39,274,20,"showing"],[192,46,274,19],[192,48,274,41],[193,0,275,4],[193,14,275,9,"_drawerShown"],[193,26,275,4],[193,29,275,24,"showing"],[193,36,275,4],[194,0,276,4],[194,14,276,9,"_accessibilityIsModalView"],[194,39,276,4],[194,40,276,35,"current"],[194,47,276,4],[194,51,277,6],[194,57,277,11,"_accessibilityIsModalView"],[194,82,277,6],[194,83,277,37,"current"],[194,90,277,6],[194,91,277,45,"setNativeProps"],[194,105,277,6],[194,106,277,60],[195,0,278,8,"accessibilityViewIsModal"],[195,10,278,8,"accessibilityViewIsModal"],[195,34,278,32],[195,36,278,34,"showing"],[196,0,277,60],[196,9,277,6],[196,10,276,4],[197,0,280,4],[197,14,280,9,"_pointerEventsView"],[197,32,280,4],[197,33,280,28,"current"],[197,40,280,4],[197,44,281,6],[197,50,281,11,"_pointerEventsView"],[197,68,281,6],[197,69,281,30,"current"],[197,76,281,6],[197,77,281,38,"setNativeProps"],[197,91,281,6],[197,92,281,53],[198,0,282,8,"pointerEvents"],[198,10,282,8,"pointerEvents"],[198,23,282,21],[198,25,282,23,"showing"],[198,32,282,30],[198,35,282,33],[198,41,282,30],[198,44,282,42],[199,0,281,53],[199,9,281,6],[199,10,280,4],[200,0,274,41],[200,27,284,60],[200,33,284,65,"props"],[200,38,274,41],[201,0,274,41],[201,12,284,12,"drawerPosition"],[201,26,274,41],[201,42,284,12,"drawerPosition"],[201,56,274,41],[202,0,274,41],[202,12,284,28,"minSwipeDistance"],[202,28,274,41],[202,44,284,28,"minSwipeDistance"],[202,60,274,41],[203,0,274,41],[203,12,284,46,"edgeWidth"],[203,21,274,41],[203,37,284,46,"edgeWidth"],[203,46,274,41],[204,0,285,4],[204,12,285,10,"fromLeft"],[204,20,285,18],[204,23,285,21,"drawerPosition"],[204,37,285,35],[204,42,285,40],[204,48,285,4],[205,0,289,4],[205,12,289,10,"gestureOrientation"],[205,30,289,28],[205,33,290,6],[205,34,290,7,"fromLeft"],[205,42,290,15],[205,45,290,18],[205,46,290,15],[205,49,290,22],[205,50,290,23],[205,51,290,6],[205,56,290,29],[205,62,290,34,"_drawerShown"],[205,74,290,29],[205,77,290,49],[205,78,290,50],[205,79,290,29],[205,82,290,54],[205,83,290,6],[205,84,289,4],[206,0,294,4],[206,12,294,10,"hitSlop"],[206,19,294,17],[206,22,294,20,"fromLeft"],[206,30,294,28],[206,33,295,8],[207,0,295,10,"left"],[207,10,295,10,"left"],[207,14,295,14],[207,16,295,16],[207,17,295,8],[208,0,295,19,"width"],[208,10,295,19,"width"],[208,15,295,24],[208,17,295,26,"showing"],[208,24,295,33],[208,27,295,36,"undefined"],[208,36,295,33],[208,39,295,48,"edgeWidth"],[209,0,295,8],[209,9,294,28],[209,12,296,8],[210,0,296,10,"right"],[210,10,296,10,"right"],[210,15,296,15],[210,17,296,17],[210,18,296,8],[211,0,296,20,"width"],[211,10,296,20,"width"],[211,15,296,25],[211,17,296,27,"showing"],[211,24,296,34],[211,27,296,37,"undefined"],[211,36,296,34],[211,39,296,49,"edgeWidth"],[212,0,296,8],[212,9,294,4],[213,0,297,4],[213,14,297,9,"_panGestureHandler"],[213,32,297,4],[213,33,297,28,"current"],[213,40,297,4],[213,44,298,6],[213,50,298,11,"_panGestureHandler"],[213,68,298,6],[213,69,298,30,"current"],[213,76,298,6],[213,77,298,38,"setNativeProps"],[213,91,298,6],[213,92,298,53],[214,0,299,8,"hitSlop"],[214,10,299,8,"hitSlop"],[214,17,299,15],[214,19,299,8,"hitSlop"],[214,26,298,53],[215,0,300,8,"activeOffsetX"],[215,10,300,8,"activeOffsetX"],[215,23,300,21],[215,25,300,23,"gestureOrientation"],[215,43,300,41],[215,46,300,44,"minSwipeDistance"],[216,0,298,53],[216,9,298,6],[216,10,297,4],[217,0,302,3],[217,7,96,45],[219,0,96,45],[219,12,304,2,"_animateDrawer"],[219,26,96,45],[219,29,304,19],[219,39,304,20,"fromValue"],[219,48,304,19],[219,50,304,40,"toValue"],[219,57,304,19],[219,59,304,57,"velocity"],[219,67,304,19],[219,69,304,78],[220,0,305,4],[220,14,305,9,"state"],[220,19,305,4],[220,20,305,15,"dragX"],[220,25,305,4],[220,26,305,21,"setValue"],[220,34,305,4],[220,35,305,30],[220,36,305,4],[222,0,306,4],[222,14,306,9,"state"],[222,19,306,4],[222,20,306,15,"touchX"],[222,26,306,4],[222,27,306,22,"setValue"],[222,35,306,4],[222,36,307,6],[222,42,307,11,"props"],[222,47,307,6],[222,48,307,17,"drawerPosition"],[222,62,307,6],[222,67,307,36],[222,73,307,6],[222,76,307,45],[222,77,307,6],[222,80,307,49],[222,86,307,54,"state"],[222,91,307,49],[222,92,307,60,"containerWidth"],[222,106,306,4],[224,0,310,4],[224,12,310,8,"fromValue"],[224,21,310,17],[224,26,310,22,"undefined"],[224,35,310,4],[224,37,310,33],[225,0,311,6],[225,14,311,10,"nextFramePosition"],[225,31,311,27],[225,34,311,30,"fromValue"],[225,43,311,6],[227,0,312,6],[227,14,312,10],[227,20,312,15,"props"],[227,25,312,10],[227,26,312,21,"useNativeAnimations"],[227,45,312,6],[227,47,312,42],[228,0,317,8],[228,16,317,12,"fromValue"],[228,25,317,21],[228,28,317,24,"toValue"],[228,35,317,12],[228,39,317,35,"velocity"],[228,47,317,43],[228,50,317,46],[228,51,317,8],[228,53,317,49],[229,0,318,10,"nextFramePosition"],[229,14,318,10,"nextFramePosition"],[229,31,318,27],[229,34,318,30,"Math"],[229,38,318,34],[229,39,318,35,"min"],[229,42,318,30],[229,43,318,39,"fromValue"],[229,52,318,48],[229,55,318,51,"velocity"],[229,63,318,59],[229,66,318,62],[229,70,318,30],[229,72,318,68,"toValue"],[229,79,318,30],[229,80,318,10],[230,0,319,9],[230,13,317,8],[230,19,319,15],[230,23,319,19,"fromValue"],[230,32,319,28],[230,35,319,31,"toValue"],[230,42,319,19],[230,46,319,42,"velocity"],[230,54,319,50],[230,57,319,53],[230,58,319,15],[230,60,319,56],[231,0,320,10,"nextFramePosition"],[231,14,320,10,"nextFramePosition"],[231,31,320,27],[231,34,320,30,"Math"],[231,38,320,34],[231,39,320,35,"max"],[231,42,320,30],[231,43,320,39,"fromValue"],[231,52,320,48],[231,55,320,51,"velocity"],[231,63,320,59],[231,66,320,62],[231,70,320,30],[231,72,320,68,"toValue"],[231,79,320,30],[231,80,320,10],[232,0,321,9],[233,0,322,7],[235,0,323,6],[235,16,323,11,"state"],[235,21,323,6],[235,22,323,17,"drawerTranslation"],[235,39,323,6],[235,40,323,35,"setValue"],[235,48,323,6],[235,49,323,44,"nextFramePosition"],[235,66,323,6],[236,0,324,5],[238,0,326,4],[238,12,326,10,"willShow"],[238,20,326,18],[238,23,326,21,"toValue"],[238,30,326,28],[238,35,326,33],[238,36,326,4],[240,0,327,4],[240,14,327,9,"_updateShowing"],[240,28,327,4],[240,29,327,24,"willShow"],[240,37,327,4],[242,0,328,4],[242,14,328,9,"_emitStateChanged"],[242,31,328,4],[242,32,328,27,"SETTLING"],[242,40,328,4],[242,42,328,37,"willShow"],[242,50,328,4],[244,0,329,4],[244,12,329,8],[244,18,329,13,"props"],[244,23,329,8],[244,24,329,19,"hideStatusBar"],[244,37,329,4],[244,39,329,34],[245,0,330,6,"StatusBar"],[245,33,330,16,"setHidden"],[245,42,330,6],[245,43,330,26,"willShow"],[245,51,330,6],[245,53,330,36],[245,59,330,41,"props"],[245,64,330,36],[245,65,330,47,"statusBarAnimation"],[245,83,330,36],[245,87,330,69],[245,94,330,6],[246,0,331,5],[248,0,332,4,"Animated"],[248,30,332,13,"spring"],[248,36,332,4],[248,37,332,20],[248,43,332,25,"state"],[248,48,332,20],[248,49,332,31,"drawerTranslation"],[248,66,332,4],[248,68,332,50],[249,0,333,6,"velocity"],[249,10,333,6,"velocity"],[249,18,333,14],[249,20,333,6,"velocity"],[249,28,332,50],[250,0,334,6,"bounciness"],[250,10,334,6,"bounciness"],[250,20,334,16],[250,22,334,18],[250,23,332,50],[251,0,335,6,"toValue"],[251,10,335,6,"toValue"],[251,17,335,13],[251,19,335,6,"toValue"],[251,26,332,50],[252,0,336,6,"useNativeDriver"],[252,10,336,6,"useNativeDriver"],[252,25,336,21],[252,27,336,23],[252,33,336,28,"props"],[252,38,336,23],[252,39,336,34,"useNativeAnimations"],[253,0,332,50],[253,9,332,4],[253,11,337,7,"start"],[253,16,332,4],[253,17,337,13],[253,34,337,31],[254,0,337,31],[254,14,337,16,"finished"],[254,22,337,31],[254,31,337,16,"finished"],[254,39,337,31],[256,0,338,6],[256,14,338,10,"finished"],[256,22,338,6],[256,24,338,20],[257,0,339,8],[257,18,339,13,"_emitStateChanged"],[257,35,339,8],[257,36,339,31,"IDLE"],[257,40,339,8],[257,42,339,37,"willShow"],[257,50,339,8],[259,0,340,8],[259,16,340,12,"willShow"],[259,24,340,8],[259,26,340,22],[260,0,341,10],[260,20,341,15,"props"],[260,25,341,10],[260,26,341,21,"onDrawerOpen"],[260,38,341,10],[260,42,341,37],[260,48,341,42,"props"],[260,53,341,37],[260,54,341,48,"onDrawerOpen"],[260,66,341,37],[260,68,341,10],[261,0,342,9],[261,13,340,8],[261,19,342,15],[262,0,343,10],[262,20,343,15,"props"],[262,25,343,10],[262,26,343,21,"onDrawerClose"],[262,39,343,10],[262,43,343,38],[262,49,343,43,"props"],[262,54,343,38],[262,55,343,49,"onDrawerClose"],[262,68,343,38],[262,70,343,10],[263,0,344,9],[264,0,345,7],[265,0,346,5],[265,9,332,4],[266,0,347,3],[266,7,96,45],[268,0,96,45],[268,12,349,2,"openDrawer"],[268,22,96,45],[268,25,349,15],[268,37,349,59],[269,0,349,59],[269,12,349,16,"options"],[269,19,349,59],[269,90,349,52],[269,92,349,59],[271,0,350,4],[271,14,350,9,"_animateDrawer"],[271,28,350,4],[271,29,351,6,"undefined"],[271,38,350,4],[271,40,352,6],[271,46,352,11,"props"],[271,51,352,6],[271,52,352,17,"drawerWidth"],[271,63,350,4],[271,65,353,6,"options"],[271,72,353,13],[271,73,353,14,"velocity"],[271,81,353,6],[271,84,353,25,"options"],[271,91,353,32],[271,92,353,33,"velocity"],[271,100,353,6],[271,103,353,44],[271,104,350,4],[273,0,357,4],[273,14,357,9,"forceUpdate"],[273,25,357,4],[274,0,358,3],[274,7,96,45],[276,0,96,45],[276,12,360,2,"closeDrawer"],[276,23,96,45],[276,26,360,16],[276,38,360,60],[277,0,360,60],[277,12,360,17,"options"],[277,19,360,60],[277,90,360,53],[277,92,360,60],[279,0,361,4],[279,14,361,9,"_animateDrawer"],[279,28,361,4],[279,29,361,24,"undefined"],[279,38,361,4],[279,40,361,35],[279,41,361,4],[279,43,361,38,"options"],[279,50,361,45],[279,51,361,46,"velocity"],[279,59,361,38],[279,62,361,57,"options"],[279,69,361,64],[279,70,361,65,"velocity"],[279,78,361,38],[279,81,361,76],[279,82,361,4],[281,0,364,4],[281,14,364,9,"forceUpdate"],[281,25,364,4],[282,0,365,3],[282,7,96,45],[284,0,96,45],[284,12,367,2,"_renderOverlay"],[284,26,96,45],[284,29,367,19],[284,41,367,25],[285,0,369,4],[285,32,369,14],[285,38,369,19,"_openValue"],[285,48,369,4],[285,50,369,31],[285,65,369,4],[287,0,370,4],[287,12,370,10,"overlayOpacity"],[287,26,370,24],[287,29,370,27],[287,35,370,32,"_openValue"],[287,45,370,27],[287,46,370,43,"interpolate"],[287,57,370,27],[287,58,370,55],[288,0,371,6,"inputRange"],[288,10,371,6,"inputRange"],[288,20,371,16],[288,22,371,18],[288,23,371,19],[288,24,371,18],[288,26,371,22],[288,27,371,18],[288,28,370,55],[289,0,372,6,"outputRange"],[289,10,372,6,"outputRange"],[289,21,372,17],[289,23,372,19],[289,24,372,20],[289,25,372,19],[289,27,372,23],[289,30,372,19],[289,31,370,55],[290,0,373,6,"extrapolate"],[290,10,373,6,"extrapolate"],[290,21,373,17],[290,23,373,19],[291,0,370,55],[291,9,370,27],[291,10,370,4],[293,0,375,4],[293,12,375,10,"dynamicOverlayStyles"],[293,32,375,30],[293,35,375,33],[294,0,376,6,"opacity"],[294,10,376,6,"opacity"],[294,17,376,13],[294,19,376,15,"overlayOpacity"],[294,33,375,33],[295,0,377,6,"backgroundColor"],[295,10,377,6,"backgroundColor"],[295,25,377,21],[295,27,377,23],[295,33,377,28,"props"],[295,38,377,23],[295,39,377,34,"overlayColor"],[296,0,375,33],[296,9,375,4],[297,0,380,4],[297,15,381,6],[297,44,381,7],[297,77,381,6],[298,0,381,25],[298,10,381,25],[298,30,381,45],[298,32,381,47],[298,38,381,52,"_onTapHandlerStateChange"],[298,62,381,6],[299,0,381,6],[300,0,381,6],[301,0,381,6],[302,0,381,6],[303,0,381,6],[303,11,382,8],[303,40,382,9],[303,61,382,8],[303,62,382,18],[303,66,382,8],[304,0,383,10],[304,10,383,10],[304,23,383,23],[304,25,383,25],[304,31,383,30,"_drawerShown"],[304,43,383,25],[304,46,383,45],[304,52,383,25],[304,55,383,54],[304,61,382,8],[305,0,384,10],[305,10,384,10],[305,13,384,13],[305,15,384,15],[305,21,384,20,"_pointerEventsView"],[305,39,382,8],[306,0,385,10],[306,10,385,10],[306,15,385,15],[306,17,385,17],[306,18,385,18,"styles"],[306,24,385,24],[306,25,385,25,"overlay"],[306,32,385,17],[306,34,385,34,"dynamicOverlayStyles"],[306,54,385,17],[306,55,382,8],[307,0,382,8],[308,0,382,8],[309,0,382,8],[310,0,382,8],[311,0,382,8],[311,10,381,6],[311,11,380,4],[312,0,389,3],[312,7,96,45],[314,0,96,45],[314,12,391,2,"_renderDrawer"],[314,25,96,45],[314,28,391,18],[314,40,391,24],[315,0,391,24],[315,27,399,8],[315,33,399,13,"props"],[315,38,391,24],[316,0,391,24],[316,12,393,6,"drawerBackgroundColor"],[316,33,391,24],[316,49,393,6,"drawerBackgroundColor"],[316,70,391,24],[317,0,391,24],[317,12,394,6,"drawerWidth"],[317,23,391,24],[317,39,394,6,"drawerWidth"],[317,50,391,24],[318,0,391,24],[318,12,395,6,"drawerPosition"],[318,26,391,24],[318,42,395,6,"drawerPosition"],[318,56,391,24],[319,0,391,24],[319,12,396,6,"drawerType"],[319,22,391,24],[319,38,396,6,"drawerType"],[319,48,391,24],[320,0,391,24],[320,12,397,6,"drawerContainerStyle"],[320,32,391,24],[320,48,397,6,"drawerContainerStyle"],[320,68,391,24],[321,0,391,24],[321,12,398,6,"contentContainerStyle"],[321,33,391,24],[321,49,398,6,"contentContainerStyle"],[321,70,391,24],[322,0,401,4],[322,12,401,10,"fromLeft"],[322,20,401,18],[322,23,401,21,"drawerPosition"],[322,37,401,35],[322,42,401,40],[322,48,401,4],[323,0,402,4],[323,12,402,10,"drawerSlide"],[323,23,402,21],[323,26,402,24,"drawerType"],[323,36,402,34],[323,41,402,39],[323,47,402,4],[324,0,403,4],[324,12,403,10,"containerSlide"],[324,26,403,24],[324,29,403,27,"drawerType"],[324,39,403,37],[324,44,403,42],[324,51,403,4],[325,0,409,4],[325,12,409,10,"reverseContentDirection"],[325,35,409,33],[325,38,409,36,"I18nManager"],[325,63,409,48,"isRTL"],[325,68,409,36],[325,71,409,56,"fromLeft"],[325,79,409,36],[325,82,409,67],[325,83,409,68,"fromLeft"],[325,91,409,4],[326,0,411,4],[326,12,411,10,"dynamicDrawerStyles"],[326,31,411,29],[326,34,411,32],[327,0,412,6,"backgroundColor"],[327,10,412,6,"backgroundColor"],[327,25,412,21],[327,27,412,23,"drawerBackgroundColor"],[327,48,411,32],[328,0,413,6,"width"],[328,10,413,6,"width"],[328,15,413,11],[328,17,413,13,"drawerWidth"],[329,0,411,32],[329,9,411,4],[330,0,415,4],[330,12,415,10,"openValue"],[330,21,415,19],[330,24,415,22],[330,30,415,27,"_openValue"],[330,40,415,4],[331,0,416,4],[331,32,416,14,"openValue"],[331,41,416,4],[331,43,416,25],[331,58,416,4],[332,0,418,4],[332,12,418,8,"containerStyles"],[332,27,418,4],[334,0,419,4],[334,12,419,8,"containerSlide"],[334,26,419,4],[334,28,419,24],[335,0,420,6],[335,14,420,12,"containerTranslateX"],[335,33,420,31],[335,36,420,34,"openValue"],[335,45,420,43],[335,46,420,44,"interpolate"],[335,57,420,34],[335,58,420,56],[336,0,421,8,"inputRange"],[336,12,421,8,"inputRange"],[336,22,421,18],[336,24,421,20],[336,25,421,21],[336,26,421,20],[336,28,421,24],[336,29,421,20],[336,30,420,56],[337,0,422,8,"outputRange"],[337,12,422,8,"outputRange"],[337,23,422,19],[337,25,422,21,"fromLeft"],[337,33,422,29],[337,36,422,32],[337,37,422,33],[337,38,422,32],[337,40,422,36,"drawerWidth"],[337,51,422,32],[337,52,422,29],[337,55,422,51],[337,56,422,52],[337,57,422,51],[337,59,422,55],[337,60,422,56,"drawerWidth"],[337,71,422,51],[337,72,420,56],[338,0,423,8,"extrapolate"],[338,12,423,8,"extrapolate"],[338,23,423,19],[338,25,423,21],[339,0,420,56],[339,11,420,34],[339,12,420,6],[340,0,425,6,"containerStyles"],[340,10,425,6,"containerStyles"],[340,25,425,21],[340,28,425,24],[341,0,426,8,"transform"],[341,12,426,8,"transform"],[341,21,426,17],[341,23,426,19],[341,24,426,20],[342,0,426,22,"translateX"],[342,14,426,22,"translateX"],[342,24,426,32],[342,26,426,34,"containerTranslateX"],[343,0,426,20],[343,13,426,19],[344,0,425,24],[344,11,425,6],[345,0,428,5],[347,0,430,4],[347,12,430,8,"drawerTranslateX"],[347,28,430,24],[347,31,430,27],[347,32,430,4],[349,0,431,4],[349,12,431,8,"drawerSlide"],[349,23,431,4],[349,25,431,21],[350,0,432,6],[350,14,432,12,"closedDrawerOffset"],[350,32,432,30],[350,35,432,33,"fromLeft"],[350,43,432,41],[350,46,432,44],[350,47,432,45,"drawerWidth"],[350,58,432,41],[350,61,432,59,"drawerWidth"],[350,72,432,6],[351,0,433,6,"drawerTranslateX"],[351,10,433,6,"drawerTranslateX"],[351,26,433,22],[351,29,433,25,"openValue"],[351,38,433,34],[351,39,433,35,"interpolate"],[351,50,433,25],[351,51,433,47],[352,0,434,8,"inputRange"],[352,12,434,8,"inputRange"],[352,22,434,18],[352,24,434,20],[352,25,434,21],[352,26,434,20],[352,28,434,24],[352,29,434,20],[352,30,433,47],[353,0,435,8,"outputRange"],[353,12,435,8,"outputRange"],[353,23,435,19],[353,25,435,21],[353,26,435,22,"closedDrawerOffset"],[353,44,435,21],[353,46,435,42],[353,47,435,21],[353,48,433,47],[354,0,436,8,"extrapolate"],[354,12,436,8,"extrapolate"],[354,23,436,19],[354,25,436,21],[355,0,433,47],[355,11,433,25],[355,12,433,6],[356,0,438,5],[358,0,439,4],[358,12,439,10,"drawerStyles"],[358,24,439,22],[358,27,439,25],[359,0,440,6,"transform"],[359,10,440,6,"transform"],[359,19,440,15],[359,21,440,17],[359,22,440,18],[360,0,440,20,"translateX"],[360,12,440,20,"translateX"],[360,22,440,30],[360,24,440,32,"drawerTranslateX"],[361,0,440,18],[361,11,440,17],[361,12,439,25],[362,0,441,6,"flexDirection"],[362,10,441,6,"flexDirection"],[362,23,441,19],[362,25,441,21,"reverseContentDirection"],[362,48,441,44],[362,51,441,47],[362,64,441,44],[362,67,441,63],[363,0,439,25],[363,9,439,4],[364,0,444,4],[364,15,445,6],[364,44,445,7],[364,65,445,6],[364,66,445,16],[364,70,445,6],[365,0,445,21],[365,10,445,21],[365,15,445,26],[365,17,445,28,"styles"],[365,23,445,34],[365,24,445,35,"main"],[365,28,445,6],[366,0,445,41],[366,10,445,41],[366,18,445,49],[366,20,445,51],[366,26,445,56,"_handleContainerLayout"],[366,48,445,6],[367,0,445,6],[368,0,445,6],[369,0,445,6],[370,0,445,6],[371,0,445,6],[371,11,446,8],[371,40,446,9],[371,61,446,8],[371,62,446,18],[371,66,446,8],[372,0,447,10],[372,10,447,10],[372,15,447,15],[372,17,447,17],[372,18,448,12,"drawerType"],[372,28,448,22],[372,33,448,27],[372,40,448,12],[372,43,449,16,"styles"],[372,49,449,22],[372,50,449,23,"containerOnBack"],[372,65,448,12],[372,68,450,16,"styles"],[372,74,450,22],[372,75,450,23,"containerInFront"],[372,91,447,17],[372,93,451,12,"containerStyles"],[372,108,447,17],[372,110,452,12,"contentContainerStyle"],[372,131,447,17],[372,132,446,8],[373,0,446,8],[374,0,446,8],[375,0,446,8],[376,0,446,8],[377,0,446,8],[377,11,454,11],[377,18,454,18],[377,24,454,23,"props"],[377,29,454,18],[377,30,454,29,"children"],[377,38,454,11],[377,43,454,42],[377,53,454,11],[377,56,455,14],[377,62,455,19,"props"],[377,67,455,14],[377,68,455,25,"children"],[377,76,455,14],[377,77,455,34],[377,83,455,39,"_openValue"],[377,93,455,14],[377,94,454,11],[377,97,456,14],[377,103,456,19,"props"],[377,108,456,14],[377,109,456,25,"children"],[377,117,446,8],[377,119,457,11],[377,125,457,16,"_renderOverlay"],[377,139,457,11],[377,141,446,8],[377,142,445,6],[377,144,459,8],[377,173,459,9],[377,194,459,8],[377,195,459,18],[377,199,459,8],[378,0,460,10],[378,10,460,10],[378,23,460,23],[378,25,460,24],[378,35,459,8],[379,0,461,10],[379,10,461,10],[379,13,461,13],[379,15,461,15],[379,21,461,20,"_accessibilityIsModalView"],[379,46,459,8],[380,0,462,10],[380,10,462,10],[380,34,462,34],[380,36,462,36],[380,42,462,41,"_drawerShown"],[380,54,459,8],[381,0,463,10],[381,10,463,10],[381,15,463,15],[381,17,463,17],[381,18,463,18,"styles"],[381,24,463,24],[381,25,463,25,"drawerContainer"],[381,40,463,17],[381,42,463,42,"drawerStyles"],[381,54,463,17],[381,56,463,56,"drawerContainerStyle"],[381,76,463,17],[381,77,459,8],[382,0,459,8],[383,0,459,8],[384,0,459,8],[385,0,459,8],[386,0,459,8],[386,11,464,10],[386,40,464,11],[386,57,464,10],[387,0,464,16],[387,10,464,16],[387,15,464,21],[387,17,464,23,"dynamicDrawerStyles"],[387,36,464,10],[388,0,464,10],[389,0,464,10],[390,0,464,10],[391,0,464,10],[392,0,464,10],[392,11,465,13],[392,17,465,18,"props"],[392,22,465,13],[392,23,465,24,"renderNavigationView"],[392,43,465,13],[392,44,465,45],[392,50,465,50,"_openValue"],[392,60,465,13],[392,61,464,10],[392,62,459,8],[392,63,445,6],[392,64,444,4],[393,0,470,3],[393,7,96,45],[395,0,96,45],[395,12,472,2,"_setPanGestureRef"],[395,29,96,45],[395,32,472,22],[395,42,472,22,"ref"],[395,45,472,25],[395,47,472,29],[396,0,473,4],[396,14,473,9,"_panGestureHandler"],[396,32,473,4],[396,33,473,28,"current"],[396,40,473,4],[396,43,473,38,"ref"],[396,46,473,4],[397,0,474,4],[397,14,474,9,"props"],[397,19,474,4],[397,20,474,15,"onGestureRef"],[397,32,474,4],[397,36,474,31],[397,42,474,36,"props"],[397,47,474,31],[397,48,474,42,"onGestureRef"],[397,60,474,31],[397,61,474,55,"ref"],[397,64,474,31],[397,65,474,4],[398,0,475,3],[398,7,96,45],[400,0,99,4],[400,10,99,10,"dragX"],[400,16,99,15],[400,19,99,18],[400,23,99,22,"Animated"],[400,45,99,31,"Value"],[400,50,99,18],[400,51,99,37],[400,52,99,18],[400,53,99,4],[402,0,100,4],[402,10,100,10,"touchX"],[402,17,100,16],[402,20,100,19],[402,24,100,23,"Animated"],[402,46,100,32,"Value"],[402,51,100,19],[402,52,100,38],[402,53,100,19],[402,54,100,4],[404,0,101,4],[404,10,101,10,"drawerTranslation"],[404,28,101,27],[404,31,101,30],[404,35,101,34,"Animated"],[404,57,101,43,"Value"],[404,62,101,30],[404,63,101,49],[404,64,101,30],[404,65,101,4],[406,0,103,4],[406,12,103,9,"state"],[406,17,103,4],[406,20,103,17],[407,0,104,6,"dragX"],[407,8,104,6,"dragX"],[407,13,104,11],[407,15,104,6,"dragX"],[407,21,103,17],[408,0,105,6,"touchX"],[408,8,105,6,"touchX"],[408,14,105,12],[408,16,105,6,"touchX"],[408,23,103,17],[409,0,106,6,"drawerTranslation"],[409,8,106,6,"drawerTranslation"],[409,25,106,23],[409,27,106,6,"drawerTranslation"],[409,45,103,17],[410,0,107,6,"containerWidth"],[410,8,107,6,"containerWidth"],[410,22,107,20],[410,24,107,22],[411,0,103,17],[411,7,103,4],[413,0,110,4],[413,12,110,9,"_updateAnimatedEvent"],[413,32,110,4],[413,33,110,30,"props"],[413,39,110,4],[413,41,110,37],[413,47,110,42,"state"],[413,52,110,4],[415,0,96,45],[416,0,111,3],[420,42,113,22,"props"],[420,47],[420,49,113,39,"state"],[420,54],[420,56,113,57],[421,0,114,4],[421,12,115,6],[421,17,115,11,"props"],[421,22,115,6],[421,23,115,17,"drawerPosition"],[421,37,115,6],[421,42,115,36,"props"],[421,47,115,41],[421,48,115,42,"drawerPosition"],[421,62,115,6],[421,66,116,6],[421,71,116,11,"props"],[421,76,116,6],[421,77,116,17,"drawerWidth"],[421,88,116,6],[421,93,116,33,"props"],[421,98,116,38],[421,99,116,39,"drawerWidth"],[421,110,115,6],[421,114,117,6],[421,119,117,11,"props"],[421,124,117,6],[421,125,117,17,"drawerType"],[421,135,117,6],[421,140,117,32,"props"],[421,145,117,37],[421,146,117,38,"drawerType"],[421,156,115,6],[421,160,118,6],[421,165,118,11,"state"],[421,170,118,6],[421,171,118,17,"containerWidth"],[421,185,118,6],[421,190,118,36,"state"],[421,195,118,41],[421,196,118,42,"containerWidth"],[421,210,114,4],[421,212,119,6],[422,0,120,6],[422,15,120,11,"_updateAnimatedEvent"],[422,35,120,6],[422,36,120,32,"props"],[422,41,120,6],[422,43,120,39,"state"],[422,48,120,6],[423,0,121,5],[424,0,122,3],[427,31,477,11],[428,0,477,11],[428,27,483,8],[428,32,483,13,"props"],[428,37,477,11],[429,0,477,11],[429,12,479,6,"drawerPosition"],[429,26,477,11],[429,42,479,6,"drawerPosition"],[429,56,477,11],[430,0,477,11],[430,12,480,6,"drawerLockMode"],[430,26,477,11],[430,42,480,6,"drawerLockMode"],[430,56,477,11],[431,0,477,11],[431,12,481,6,"edgeWidth"],[431,21,477,11],[431,37,481,6,"edgeWidth"],[431,46,477,11],[432,0,477,11],[432,12,482,6,"minSwipeDistance"],[432,28,477,11],[432,44,482,6,"minSwipeDistance"],[432,60,477,11],[433,0,485,4],[433,12,485,10,"fromLeft"],[433,20,485,18],[433,23,485,21,"drawerPosition"],[433,37,485,35],[433,42,485,40],[433,48,485,4],[434,0,490,4],[434,12,490,10,"gestureOrientation"],[434,30,490,28],[434,33,491,6],[434,34,491,7,"fromLeft"],[434,42,491,15],[434,45,491,18],[434,46,491,15],[434,49,491,22],[434,50,491,23],[434,51,491,6],[434,56,491,29],[434,61,491,34,"_drawerShown"],[434,73,491,29],[434,76,491,49],[434,77,491,50],[434,78,491,29],[434,81,491,54],[434,82,491,6],[434,83,490,4],[435,0,496,4],[435,12,496,10,"hitSlop"],[435,19,496,17],[435,22,496,20,"fromLeft"],[435,30,496,28],[435,33,497,8],[436,0,497,10,"left"],[436,10,497,10,"left"],[436,14,497,14],[436,16,497,16],[436,17,497,8],[437,0,497,19,"width"],[437,10,497,19,"width"],[437,15,497,24],[437,17,497,26],[437,22,497,31,"_drawerShown"],[437,34,497,26],[437,37,497,46,"undefined"],[437,46,497,26],[437,49,497,58,"edgeWidth"],[438,0,497,8],[438,9,496,28],[438,12,498,8],[439,0,498,10,"right"],[439,10,498,10,"right"],[439,15,498,15],[439,17,498,17],[439,18,498,8],[440,0,498,20,"width"],[440,10,498,20,"width"],[440,15,498,25],[440,17,498,27],[440,22,498,32,"_drawerShown"],[440,34,498,27],[440,37,498,47,"undefined"],[440,46,498,27],[440,49,498,59,"edgeWidth"],[441,0,498,8],[441,9,496,4],[442,0,500,4],[442,15,501,6],[442,44,501,7],[442,77,501,6],[443,0,502,8],[443,10,502,8],[443,13,502,11],[443,15,502,13],[443,20,502,18,"_setPanGestureRef"],[443,37,501,6],[444,0,503,8],[444,10,503,8],[444,17,503,15],[444,19,503,17,"hitSlop"],[444,26,501,6],[445,0,504,8],[445,10,504,8],[445,23,504,21],[445,25,504,23,"gestureOrientation"],[445,43,504,41],[445,46,504,44,"minSwipeDistance"],[445,62,501,6],[446,0,505,8],[446,10,505,8],[446,21,505,19],[446,23,505,21],[446,24,505,22],[446,25,505,23],[446,27,505,21],[446,29,505,27],[446,31,505,21],[446,32,501,6],[447,0,506,8],[447,10,506,8],[447,24,506,22],[447,26,506,24],[447,31,506,29,"_onGestureEvent"],[447,46,501,6],[448,0,507,8],[448,10,507,8],[448,30,507,28],[448,32,507,30],[448,37,507,35,"_openingHandlerStateChange"],[448,63,501,6],[449,0,508,8],[449,10,508,8],[449,17,508,15],[449,19,509,10,"drawerLockMode"],[449,33,509,24],[449,38,509,29],[449,53,509,10],[449,57,509,48,"drawerLockMode"],[449,71,509,62],[449,76,509,67],[449,89,501,6],[450,0,501,6],[451,0,501,6],[452,0,501,6],[453,0,501,6],[454,0,501,6],[454,11,511,9],[454,16,511,14,"_renderDrawer"],[454,29,511,9],[454,31,501,6],[454,32,500,4],[455,0,514,3],[458,4,73,42,"Component"],[458,20],[458,30,74,9,"defaultProps"],[458,42],[458,45,74,24],[459,0,75,4,"drawerWidth"],[459,4,75,4,"drawerWidth"],[459,15,75,15],[459,17,75,17],[459,20,74,24],[460,0,76,4,"drawerPosition"],[460,4,76,4,"drawerPosition"],[460,18,76,18],[460,20,76,20],[460,26,74,24],[461,0,77,4,"useNativeAnimations"],[461,4,77,4,"useNativeAnimations"],[461,23,77,23],[461,25,77,25],[461,29,74,24],[462,0,78,4,"drawerType"],[462,4,78,4,"drawerType"],[462,14,78,14],[462,16,78,16],[462,23,74,24],[463,0,79,4,"edgeWidth"],[463,4,79,4,"edgeWidth"],[463,13,79,13],[463,15,79,15],[463,17,74,24],[464,0,80,4,"minSwipeDistance"],[464,4,80,4,"minSwipeDistance"],[464,20,80,20],[464,22,80,22],[464,23,74,24],[465,0,81,4,"overlayColor"],[465,4,81,4,"overlayColor"],[465,16,81,16],[465,18,81,18],[465,25,74,24],[466,0,82,4,"drawerLockMode"],[466,4,82,4,"drawerLockMode"],[466,18,82,18],[466,20,82,20],[467,0,74,24],[467,3],[467,12,85,9,"positions"],[467,21],[467,24,85,21],[468,0,86,4,"Left"],[468,4,86,4,"Left"],[468,8,86,8],[468,10,86,10],[468,16,85,21],[469,0,87,4,"Right"],[469,4,87,4,"Right"],[469,9,87,9],[469,11,87,11],[470,0,85,21],[470,3],[475,0,517,0],[475,6,517,6,"styles"],[475,12,517,12],[475,15,517,15,"StyleSheet"],[475,39,517,26,"create"],[475,45,517,15],[475,46,517,33],[476,0,518,2,"drawerContainer"],[476,4,518,2,"drawerContainer"],[476,19,518,17],[476,53,519,7,"StyleSheet"],[476,77,519,18,"absoluteFillObject"],[476,95,518,17],[477,0,520,4,"zIndex"],[477,6,520,4,"zIndex"],[477,12,520,10],[477,14,520,12],[477,18,518,17],[478,0,521,4,"flexDirection"],[478,6,521,4,"flexDirection"],[478,19,521,17],[478,21,521,19],[479,0,518,17],[479,6,517,33],[480,0,523,2,"containerInFront"],[480,4,523,2,"containerInFront"],[480,20,523,18],[480,54,524,7,"StyleSheet"],[480,78,524,18,"absoluteFillObject"],[480,96,523,18],[481,0,525,4,"zIndex"],[481,6,525,4,"zIndex"],[481,12,525,10],[481,14,525,12],[482,0,523,18],[482,6,517,33],[483,0,527,2,"containerOnBack"],[483,4,527,2,"containerOnBack"],[483,19,527,17],[483,53,528,7,"StyleSheet"],[483,77,528,18,"absoluteFillObject"],[483,95,527,17],[483,96,517,33],[484,0,530,2,"main"],[484,4,530,2,"main"],[484,8,530,6],[484,10,530,8],[485,0,531,4,"flex"],[485,6,531,4,"flex"],[485,10,531,8],[485,12,531,10],[485,13,530,8],[486,0,532,4,"zIndex"],[486,6,532,4,"zIndex"],[486,12,532,10],[486,14,532,12],[486,15,530,8],[487,0,533,4,"overflow"],[487,6,533,4,"overflow"],[487,14,533,12],[487,16,533,14],[488,0,530,8],[488,5,517,33],[489,0,535,2,"overlay"],[489,4,535,2,"overlay"],[489,11,535,9],[489,45,536,7,"StyleSheet"],[489,69,536,18,"absoluteFillObject"],[489,87,535,9],[490,0,537,4,"zIndex"],[490,6,537,4,"zIndex"],[490,12,537,10],[490,14,537,12],[491,0,535,9],[492,0,517,33],[492,3,517,15],[492,4,517,0]]},"type":"js/module"}]}