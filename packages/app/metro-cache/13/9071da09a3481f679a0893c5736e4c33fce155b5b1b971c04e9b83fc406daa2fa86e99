{"dependencies":[],"output":[{"data":{"code":"(function (global) {\n  function findIndex(predicate, context) {\n    if (this == null) {\n      throw new TypeError('Array.prototype.findIndex called on null or undefined');\n    }\n\n    if (typeof predicate !== 'function') {\n      throw new TypeError('predicate must be a function');\n    }\n\n    var list = Object(this);\n    var length = list.length >>> 0;\n\n    for (var i = 0; i < length; i++) {\n      if (predicate.call(context, list[i], i, list)) {\n        return i;\n      }\n    }\n\n    return -1;\n  }\n\n  if (!Array.prototype.findIndex) {\n    Object.defineProperty(Array.prototype, 'findIndex', {\n      enumerable: false,\n      writable: true,\n      configurable: true,\n      value: findIndex\n    });\n  }\n\n  if (!Array.prototype.find) {\n    Object.defineProperty(Array.prototype, 'find', {\n      enumerable: false,\n      writable: true,\n      configurable: true,\n      value: function value(predicate, context) {\n        if (this == null) {\n          throw new TypeError('Array.prototype.find called on null or undefined');\n        }\n\n        var index = findIndex.call(this, predicate, context);\n        return index === -1 ? undefined : this[index];\n      }\n    });\n  }\n\n  if (!Array.prototype.includes) {\n    Object.defineProperty(Array.prototype, 'includes', {\n      enumerable: false,\n      writable: true,\n      configurable: true,\n      value: function value(searchElement) {\n        var O = Object(this);\n        var len = parseInt(O.length) || 0;\n\n        if (len === 0) {\n          return false;\n        }\n\n        var n = parseInt(arguments[1]) || 0;\n        var k;\n\n        if (n >= 0) {\n          k = n;\n        } else {\n          k = len + n;\n\n          if (k < 0) {\n            k = 0;\n          }\n        }\n\n        var currentElement;\n\n        while (k < len) {\n          currentElement = O[k];\n\n          if (searchElement === currentElement || searchElement !== searchElement && currentElement !== currentElement) {\n            return true;\n          }\n\n          k++;\n        }\n\n        return false;\n      }\n    });\n  }\n})(typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : this);","map":[[2,0,15,0],[2,11,15,9,"findIndex"],[2,20,15,0],[2,21,15,19,"predicate"],[2,30,15,0],[2,32,15,30,"context"],[2,39,15,0],[2,41,15,39],[3,0,16,2],[3,8,16,6],[3,16,16,14],[3,20,16,2],[3,22,16,20],[4,0,17,4],[4,12,17,10],[4,16,17,14,"TypeError"],[4,25,17,10],[4,26,18,6],[4,81,17,10],[4,82,17,4],[5,0,20,3],[7,0,21,2],[7,8,21,6],[7,15,21,13,"predicate"],[7,24,21,6],[7,29,21,27],[7,39,21,2],[7,41,21,39],[8,0,22,4],[8,12,22,10],[8,16,22,14,"TypeError"],[8,25,22,10],[8,26,22,24],[8,56,22,10],[8,57,22,4],[9,0,23,3],[11,0,24,2],[11,8,24,6,"list"],[11,12,24,10],[11,15,24,13,"Object"],[11,21,24,19],[11,22,24,20],[11,26,24,19],[11,27,24,2],[12,0,25,2],[12,8,25,6,"length"],[12,14,25,12],[12,17,25,15,"list"],[12,21,25,19],[12,22,25,20,"length"],[12,28,25,15],[12,33,25,31],[12,34,25,2],[14,0,26,2],[14,9,26,7],[14,13,26,11,"i"],[14,14,26,12],[14,17,26,15],[14,18,26,2],[14,20,26,18,"i"],[14,21,26,19],[14,24,26,22,"length"],[14,30,26,2],[14,32,26,30,"i"],[14,33,26,31],[14,35,26,2],[14,37,26,35],[15,0,27,4],[15,10,27,8,"predicate"],[15,19,27,17],[15,20,27,18,"call"],[15,24,27,8],[15,25,27,23,"context"],[15,32,27,8],[15,34,27,32,"list"],[15,38,27,36],[15,39,27,37,"i"],[15,40,27,36],[15,41,27,8],[15,43,27,41,"i"],[15,44,27,8],[15,46,27,44,"list"],[15,50,27,8],[15,51,27,4],[15,53,27,51],[16,0,28,6],[16,15,28,13,"i"],[16,16,28,6],[17,0,29,5],[18,0,30,3],[20,0,31,2],[20,11,31,9],[20,12,31,10],[20,13,31,2],[21,0,32,1],[23,0,34,0],[23,6,34,4],[23,7,34,5,"Array"],[23,12,34,10],[23,13,34,11,"prototype"],[23,22,34,5],[23,23,34,21,"findIndex"],[23,32,34,0],[23,34,34,32],[24,0,35,2,"Object"],[24,4,35,2,"Object"],[24,10,35,8],[24,11,35,9,"defineProperty"],[24,25,35,2],[24,26,35,24,"Array"],[24,31,35,29],[24,32,35,30,"prototype"],[24,41,35,2],[24,43,35,41],[24,54,35,2],[24,56,35,54],[25,0,36,4,"enumerable"],[25,6,36,4,"enumerable"],[25,16,36,14],[25,18,36,16],[25,23,35,54],[26,0,37,4,"writable"],[26,6,37,4,"writable"],[26,14,37,12],[26,16,37,14],[26,20,35,54],[27,0,38,4,"configurable"],[27,6,38,4,"configurable"],[27,18,38,16],[27,20,38,18],[27,24,35,54],[28,0,39,4,"value"],[28,6,39,4,"value"],[28,11,39,9],[28,13,39,11,"findIndex"],[29,0,35,54],[29,5,35,2],[30,0,41,1],[32,0,44,0],[32,6,44,4],[32,7,44,5,"Array"],[32,12,44,10],[32,13,44,11,"prototype"],[32,22,44,5],[32,23,44,21,"find"],[32,27,44,0],[32,29,44,27],[33,0,45,2,"Object"],[33,4,45,2,"Object"],[33,10,45,8],[33,11,45,9,"defineProperty"],[33,25,45,2],[33,26,45,24,"Array"],[33,31,45,29],[33,32,45,30,"prototype"],[33,41,45,2],[33,43,45,41],[33,49,45,2],[33,51,45,49],[34,0,46,4,"enumerable"],[34,6,46,4,"enumerable"],[34,16,46,14],[34,18,46,16],[34,23,45,49],[35,0,47,4,"writable"],[35,6,47,4,"writable"],[35,14,47,12],[35,16,47,14],[35,20,45,49],[36,0,48,4,"configurable"],[36,6,48,4,"configurable"],[36,18,48,16],[36,20,48,18],[36,24,45,49],[37,0,49,4,"value"],[37,6,49,4,"value"],[37,11,49,9],[37,13,49,11],[37,28,49,20,"predicate"],[37,37,49,11],[37,39,49,31,"context"],[37,46,49,11],[37,48,49,40],[38,0,50,6],[38,12,50,10],[38,20,50,18],[38,24,50,6],[38,26,50,24],[39,0,51,8],[39,16,51,14],[39,20,51,18,"TypeError"],[39,29,51,14],[39,30,51,28],[39,80,51,14],[39,81,51,8],[40,0,52,7],[42,0,53,6],[42,12,53,10,"index"],[42,17,53,15],[42,20,53,18,"findIndex"],[42,29,53,27],[42,30,53,28,"call"],[42,34,53,18],[42,35,53,33],[42,39,53,18],[42,41,53,39,"predicate"],[42,50,53,18],[42,52,53,50,"context"],[42,59,53,18],[42,60,53,6],[43,0,54,6],[43,15,54,13,"index"],[43,20,54,18],[43,25,54,23],[43,26,54,24],[43,27,54,13],[43,30,54,28,"undefined"],[43,39,54,13],[43,42,54,40],[43,47,54,45,"index"],[43,52,54,40],[43,53,54,6],[44,0,55,5],[45,0,45,49],[45,5,45,2],[46,0,57,1],[48,0,60,0],[48,6,60,4],[48,7,60,5,"Array"],[48,12,60,10],[48,13,60,11,"prototype"],[48,22,60,5],[48,23,60,21,"includes"],[48,31,60,0],[48,33,60,31],[49,0,61,2,"Object"],[49,4,61,2,"Object"],[49,10,61,8],[49,11,61,9,"defineProperty"],[49,25,61,2],[49,26,61,24,"Array"],[49,31,61,29],[49,32,61,30,"prototype"],[49,41,61,2],[49,43,61,41],[49,53,61,2],[49,55,61,53],[50,0,62,4,"enumerable"],[50,6,62,4,"enumerable"],[50,16,62,14],[50,18,62,16],[50,23,61,53],[51,0,63,4,"writable"],[51,6,63,4,"writable"],[51,14,63,12],[51,16,63,14],[51,20,61,53],[52,0,64,4,"configurable"],[52,6,64,4,"configurable"],[52,18,64,16],[52,20,64,18],[52,24,61,53],[53,0,65,4,"value"],[53,6,65,4,"value"],[53,11,65,9],[53,13,65,11],[53,28,65,20,"searchElement"],[53,41,65,11],[53,43,65,35],[54,0,66,6],[54,12,66,10,"O"],[54,13,66,11],[54,16,66,14,"Object"],[54,22,66,20],[54,23,66,21],[54,27,66,20],[54,28,66,6],[55,0,67,6],[55,12,67,10,"len"],[55,15,67,13],[55,18,67,16,"parseInt"],[55,26,67,24],[55,27,67,25,"O"],[55,28,67,26],[55,29,67,27,"length"],[55,35,67,24],[55,36,67,16],[55,40,67,38],[55,41,67,6],[57,0,68,6],[57,12,68,10,"len"],[57,15,68,13],[57,20,68,18],[57,21,68,6],[57,23,68,21],[58,0,69,8],[58,17,69,15],[58,22,69,8],[59,0,70,7],[61,0,71,6],[61,12,71,10,"n"],[61,13,71,11],[61,16,71,14,"parseInt"],[61,24,71,22],[61,25,71,23,"arguments"],[61,34,71,32],[61,35,71,33],[61,36,71,32],[61,37,71,22],[61,38,71,14],[61,42,71,40],[61,43,71,6],[62,0,72,6],[62,12,72,10,"k"],[62,13,72,6],[64,0,73,6],[64,12,73,10,"n"],[64,13,73,11],[64,17,73,15],[64,18,73,6],[64,20,73,18],[65,0,74,8,"k"],[65,10,74,8,"k"],[65,11,74,9],[65,14,74,12,"n"],[65,15,74,8],[66,0,75,7],[66,9,73,6],[66,15,75,13],[67,0,76,8,"k"],[67,10,76,8,"k"],[67,11,76,9],[67,14,76,12,"len"],[67,17,76,15],[67,20,76,18,"n"],[67,21,76,8],[69,0,77,8],[69,14,77,12,"k"],[69,15,77,13],[69,18,77,16],[69,19,77,8],[69,21,77,19],[70,0,78,10,"k"],[70,12,78,10,"k"],[70,13,78,11],[70,16,78,14],[70,17,78,10],[71,0,79,9],[72,0,80,7],[74,0,81,6],[74,12,81,10,"currentElement"],[74,26,81,6],[76,0,82,6],[76,15,82,13,"k"],[76,16,82,14],[76,19,82,17,"len"],[76,22,82,6],[76,24,82,22],[77,0,83,8,"currentElement"],[77,10,83,8,"currentElement"],[77,24,83,22],[77,27,83,25,"O"],[77,28,83,26],[77,29,83,27,"k"],[77,30,83,26],[77,31,83,8],[79,0,84,8],[79,14,85,10,"searchElement"],[79,27,85,23],[79,32,85,28,"currentElement"],[79,46,85,10],[79,50,86,11,"searchElement"],[79,63,86,24],[79,68,86,29,"searchElement"],[79,81,86,11],[79,85,86,46,"currentElement"],[79,99,86,60],[79,104,86,65,"currentElement"],[79,118,84,8],[79,120,87,10],[80,0,88,10],[80,19,88,17],[80,23,88,10],[81,0,89,9],[83,0,90,8,"k"],[83,10,90,8,"k"],[83,11,90,9],[84,0,91,7],[86,0,92,6],[86,15,92,13],[86,20,92,6],[87,0,93,5],[88,0,61,53],[88,5,61,2],[89,0,95,1]]},"type":"js/script"}]}