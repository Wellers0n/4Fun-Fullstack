{"dependencies":[{"name":"./_SetCache","data":{"isAsync":false}},{"name":"./_arrayIncludes","data":{"isAsync":false}},{"name":"./_arrayIncludesWith","data":{"isAsync":false}},{"name":"./_arrayMap","data":{"isAsync":false}},{"name":"./_baseUnary","data":{"isAsync":false}},{"name":"./_cacheHas","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var SetCache = _$$_REQUIRE(_dependencyMap[0], \"./_SetCache\"),\n      arrayIncludes = _$$_REQUIRE(_dependencyMap[1], \"./_arrayIncludes\"),\n      arrayIncludesWith = _$$_REQUIRE(_dependencyMap[2], \"./_arrayIncludesWith\"),\n      arrayMap = _$$_REQUIRE(_dependencyMap[3], \"./_arrayMap\"),\n      baseUnary = _$$_REQUIRE(_dependencyMap[4], \"./_baseUnary\"),\n      cacheHas = _$$_REQUIRE(_dependencyMap[5], \"./_cacheHas\");\n\n  var LARGE_ARRAY_SIZE = 200;\n\n  function baseDifference(array, values, iteratee, comparator) {\n    var index = -1,\n        includes = arrayIncludes,\n        isCommon = true,\n        length = array.length,\n        result = [],\n        valuesLength = values.length;\n\n    if (!length) {\n      return result;\n    }\n\n    if (iteratee) {\n      values = arrayMap(values, baseUnary(iteratee));\n    }\n\n    if (comparator) {\n      includes = arrayIncludesWith;\n      isCommon = false;\n    } else if (values.length >= LARGE_ARRAY_SIZE) {\n      includes = cacheHas;\n      isCommon = false;\n      values = new SetCache(values);\n    }\n\n    outer: while (++index < length) {\n      var value = array[index],\n          computed = iteratee == null ? value : iteratee(value);\n      value = comparator || value !== 0 ? value : 0;\n\n      if (isCommon && computed === computed) {\n        var valuesIndex = valuesLength;\n\n        while (valuesIndex--) {\n          if (values[valuesIndex] === computed) {\n            continue outer;\n          }\n        }\n\n        result.push(value);\n      } else if (!includes(values, computed, comparator)) {\n        result.push(value);\n      }\n    }\n\n    return result;\n  }\n\n  module.exports = baseDifference;\n});","map":[[2,0,1,0],[2,6,1,4,"SetCache"],[2,14,1,12],[2,17,1,15,"require"],[2,28,1,22],[2,62,1,0],[3,0,1,0],[3,6,2,4,"arrayIncludes"],[3,19,2,17],[3,22,2,20,"require"],[3,33,2,27],[3,72,1,0],[4,0,1,0],[4,6,3,4,"arrayIncludesWith"],[4,23,3,21],[4,26,3,24,"require"],[4,37,3,31],[4,80,1,0],[5,0,1,0],[5,6,4,4,"arrayMap"],[5,14,4,12],[5,17,4,15,"require"],[5,28,4,22],[5,62,1,0],[6,0,1,0],[6,6,5,4,"baseUnary"],[6,15,5,13],[6,18,5,16,"require"],[6,29,5,23],[6,64,1,0],[7,0,1,0],[7,6,6,4,"cacheHas"],[7,14,6,12],[7,17,6,15,"require"],[7,28,6,22],[7,62,1,0],[9,0,9,0],[9,6,9,4,"LARGE_ARRAY_SIZE"],[9,22,9,20],[9,25,9,23],[9,28,9,0],[11,0,22,0],[11,11,22,9,"baseDifference"],[11,25,22,0],[11,26,22,24,"array"],[11,31,22,0],[11,33,22,31,"values"],[11,39,22,0],[11,41,22,39,"iteratee"],[11,49,22,0],[11,51,22,49,"comparator"],[11,61,22,0],[11,63,22,61],[12,0,23,2],[12,8,23,6,"index"],[12,13,23,11],[12,16,23,14],[12,17,23,15],[12,18,23,2],[13,0,23,2],[13,8,24,6,"includes"],[13,16,24,14],[13,19,24,17,"arrayIncludes"],[13,32,23,2],[14,0,23,2],[14,8,25,6,"isCommon"],[14,16,25,14],[14,19,25,17],[14,23,23,2],[15,0,23,2],[15,8,26,6,"length"],[15,14,26,12],[15,17,26,15,"array"],[15,22,26,20],[15,23,26,21,"length"],[15,29,23,2],[16,0,23,2],[16,8,27,6,"result"],[16,14,27,12],[16,17,27,15],[16,19,23,2],[17,0,23,2],[17,8,28,6,"valuesLength"],[17,20,28,18],[17,23,28,21,"values"],[17,29,28,27],[17,30,28,28,"length"],[17,36,23,2],[19,0,30,2],[19,8,30,6],[19,9,30,7,"length"],[19,15,30,2],[19,17,30,15],[20,0,31,4],[20,13,31,11,"result"],[20,19,31,4],[21,0,32,3],[23,0,33,2],[23,8,33,6,"iteratee"],[23,16,33,2],[23,18,33,16],[24,0,34,4,"values"],[24,6,34,4,"values"],[24,12,34,10],[24,15,34,13,"arrayMap"],[24,23,34,21],[24,24,34,22,"values"],[24,30,34,21],[24,32,34,30,"baseUnary"],[24,41,34,39],[24,42,34,40,"iteratee"],[24,50,34,39],[24,51,34,21],[24,52,34,4],[25,0,35,3],[27,0,36,2],[27,8,36,6,"comparator"],[27,18,36,2],[27,20,36,18],[28,0,37,4,"includes"],[28,6,37,4,"includes"],[28,14,37,12],[28,17,37,15,"arrayIncludesWith"],[28,34,37,4],[29,0,38,4,"isCommon"],[29,6,38,4,"isCommon"],[29,14,38,12],[29,17,38,15],[29,22,38,4],[30,0,39,3],[30,5,36,2],[30,11,40,7],[30,15,40,11,"values"],[30,21,40,17],[30,22,40,18,"length"],[30,28,40,11],[30,32,40,28,"LARGE_ARRAY_SIZE"],[30,48,40,7],[30,50,40,46],[31,0,41,4,"includes"],[31,6,41,4,"includes"],[31,14,41,12],[31,17,41,15,"cacheHas"],[31,25,41,4],[32,0,42,4,"isCommon"],[32,6,42,4,"isCommon"],[32,14,42,12],[32,17,42,15],[32,22,42,4],[33,0,43,4,"values"],[33,6,43,4,"values"],[33,12,43,10],[33,15,43,13],[33,19,43,17,"SetCache"],[33,27,43,13],[33,28,43,26,"values"],[33,34,43,13],[33,35,43,4],[34,0,44,3],[36,0,45,2,"outer"],[36,4,45,2,"outer"],[36,9,45,7],[36,11,46,2],[36,18,46,9],[36,20,46,11,"index"],[36,25,46,9],[36,28,46,19,"length"],[36,34,46,2],[36,36,46,27],[37,0,47,4],[37,10,47,8,"value"],[37,15,47,13],[37,18,47,16,"array"],[37,23,47,21],[37,24,47,22,"index"],[37,29,47,21],[37,30,47,4],[38,0,47,4],[38,10,48,8,"computed"],[38,18,48,16],[38,21,48,19,"iteratee"],[38,29,48,27],[38,33,48,31],[38,37,48,19],[38,40,48,38,"value"],[38,45,48,19],[38,48,48,46,"iteratee"],[38,56,48,54],[38,57,48,55,"value"],[38,62,48,54],[38,63,47,4],[39,0,50,4,"value"],[39,6,50,4,"value"],[39,11,50,9],[39,14,50,13,"comparator"],[39,24,50,23],[39,28,50,27,"value"],[39,33,50,32],[39,38,50,37],[39,39,50,12],[39,42,50,42,"value"],[39,47,50,12],[39,50,50,50],[39,51,50,4],[41,0,51,4],[41,10,51,8,"isCommon"],[41,18,51,16],[41,22,51,20,"computed"],[41,30,51,28],[41,35,51,33,"computed"],[41,43,51,4],[41,45,51,43],[42,0,52,6],[42,12,52,10,"valuesIndex"],[42,23,52,21],[42,26,52,24,"valuesLength"],[42,38,52,6],[44,0,53,6],[44,15,53,13,"valuesIndex"],[44,26,53,24],[44,28,53,6],[44,30,53,28],[45,0,54,8],[45,14,54,12,"values"],[45,20,54,18],[45,21,54,19,"valuesIndex"],[45,32,54,18],[45,33,54,12],[45,38,54,36,"computed"],[45,46,54,8],[45,48,54,46],[46,0,55,10],[46,21,55,19,"outer"],[46,26,55,10],[47,0,56,9],[48,0,57,7],[50,0,58,6,"result"],[50,8,58,6,"result"],[50,14,58,12],[50,15,58,13,"push"],[50,19,58,6],[50,20,58,18,"value"],[50,25,58,6],[51,0,59,5],[51,7,51,4],[51,13,60,9],[51,17,60,13],[51,18,60,14,"includes"],[51,26,60,22],[51,27,60,23,"values"],[51,33,60,22],[51,35,60,31,"computed"],[51,43,60,22],[51,45,60,41,"comparator"],[51,55,60,22],[51,56,60,9],[51,58,60,54],[52,0,61,6,"result"],[52,8,61,6,"result"],[52,14,61,12],[52,15,61,13,"push"],[52,19,61,6],[52,20,61,18,"value"],[52,25,61,6],[53,0,62,5],[54,0,63,3],[56,0,64,2],[56,11,64,9,"result"],[56,17,64,2],[57,0,65,1],[59,0,67,0,"module"],[59,2,67,0,"module"],[59,8,67,6],[59,9,67,7,"exports"],[59,16,67,0],[59,19,67,17,"baseDifference"],[59,33,67,0]]},"type":"js/module"}]}