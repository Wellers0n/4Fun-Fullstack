{"dependencies":[{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"EmitterSubscription","data":{"isAsync":false}},{"name":"EventSubscriptionVendor","data":{"isAsync":false}},{"name":"invariant","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/classCallCheck\");\n\n  var _createClass = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/createClass\");\n\n  var EmitterSubscription = _$$_REQUIRE(_dependencyMap[2], \"EmitterSubscription\");\n\n  var EventSubscriptionVendor = _$$_REQUIRE(_dependencyMap[3], \"EventSubscriptionVendor\");\n\n  var invariant = _$$_REQUIRE(_dependencyMap[4], \"invariant\");\n\n  var sparseFilterPredicate = function sparseFilterPredicate() {\n    return true;\n  };\n\n  var EventEmitter = function () {\n    function EventEmitter(subscriber) {\n      _classCallCheck(this, EventEmitter);\n\n      this._subscriber = subscriber || new EventSubscriptionVendor();\n    }\n\n    _createClass(EventEmitter, [{\n      key: \"addListener\",\n      value: function addListener(eventType, listener, context) {\n        return this._subscriber.addSubscription(eventType, new EmitterSubscription(this, this._subscriber, listener, context));\n      }\n    }, {\n      key: \"once\",\n      value: function once(eventType, listener, context) {\n        var _this = this;\n\n        return this.addListener(eventType, function () {\n          _this.removeCurrentListener();\n\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          listener.apply(context, args);\n        });\n      }\n    }, {\n      key: \"removeAllListeners\",\n      value: function removeAllListeners(eventType) {\n        this._subscriber.removeAllSubscriptions(eventType);\n      }\n    }, {\n      key: \"removeCurrentListener\",\n      value: function removeCurrentListener() {\n        invariant(!!this._currentSubscription, 'Not in an emitting cycle; there is no current subscription');\n        this.removeSubscription(this._currentSubscription);\n      }\n    }, {\n      key: \"removeSubscription\",\n      value: function removeSubscription(subscription) {\n        invariant(subscription.emitter === this, 'Subscription does not belong to this emitter.');\n\n        this._subscriber.removeSubscription(subscription);\n      }\n    }, {\n      key: \"listeners\",\n      value: function listeners(eventType) {\n        var subscriptions = this._subscriber.getSubscriptionsForType(eventType);\n\n        return subscriptions ? subscriptions.filter(sparseFilterPredicate).map(function (subscription) {\n          return subscription.listener;\n        }) : [];\n      }\n    }, {\n      key: \"emit\",\n      value: function emit(eventType) {\n        var subscriptions = this._subscriber.getSubscriptionsForType(eventType);\n\n        if (subscriptions) {\n          for (var i = 0, l = subscriptions.length; i < l; i++) {\n            var subscription = subscriptions[i];\n\n            if (subscription && subscription.listener) {\n              this._currentSubscription = subscription;\n              subscription.listener.apply(subscription.context, Array.prototype.slice.call(arguments, 1));\n            }\n          }\n\n          this._currentSubscription = null;\n        }\n      }\n    }, {\n      key: \"removeListener\",\n      value: function removeListener(eventType, listener) {\n        var subscriptions = this._subscriber.getSubscriptionsForType(eventType);\n\n        if (subscriptions) {\n          for (var i = 0, l = subscriptions.length; i < l; i++) {\n            var subscription = subscriptions[i];\n\n            if (subscription && subscription.listener === listener) {\n              subscription.remove();\n            }\n          }\n        }\n      }\n    }]);\n\n    return EventEmitter;\n  }();\n\n  module.exports = EventEmitter;\n});","map":[[2,0,12,0],[8,0,14,0],[8,6,14,6,"EmitterSubscription"],[8,25,14,25],[8,28,14,28,"require"],[8,39,14,35],[8,81,14,0],[10,0,15,0],[10,6,15,6,"EventSubscriptionVendor"],[10,29,15,29],[10,32,15,32,"require"],[10,43,15,39],[10,89,15,0],[12,0,17,0],[12,6,17,6,"invariant"],[12,15,17,15],[12,18,17,18,"require"],[12,29,17,25],[12,61,17,0],[14,0,19,0],[14,6,19,6,"sparseFilterPredicate"],[14,27,19,27],[14,30,19,30],[14,39,19,6,"sparseFilterPredicate"],[14,60,19,30],[15,0,19,30],[15,11,19,36],[15,15,19,30],[16,0,19,30],[16,3,19,0],[18,6,34,6,"EventEmitter"],[18,18],[19,0,44,2],[19,26,44,14,"subscriber"],[19,36,44,2],[19,38,44,52],[20,0,44,52],[22,0,45,4],[22,11,45,9,"_subscriber"],[22,22,45,4],[22,25,45,23,"subscriber"],[22,35,45,33],[22,39,45,37],[22,43,45,41,"EventSubscriptionVendor"],[22,66,45,37],[22,68,45,4],[23,0,46,3],[27,34,63,4,"eventType"],[27,43],[27,45,64,4,"listener"],[27,53],[27,55,65,4,"context"],[27,62],[27,64,66,25],[28,0,67,4],[28,15,67,12],[28,20,67,17,"_subscriber"],[28,31,67,12],[28,32,67,29,"addSubscription"],[28,47,67,12],[28,48,68,6,"eventType"],[28,57,67,12],[28,59,69,6],[28,63,69,10,"EmitterSubscription"],[28,82,69,6],[28,83,69,30],[28,87,69,6],[28,89,69,36],[28,94,69,41,"_subscriber"],[28,105,69,6],[28,107,69,54,"listener"],[28,115,69,6],[28,117,69,64,"context"],[28,124,69,6],[28,125,67,12],[28,126,67,4],[29,0,71,3],[32,27,84,4,"eventType"],[32,36],[32,38,85,4,"listener"],[32,46],[32,48,86,4,"context"],[32,55],[32,57,87,25],[33,0,87,25],[35,0,88,4],[35,15,88,11],[35,20,88,16,"addListener"],[35,31,88,11],[35,32,88,28,"eventType"],[35,41,88,11],[35,43,88,39],[35,55,88,52],[36,0,89,6],[36,10,89,6],[36,15,89,10],[36,16,89,11,"removeCurrentListener"],[36,37,89,6],[38,0,88,52],[38,44,88,43,"args"],[38,48,88,52],[39,0,88,43,"args"],[39,12,88,43,"args"],[39,16,88,52],[40,0,88,52],[42,0,90,6,"listener"],[42,10,90,6,"listener"],[42,18,90,14],[42,19,90,15,"apply"],[42,24,90,6],[42,25,90,21,"context"],[42,32,90,6],[42,34,90,30,"args"],[42,38,90,6],[43,0,91,5],[43,9,88,11],[43,10,88,4],[44,0,92,3],[47,41,101,21,"eventType"],[47,50],[47,52,101,41],[48,0,102,4],[48,13,102,9,"_subscriber"],[48,24,102,4],[48,25,102,21,"removeAllSubscriptions"],[48,47,102,4],[48,48,102,44,"eventType"],[48,57,102,4],[49,0,103,3],[52,46,126,26],[53,0,127,4,"invariant"],[53,8,127,4,"invariant"],[53,17,127,13],[53,18,128,6],[53,19,128,7],[53,20,128,8],[53,25,128,13,"_currentSubscription"],[53,45,127,13],[53,47,129,6],[53,107,127,13],[53,108,127,4],[54,0,131,4],[54,13,131,9,"removeSubscription"],[54,31,131,4],[54,32,131,28],[54,37,131,33,"_currentSubscription"],[54,57,131,4],[55,0,132,3],[58,41,138,21,"subscription"],[58,53],[58,55,138,56],[59,0,139,4,"invariant"],[59,8,139,4,"invariant"],[59,17,139,13],[59,18,140,6,"subscription"],[59,30,140,18],[59,31,140,19,"emitter"],[59,38,140,6],[59,43,140,31],[59,47,139,13],[59,49,141,6],[59,96,139,13],[59,97,139,4],[61,0,143,4],[61,13,143,9,"_subscriber"],[61,24,143,4],[61,25,143,21,"removeSubscription"],[61,43,143,4],[61,44,143,40,"subscription"],[61,56,143,4],[62,0,144,3],[65,32,153,12,"eventType"],[65,41],[65,43,153,54],[66,0,154,4],[66,12,154,10,"subscriptions"],[66,25,154,23],[66,28,154,26],[66,33,154,31,"_subscriber"],[66,44,154,26],[66,45,154,43,"getSubscriptionsForType"],[66,68,154,26],[66,69,154,67,"eventType"],[66,78,154,26],[66,79,154,4],[68,0,155,4],[68,15,155,11,"subscriptions"],[68,28,155,24],[68,31,156,8,"subscriptions"],[68,44,156,21],[68,45,161,11,"filter"],[68,51,156,8],[68,52,161,18,"sparseFilterPredicate"],[68,73,156,8],[68,75,162,11,"map"],[68,78,156,8],[68,79,162,15],[68,89,162,15,"subscription"],[68,101,162,27],[69,0,162,27],[69,17,162,31,"subscription"],[69,29,162,43],[69,30,162,44,"listener"],[69,38,162,27],[70,0,162,27],[70,9,156,8],[70,10,155,24],[70,13,163,8],[70,15,155,4],[71,0,164,3],[74,27,180,7,"eventType"],[74,36],[74,38,180,26],[75,0,181,4],[75,12,181,10,"subscriptions"],[75,25,181,23],[75,28,181,26],[75,33,181,31,"_subscriber"],[75,44,181,26],[75,45,181,43,"getSubscriptionsForType"],[75,68,181,26],[75,69,181,67,"eventType"],[75,78,181,26],[75,79,181,4],[77,0,182,4],[77,12,182,8,"subscriptions"],[77,25,182,4],[77,27,182,23],[78,0,183,6],[78,15,183,11],[78,19,183,15,"i"],[78,20,183,16],[78,23,183,19],[78,24,183,11],[78,26,183,22,"l"],[78,27,183,23],[78,30,183,26,"subscriptions"],[78,43,183,39],[78,44,183,40,"length"],[78,50,183,6],[78,52,183,48,"i"],[78,53,183,49],[78,56,183,52,"l"],[78,57,183,6],[78,59,183,55,"i"],[78,60,183,56],[78,62,183,6],[78,64,183,60],[79,0,184,8],[79,16,184,14,"subscription"],[79,28,184,26],[79,31,184,29,"subscriptions"],[79,44,184,42],[79,45,184,43,"i"],[79,46,184,42],[79,47,184,8],[81,0,187,8],[81,16,187,12,"subscription"],[81,28,187,24],[81,32,187,28,"subscription"],[81,44,187,40],[81,45,187,41,"listener"],[81,53,187,8],[81,55,187,51],[82,0,188,10],[82,19,188,15,"_currentSubscription"],[82,39,188,10],[82,42,188,38,"subscription"],[82,54,188,10],[83,0,189,10,"subscription"],[83,14,189,10,"subscription"],[83,26,189,22],[83,27,189,23,"listener"],[83,35,189,10],[83,36,189,32,"apply"],[83,41,189,10],[83,42,190,12,"subscription"],[83,54,190,24],[83,55,190,25,"context"],[83,62,189,10],[83,64,191,12,"Array"],[83,69,191,17],[83,70,191,18,"prototype"],[83,79,191,12],[83,80,191,28,"slice"],[83,85,191,12],[83,86,191,34,"call"],[83,90,191,12],[83,91,191,39,"arguments"],[83,100,191,12],[83,102,191,50],[83,103,191,12],[83,104,189,10],[84,0,193,9],[85,0,194,7],[87,0,195,6],[87,15,195,11,"_currentSubscription"],[87,35,195,6],[87,38,195,34],[87,42,195,6],[88,0,196,5],[89,0,197,3],[92,37,212,17,"eventType"],[92,46],[92,48,212,36,"listener"],[92,56],[92,58,212,46],[93,0,213,4],[93,12,213,10,"subscriptions"],[93,25,213,23],[93,28,213,26],[93,33,213,31,"_subscriber"],[93,44,213,26],[93,45,213,43,"getSubscriptionsForType"],[93,68,213,26],[93,69,213,67,"eventType"],[93,78,213,26],[93,79,213,4],[95,0,214,4],[95,12,214,8,"subscriptions"],[95,25,214,4],[95,27,214,23],[96,0,215,6],[96,15,215,11],[96,19,215,15,"i"],[96,20,215,16],[96,23,215,19],[96,24,215,11],[96,26,215,22,"l"],[96,27,215,23],[96,30,215,26,"subscriptions"],[96,43,215,39],[96,44,215,40,"length"],[96,50,215,6],[96,52,215,48,"i"],[96,53,215,49],[96,56,215,52,"l"],[96,57,215,6],[96,59,215,55,"i"],[96,60,215,56],[96,62,215,6],[96,64,215,60],[97,0,216,8],[97,16,216,14,"subscription"],[97,28,216,26],[97,31,216,29,"subscriptions"],[97,44,216,42],[97,45,216,43,"i"],[97,46,216,42],[97,47,216,8],[99,0,220,8],[99,16,220,12,"subscription"],[99,28,220,24],[99,32,220,28,"subscription"],[99,44,220,40],[99,45,220,41,"listener"],[99,53,220,28],[99,58,220,54,"listener"],[99,66,220,8],[99,68,220,64],[100,0,221,10,"subscription"],[100,14,221,10,"subscription"],[100,26,221,22],[100,27,221,23,"remove"],[100,33,221,10],[101,0,222,9],[102,0,223,7],[103,0,224,5],[104,0,225,3],[110,0,228,0,"module"],[110,2,228,0,"module"],[110,8,228,6],[110,9,228,7,"exports"],[110,16,228,0],[110,19,228,17,"EventEmitter"],[110,31,228,0]]},"type":"js/module"}]}