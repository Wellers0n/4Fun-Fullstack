{"dependencies":[{"name":"invariant","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var invariant = _$$_REQUIRE(_dependencyMap[0], \"invariant\");\n\n  var MAX_MERGE_DEPTH = 36;\n\n  var isTerminal = function isTerminal(o) {\n    return typeof o !== 'object' || o instanceof Date || o === null;\n  };\n\n  var mergeHelpers = {\n    MAX_MERGE_DEPTH: MAX_MERGE_DEPTH,\n    isTerminal: isTerminal,\n    normalizeMergeArg: function normalizeMergeArg(arg) {\n      return arg === undefined || arg === null ? {} : arg;\n    },\n    checkMergeArrayArgs: function checkMergeArrayArgs(one, two) {\n      invariant(Array.isArray(one) && Array.isArray(two), 'Tried to merge arrays, instead got %s and %s.', one, two);\n    },\n    checkMergeObjectArgs: function checkMergeObjectArgs(one, two) {\n      mergeHelpers.checkMergeObjectArg(one);\n      mergeHelpers.checkMergeObjectArg(two);\n    },\n    checkMergeObjectArg: function checkMergeObjectArg(arg) {\n      invariant(!isTerminal(arg) && !Array.isArray(arg), 'Tried to merge an object, instead got %s.', arg);\n    },\n    checkMergeIntoObjectArg: function checkMergeIntoObjectArg(arg) {\n      invariant((!isTerminal(arg) || typeof arg === 'function') && !Array.isArray(arg), 'Tried to merge into an object, instead got %s.', arg);\n    },\n    checkMergeLevel: function checkMergeLevel(level) {\n      invariant(level < MAX_MERGE_DEPTH, 'Maximum deep merge depth exceeded. You may be attempting to merge ' + 'circular structures in an unsupported way.');\n    },\n    checkArrayStrategy: function checkArrayStrategy(strategy) {\n      invariant(strategy === undefined || strategy in mergeHelpers.ArrayStrategies, 'You must provide an array strategy to deep merge functions to ' + 'instruct the deep merge how to resolve merging two arrays.');\n    },\n    ArrayStrategies: {\n      Clobber: 'Clobber',\n      Concat: 'Concat',\n      IndexByIndex: 'IndexByIndex'\n    }\n  };\n  module.exports = mergeHelpers;\n});","map":[[2,0,13,0],[4,0,15,0],[4,6,15,6,"invariant"],[4,15,15,15],[4,18,15,18,"require"],[4,29,15,25],[4,61,15,0],[6,0,21,0],[6,6,21,6,"MAX_MERGE_DEPTH"],[6,21,21,21],[6,24,21,24],[6,26,21,0],[8,0,29,0],[8,6,29,6,"isTerminal"],[8,16,29,16],[8,19,29,19],[8,28,29,6,"isTerminal"],[8,38,29,19],[8,39,29,28,"o"],[8,40,29,19],[8,42,29,31],[9,0,30,2],[9,11,30,9],[9,18,30,16,"o"],[9,19,30,9],[9,24,30,22],[9,32,30,9],[9,36,30,34,"o"],[9,37,30,35],[9,49,30,47,"Date"],[9,53,30,9],[9,57,30,55,"o"],[9,58,30,56],[9,63,30,61],[9,67,30,2],[10,0,31,1],[10,3,29,0],[12,0,33,0],[12,6,33,6,"mergeHelpers"],[12,18,33,18],[12,21,33,21],[13,0,34,2,"MAX_MERGE_DEPTH"],[13,4,34,2,"MAX_MERGE_DEPTH"],[13,19,34,17],[13,21,34,19,"MAX_MERGE_DEPTH"],[13,36,33,21],[14,0,36,2,"isTerminal"],[14,4,36,2,"isTerminal"],[14,14,36,12],[14,16,36,14,"isTerminal"],[14,26,33,21],[15,0,44,2,"normalizeMergeArg"],[15,4,44,2,"normalizeMergeArg"],[15,21,44,19],[15,23,44,21],[15,50,44,30,"arg"],[15,53,44,21],[15,55,44,35],[16,0,45,4],[16,13,45,11,"arg"],[16,16,45,14],[16,21,45,19,"undefined"],[16,30,45,11],[16,34,45,32,"arg"],[16,37,45,35],[16,42,45,40],[16,46,45,11],[16,49,45,47],[16,51,45,11],[16,54,45,52,"arg"],[16,57,45,4],[17,0,46,3],[17,5,33,21],[18,0,56,2,"checkMergeArrayArgs"],[18,4,56,2,"checkMergeArrayArgs"],[18,23,56,21],[18,25,56,23],[18,54,56,32,"one"],[18,57,56,23],[18,59,56,37,"two"],[18,62,56,23],[18,64,56,42],[19,0,57,4,"invariant"],[19,6,57,4,"invariant"],[19,15,57,13],[19,16,58,6,"Array"],[19,21,58,11],[19,22,58,12,"isArray"],[19,29,58,6],[19,30,58,20,"one"],[19,33,58,6],[19,38,58,28,"Array"],[19,43,58,33],[19,44,58,34,"isArray"],[19,51,58,28],[19,52,58,42,"two"],[19,55,58,28],[19,56,57,13],[19,58,59,6],[19,105,57,13],[19,107,60,6,"one"],[19,110,57,13],[19,112,61,6,"two"],[19,115,57,13],[19,116,57,4],[20,0,63,3],[20,5,33,21],[21,0,69,2,"checkMergeObjectArgs"],[21,4,69,2,"checkMergeObjectArgs"],[21,24,69,22],[21,26,69,24],[21,56,69,33,"one"],[21,59,69,24],[21,61,69,38,"two"],[21,64,69,24],[21,66,69,43],[22,0,70,4,"mergeHelpers"],[22,6,70,4,"mergeHelpers"],[22,18,70,16],[22,19,70,17,"checkMergeObjectArg"],[22,38,70,4],[22,39,70,37,"one"],[22,42,70,4],[23,0,71,4,"mergeHelpers"],[23,6,71,4,"mergeHelpers"],[23,18,71,16],[23,19,71,17,"checkMergeObjectArg"],[23,38,71,4],[23,39,71,37,"two"],[23,42,71,4],[24,0,72,3],[24,5,33,21],[25,0,77,2,"checkMergeObjectArg"],[25,4,77,2,"checkMergeObjectArg"],[25,23,77,21],[25,25,77,23],[25,54,77,32,"arg"],[25,57,77,23],[25,59,77,37],[26,0,78,4,"invariant"],[26,6,78,4,"invariant"],[26,15,78,13],[26,16,79,6],[26,17,79,7,"isTerminal"],[26,27,79,17],[26,28,79,18,"arg"],[26,31,79,17],[26,32,79,6],[26,36,79,26],[26,37,79,27,"Array"],[26,42,79,32],[26,43,79,33,"isArray"],[26,50,79,27],[26,51,79,41,"arg"],[26,54,79,27],[26,55,78,13],[26,57,80,6],[26,100,78,13],[26,102,81,6,"arg"],[26,105,78,13],[26,106,78,4],[27,0,83,3],[27,5,33,21],[28,0,88,2,"checkMergeIntoObjectArg"],[28,4,88,2,"checkMergeIntoObjectArg"],[28,27,88,25],[28,29,88,27],[28,62,88,36,"arg"],[28,65,88,27],[28,67,88,41],[29,0,89,4,"invariant"],[29,6,89,4,"invariant"],[29,15,89,13],[29,16,90,6],[29,17,90,7],[29,18,90,8,"isTerminal"],[29,28,90,18],[29,29,90,19,"arg"],[29,32,90,18],[29,33,90,7],[29,37,90,27],[29,44,90,34,"arg"],[29,47,90,27],[29,52,90,42],[29,62,90,6],[29,67,90,57],[29,68,90,58,"Array"],[29,73,90,63],[29,74,90,64,"isArray"],[29,81,90,58],[29,82,90,72,"arg"],[29,85,90,58],[29,86,89,13],[29,88,91,6],[29,136,89,13],[29,138,92,6,"arg"],[29,141,89,13],[29,142,89,4],[30,0,94,3],[30,5,33,21],[31,0,102,2,"checkMergeLevel"],[31,4,102,2,"checkMergeLevel"],[31,19,102,17],[31,21,102,19],[31,46,102,28,"level"],[31,51,102,19],[31,53,102,35],[32,0,103,4,"invariant"],[32,6,103,4,"invariant"],[32,15,103,13],[32,16,104,6,"level"],[32,21,104,11],[32,24,104,14,"MAX_MERGE_DEPTH"],[32,39,103,13],[32,41,105,6],[32,112,106,8],[32,156,103,13],[32,157,103,4],[33,0,108,3],[33,5,33,21],[34,0,115,2,"checkArrayStrategy"],[34,4,115,2,"checkArrayStrategy"],[34,22,115,20],[34,24,115,22],[34,52,115,31,"strategy"],[34,60,115,22],[34,62,115,41],[35,0,116,4,"invariant"],[35,6,116,4,"invariant"],[35,15,116,13],[35,16,117,6,"strategy"],[35,24,117,14],[35,29,117,19,"undefined"],[35,38,117,6],[35,42,117,32,"strategy"],[35,50,117,40],[35,54,117,44,"mergeHelpers"],[35,66,117,56],[35,67,117,57,"ArrayStrategies"],[35,82,116,13],[35,84,118,6],[35,151,119,8],[35,211,116,13],[35,212,116,4],[36,0,121,3],[36,5,33,21],[37,0,130,2,"ArrayStrategies"],[37,4,130,2,"ArrayStrategies"],[37,19,130,17],[37,21,130,19],[38,0,131,4,"Clobber"],[38,6,131,4,"Clobber"],[38,13,131,11],[38,15,131,13],[38,24,130,19],[39,0,132,4,"Concat"],[39,6,132,4,"Concat"],[39,12,132,10],[39,14,132,12],[39,22,130,19],[40,0,133,4,"IndexByIndex"],[40,6,133,4,"IndexByIndex"],[40,18,133,16],[40,20,133,18],[41,0,130,19],[42,0,33,21],[42,3,33,0],[43,0,137,0,"module"],[43,2,137,0,"module"],[43,8,137,6],[43,9,137,7,"exports"],[43,16,137,0],[43,19,137,17,"mergeHelpers"],[43,31,137,0]]},"type":"js/module"}]}