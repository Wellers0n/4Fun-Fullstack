{"dependencies":[{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/extends","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"isAsync":false}},{"name":"BatchedBridge","data":{"isAsync":false}},{"name":"invariant","data":{"isAsync":false}},{"name":"defineLazyObjectProperty","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _objectWithoutProperties = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/objectWithoutProperties\");\n\n  var _extends = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/extends\");\n\n  var _slicedToArray = _$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/slicedToArray\");\n\n  var BatchedBridge = _$$_REQUIRE(_dependencyMap[3], \"BatchedBridge\");\n\n  var invariant = _$$_REQUIRE(_dependencyMap[4], \"invariant\");\n\n  function genModule(config, moduleID) {\n    if (!config) {\n      return null;\n    }\n\n    var _config = _slicedToArray(config, 5),\n        moduleName = _config[0],\n        constants = _config[1],\n        methods = _config[2],\n        promiseMethods = _config[3],\n        syncMethods = _config[4];\n\n    invariant(!moduleName.startsWith('RCT') && !moduleName.startsWith('RK'), \"Module name prefixes should've been stripped by the native side \" + \"but wasn't for \" + moduleName);\n\n    if (!constants && !methods) {\n      return {\n        name: moduleName\n      };\n    }\n\n    var module = {};\n    methods && methods.forEach(function (methodName, methodID) {\n      var isPromise = promiseMethods && arrayContains(promiseMethods, methodID);\n      var isSync = syncMethods && arrayContains(syncMethods, methodID);\n      invariant(!isPromise || !isSync, 'Cannot have a method that is both async and a sync hook');\n      var methodType = isPromise ? 'promise' : isSync ? 'sync' : 'async';\n      module[methodName] = genMethod(moduleID, methodID, methodType);\n    });\n\n    _extends(module, constants);\n\n    if (module.getConstants == null) {\n      module.getConstants = function () {\n        return constants;\n      };\n    } else {\n      console.warn(\"Unable to define method 'getConstants()' on NativeModule '\" + moduleName + \"'. NativeModule '\" + moduleName + \"' already has a constant or method called 'getConstants'. Please remove it.\");\n    }\n\n    if (__DEV__) {\n      BatchedBridge.createDebugLookup(moduleID, moduleName, methods);\n    }\n\n    return {\n      name: moduleName,\n      module: module\n    };\n  }\n\n  global.__fbGenNativeModule = genModule;\n\n  function loadModule(name, moduleID) {\n    invariant(global.nativeRequireModuleConfig, \"Can't lazily create module without nativeRequireModuleConfig\");\n    var config = global.nativeRequireModuleConfig(name);\n    var info = genModule(config, moduleID);\n    return info && info.module;\n  }\n\n  function genMethod(moduleID, methodID, type) {\n    var fn = null;\n\n    if (type === 'promise') {\n      fn = function fn() {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        return new Promise(function (resolve, reject) {\n          BatchedBridge.enqueueNativeCall(moduleID, methodID, args, function (data) {\n            return resolve(data);\n          }, function (errorData) {\n            return reject(createErrorFromErrorData(errorData));\n          });\n        });\n      };\n    } else if (type === 'sync') {\n      fn = function fn() {\n        if (__DEV__) {\n          invariant(global.nativeCallSyncHook, 'Calling synchronous methods on native ' + 'modules is not supported in Chrome.\\n\\n Consider providing alternative ' + 'methods to expose this method in debug mode, e.g. by exposing constants ' + 'ahead-of-time.');\n        }\n\n        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n\n        return global.nativeCallSyncHook(moduleID, methodID, args);\n      };\n    } else {\n      fn = function fn() {\n        for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          args[_key3] = arguments[_key3];\n        }\n\n        var lastArg = args.length > 0 ? args[args.length - 1] : null;\n        var secondLastArg = args.length > 1 ? args[args.length - 2] : null;\n        var hasSuccessCallback = typeof lastArg === 'function';\n        var hasErrorCallback = typeof secondLastArg === 'function';\n        hasErrorCallback && invariant(hasSuccessCallback, 'Cannot have a non-function arg after a function arg.');\n        var onSuccess = hasSuccessCallback ? lastArg : null;\n        var onFail = hasErrorCallback ? secondLastArg : null;\n        var callbackCount = hasSuccessCallback + hasErrorCallback;\n        args = args.slice(0, args.length - callbackCount);\n        BatchedBridge.enqueueNativeCall(moduleID, methodID, args, onFail, onSuccess);\n      };\n    }\n\n    fn.type = type;\n    return fn;\n  }\n\n  function arrayContains(array, value) {\n    return array.indexOf(value) !== -1;\n  }\n\n  function createErrorFromErrorData(errorData) {\n    var _ref = errorData || {},\n        message = _ref.message,\n        extraErrorInfo = _objectWithoutProperties(_ref, [\"message\"]);\n\n    var error = new Error(message);\n    error.framesToPop = 1;\n    return _extends(error, extraErrorInfo);\n  }\n\n  var NativeModules = {};\n\n  if (global.nativeModuleProxy) {\n    NativeModules = global.nativeModuleProxy;\n  } else if (!global.nativeExtensions) {\n    var bridgeConfig = global.__fbBatchedBridgeConfig;\n    invariant(bridgeConfig, '__fbBatchedBridgeConfig is not set, cannot invoke native modules');\n\n    var defineLazyObjectProperty = _$$_REQUIRE(_dependencyMap[5], \"defineLazyObjectProperty\");\n\n    (bridgeConfig.remoteModuleConfig || []).forEach(function (config, moduleID) {\n      var info = genModule(config, moduleID);\n\n      if (!info) {\n        return;\n      }\n\n      if (info.module) {\n        NativeModules[info.name] = info.module;\n      } else {\n          defineLazyObjectProperty(NativeModules, info.name, {\n            get: function get() {\n              return loadModule(info.name, moduleID);\n            }\n          });\n        }\n    });\n  }\n\n  module.exports = NativeModules;\n});","map":[[2,0,11,0],[10,0,13,0],[10,6,13,6,"BatchedBridge"],[10,19,13,19],[10,22,13,22,"require"],[10,33,13,29],[10,69,13,0],[12,0,15,0],[12,6,15,6,"invariant"],[12,15,15,15],[12,18,15,18,"require"],[12,29,15,25],[12,61,15,0],[14,0,29,0],[14,11,29,9,"genModule"],[14,20,29,0],[14,21,30,2,"config"],[14,27,29,0],[14,29,31,2,"moduleID"],[14,37,29,0],[14,39,32,36],[15,0,33,2],[15,8,33,6],[15,9,33,7,"config"],[15,15,33,2],[15,17,33,15],[16,0,34,4],[16,13,34,11],[16,17,34,4],[17,0,35,3],[19,0,32,36],[19,33,37,72,"config"],[19,39,32,36],[20,0,32,36],[20,8,37,9,"moduleName"],[20,18,32,36],[21,0,32,36],[21,8,37,21,"constants"],[21,17,32,36],[22,0,32,36],[22,8,37,32,"methods"],[22,15,32,36],[23,0,32,36],[23,8,37,41,"promiseMethods"],[23,22,32,36],[24,0,32,36],[24,8,37,57,"syncMethods"],[24,19,32,36],[26,0,38,2,"invariant"],[26,4,38,2,"invariant"],[26,13,38,11],[26,14,39,4],[26,15,39,5,"moduleName"],[26,25,39,15],[26,26,39,16,"startsWith"],[26,36,39,5],[26,37,39,27],[26,42,39,5],[26,43,39,4],[26,47,39,37],[26,48,39,38,"moduleName"],[26,58,39,48],[26,59,39,49,"startsWith"],[26,69,39,38],[26,70,39,60],[26,74,39,38],[26,75,38,11],[26,77,40,4],[26,146,41,6],[26,163,40,4],[26,166,42,6,"moduleName"],[26,176,38,11],[26,177,38,2],[28,0,45,2],[28,8,45,6],[28,9,45,7,"constants"],[28,18,45,6],[28,22,45,20],[28,23,45,21,"methods"],[28,30,45,2],[28,32,45,30],[29,0,47,4],[29,13,47,11],[30,0,47,12,"name"],[30,8,47,12,"name"],[30,12,47,16],[30,14,47,18,"moduleName"],[31,0,47,11],[31,7,47,4],[32,0,48,3],[34,0,50,2],[34,8,50,8,"module"],[34,14,50,14],[34,17,50,17],[34,19,50,2],[35,0,51,2,"methods"],[35,4,51,2,"methods"],[35,11,51,9],[35,15,52,4,"methods"],[35,22,52,11],[35,23,52,12,"forEach"],[35,30,52,4],[35,31,52,20],[35,41,52,21,"methodName"],[35,51,52,20],[35,53,52,33,"methodID"],[35,61,52,20],[35,63,52,46],[36,0,53,6],[36,10,53,12,"isPromise"],[36,19,53,21],[36,22,54,8,"promiseMethods"],[36,36,54,22],[36,40,54,26,"arrayContains"],[36,53,54,39],[36,54,54,40,"promiseMethods"],[36,68,54,39],[36,70,54,56,"methodID"],[36,78,54,39],[36,79,53,6],[37,0,55,6],[37,10,55,12,"isSync"],[37,16,55,18],[37,19,55,21,"syncMethods"],[37,30,55,32],[37,34,55,36,"arrayContains"],[37,47,55,49],[37,48,55,50,"syncMethods"],[37,59,55,49],[37,61,55,63,"methodID"],[37,69,55,49],[37,70,55,6],[38,0,56,6,"invariant"],[38,6,56,6,"invariant"],[38,15,56,15],[38,16,57,8],[38,17,57,9,"isPromise"],[38,26,57,8],[38,30,57,22],[38,31,57,23,"isSync"],[38,37,56,15],[38,39,58,8],[38,96,56,15],[38,97,56,6],[39,0,60,6],[39,10,60,12,"methodType"],[39,20,60,22],[39,23,60,25,"isPromise"],[39,32,60,34],[39,35,60,37],[39,44,60,34],[39,47,60,49,"isSync"],[39,53,60,55],[39,56,60,58],[39,62,60,55],[39,65,60,67],[39,72,60,6],[40,0,61,6,"module"],[40,6,61,6,"module"],[40,12,61,12],[40,13,61,13,"methodName"],[40,23,61,12],[40,24,61,6],[40,27,61,27,"genMethod"],[40,36,61,36],[40,37,61,37,"moduleID"],[40,45,61,36],[40,47,61,47,"methodID"],[40,55,61,36],[40,57,61,57,"methodType"],[40,67,61,36],[40,68,61,6],[41,0,62,5],[41,5,52,4],[41,6,51,2],[43,0,64,2],[43,13,64,16,"module"],[43,19,64,2],[43,21,64,24,"constants"],[43,30,64,2],[45,0,66,2],[45,8,66,6,"module"],[45,14,66,12],[45,15,66,13,"getConstants"],[45,27,66,6],[45,31,66,29],[45,35,66,2],[45,37,66,35],[46,0,67,4,"module"],[46,6,67,4,"module"],[46,12,67,10],[46,13,67,11,"getConstants"],[46,25,67,4],[46,28,67,26],[47,0,67,26],[47,15,67,32,"constants"],[47,24,67,26],[48,0,67,26],[48,7,67,4],[49,0,68,3],[49,5,66,2],[49,11,68,9],[50,0,69,4,"console"],[50,6,69,4,"console"],[50,13,69,11],[50,14,69,12,"warn"],[50,18,69,4],[50,82,70,67,"moduleName"],[50,92,69,4],[50,117,70,97,"moduleName"],[50,127,69,4],[51,0,72,3],[53,0,74,2],[53,8,74,6,"__DEV__"],[53,15,74,2],[53,17,74,15],[54,0,75,4,"BatchedBridge"],[54,6,75,4,"BatchedBridge"],[54,19,75,17],[54,20,75,18,"createDebugLookup"],[54,37,75,4],[54,38,75,36,"moduleID"],[54,46,75,4],[54,48,75,46,"moduleName"],[54,58,75,4],[54,60,75,58,"methods"],[54,67,75,4],[55,0,76,3],[57,0,78,2],[57,11,78,9],[58,0,78,10,"name"],[58,6,78,10,"name"],[58,10,78,14],[58,12,78,16,"moduleName"],[58,22,78,9],[59,0,78,28,"module"],[59,6,78,28,"module"],[59,12,78,34],[59,14,78,28,"module"],[60,0,78,9],[60,5,78,2],[61,0,79,1],[63,0,82,0,"global"],[63,2,82,0,"global"],[63,8,82,6],[63,9,82,7,"__fbGenNativeModule"],[63,28,82,0],[63,31,82,29,"genModule"],[63,40,82,0],[65,0,84,0],[65,11,84,9,"loadModule"],[65,21,84,0],[65,22,84,20,"name"],[65,26,84,0],[65,28,84,34,"moduleID"],[65,36,84,0],[65,38,84,61],[66,0,85,2,"invariant"],[66,4,85,2,"invariant"],[66,13,85,11],[66,14,86,4,"global"],[66,20,86,10],[66,21,86,11,"nativeRequireModuleConfig"],[66,46,85,11],[66,48,87,4],[66,110,85,11],[66,111,85,2],[67,0,89,2],[67,8,89,8,"config"],[67,14,89,14],[67,17,89,17,"global"],[67,23,89,23],[67,24,89,24,"nativeRequireModuleConfig"],[67,49,89,17],[67,50,89,50,"name"],[67,54,89,17],[67,55,89,2],[68,0,90,2],[68,8,90,8,"info"],[68,12,90,12],[68,15,90,15,"genModule"],[68,24,90,24],[68,25,90,25,"config"],[68,31,90,24],[68,33,90,33,"moduleID"],[68,41,90,24],[68,42,90,2],[69,0,91,2],[69,11,91,9,"info"],[69,15,91,13],[69,19,91,17,"info"],[69,23,91,21],[69,24,91,22,"module"],[69,30,91,2],[70,0,92,1],[72,0,94,0],[72,11,94,9,"genMethod"],[72,20,94,0],[72,21,94,19,"moduleID"],[72,29,94,0],[72,31,94,37,"methodID"],[72,39,94,0],[72,41,94,55,"type"],[72,45,94,0],[72,47,94,73],[73,0,95,2],[73,8,95,6,"fn"],[73,10,95,8],[73,13,95,11],[73,17,95,2],[75,0,96,2],[75,8,96,6,"type"],[75,12,96,10],[75,17,96,15],[75,26,96,2],[75,28,96,26],[76,0,97,4,"fn"],[76,6,97,4,"fn"],[76,8,97,6],[76,11,97,9],[76,25,97,39],[77,0,97,39],[77,42,97,21,"args"],[77,46,97,39],[78,0,97,21,"args"],[78,10,97,21,"args"],[78,14,97,39],[79,0,97,39],[81,0,98,6],[81,15,98,13],[81,19,98,17,"Promise"],[81,26,98,13],[81,27,98,25],[81,37,98,26,"resolve"],[81,44,98,25],[81,46,98,35,"reject"],[81,52,98,25],[81,54,98,46],[82,0,99,8,"BatchedBridge"],[82,10,99,8,"BatchedBridge"],[82,23,99,21],[82,24,99,22,"enqueueNativeCall"],[82,41,99,8],[82,42,100,10,"moduleID"],[82,50,99,8],[82,52,101,10,"methodID"],[82,60,99,8],[82,62,102,10,"args"],[82,66,99,8],[82,68,103,10],[82,78,103,10,"data"],[82,82,103,14],[83,0,103,14],[83,19,103,18,"resolve"],[83,26,103,25],[83,27,103,26,"data"],[83,31,103,25],[83,32,103,14],[84,0,103,14],[84,11,99,8],[84,13,104,10],[84,23,104,10,"errorData"],[84,32,104,19],[85,0,104,19],[85,19,104,23,"reject"],[85,25,104,29],[85,26,104,30,"createErrorFromErrorData"],[85,50,104,54],[85,51,104,55,"errorData"],[85,60,104,54],[85,61,104,29],[85,62,104,19],[86,0,104,19],[86,11,99,8],[87,0,106,7],[87,9,98,13],[87,10,98,6],[88,0,107,5],[88,7,97,4],[89,0,108,3],[89,5,96,2],[89,11,108,9],[89,15,108,13,"type"],[89,19,108,17],[89,24,108,22],[89,30,108,9],[89,32,108,30],[90,0,109,4,"fn"],[90,6,109,4,"fn"],[90,8,109,6],[90,11,109,9],[90,25,109,39],[91,0,110,6],[91,12,110,10,"__DEV__"],[91,19,110,6],[91,21,110,19],[92,0,111,8,"invariant"],[92,10,111,8,"invariant"],[92,19,111,17],[92,20,112,10,"global"],[92,26,112,16],[92,27,112,17,"nativeCallSyncHook"],[92,45,111,17],[92,47,113,10],[92,90,114,12],[92,163,113,10],[92,166,115,12],[92,240,113,10],[92,243,116,12],[92,259,111,17],[92,260,111,8],[93,0,118,7],[95,0,109,39],[95,43,109,21,"args"],[95,47,109,39],[96,0,109,21,"args"],[96,10,109,21,"args"],[96,14,109,39],[97,0,109,39],[99,0,119,6],[99,15,119,13,"global"],[99,21,119,19],[99,22,119,20,"nativeCallSyncHook"],[99,40,119,13],[99,41,119,39,"moduleID"],[99,49,119,13],[99,51,119,49,"methodID"],[99,59,119,13],[99,61,119,59,"args"],[99,65,119,13],[99,66,119,6],[100,0,120,5],[100,7,109,4],[101,0,121,3],[101,5,108,9],[101,11,121,9],[102,0,122,4,"fn"],[102,6,122,4,"fn"],[102,8,122,6],[102,11,122,9],[102,25,122,39],[103,0,122,39],[103,43,122,21,"args"],[103,47,122,39],[104,0,122,21,"args"],[104,10,122,21,"args"],[104,14,122,39],[105,0,122,39],[107,0,123,6],[107,12,123,12,"lastArg"],[107,19,123,19],[107,22,123,22,"args"],[107,26,123,26],[107,27,123,27,"length"],[107,33,123,22],[107,36,123,36],[107,37,123,22],[107,40,123,40,"args"],[107,44,123,44],[107,45,123,45,"args"],[107,49,123,49],[107,50,123,50,"length"],[107,56,123,45],[107,59,123,59],[107,60,123,44],[107,61,123,22],[107,64,123,64],[107,68,123,6],[108,0,124,6],[108,12,124,12,"secondLastArg"],[108,25,124,25],[108,28,124,28,"args"],[108,32,124,32],[108,33,124,33,"length"],[108,39,124,28],[108,42,124,42],[108,43,124,28],[108,46,124,46,"args"],[108,50,124,50],[108,51,124,51,"args"],[108,55,124,55],[108,56,124,56,"length"],[108,62,124,51],[108,65,124,65],[108,66,124,50],[108,67,124,28],[108,70,124,70],[108,74,124,6],[109,0,125,6],[109,12,125,12,"hasSuccessCallback"],[109,30,125,30],[109,33,125,33],[109,40,125,40,"lastArg"],[109,47,125,33],[109,52,125,52],[109,62,125,6],[110,0,126,6],[110,12,126,12,"hasErrorCallback"],[110,28,126,28],[110,31,126,31],[110,38,126,38,"secondLastArg"],[110,51,126,31],[110,56,126,56],[110,66,126,6],[111,0,127,6,"hasErrorCallback"],[111,8,127,6,"hasErrorCallback"],[111,24,127,22],[111,28,128,8,"invariant"],[111,37,128,17],[111,38,129,10,"hasSuccessCallback"],[111,56,128,17],[111,58,130,10],[111,112,128,17],[111,113,127,6],[112,0,132,6],[112,12,132,12,"onSuccess"],[112,21,132,21],[112,24,132,24,"hasSuccessCallback"],[112,42,132,42],[112,45,132,45,"lastArg"],[112,52,132,42],[112,55,132,55],[112,59,132,6],[113,0,133,6],[113,12,133,12,"onFail"],[113,18,133,18],[113,21,133,21,"hasErrorCallback"],[113,37,133,37],[113,40,133,40,"secondLastArg"],[113,53,133,37],[113,56,133,56],[113,60,133,6],[114,0,134,6],[114,12,134,12,"callbackCount"],[114,25,134,25],[114,28,134,28,"hasSuccessCallback"],[114,46,134,46],[114,49,134,49,"hasErrorCallback"],[114,65,134,6],[115,0,135,6,"args"],[115,8,135,6,"args"],[115,12,135,10],[115,15,135,13,"args"],[115,19,135,17],[115,20,135,18,"slice"],[115,25,135,13],[115,26,135,24],[115,27,135,13],[115,29,135,27,"args"],[115,33,135,31],[115,34,135,32,"length"],[115,40,135,27],[115,43,135,41,"callbackCount"],[115,56,135,13],[115,57,135,6],[116,0,136,6,"BatchedBridge"],[116,8,136,6,"BatchedBridge"],[116,21,136,19],[116,22,136,20,"enqueueNativeCall"],[116,39,136,6],[116,40,137,8,"moduleID"],[116,48,136,6],[116,50,138,8,"methodID"],[116,58,136,6],[116,60,139,8,"args"],[116,64,136,6],[116,66,140,8,"onFail"],[116,72,136,6],[116,74,141,8,"onSuccess"],[116,83,136,6],[117,0,143,5],[117,7,122,4],[118,0,144,3],[120,0,145,2,"fn"],[120,4,145,2,"fn"],[120,6,145,4],[120,7,145,5,"type"],[120,11,145,2],[120,14,145,12,"type"],[120,18,145,2],[121,0,146,2],[121,11,146,9,"fn"],[121,13,146,2],[122,0,147,1],[124,0,149,0],[124,11,149,9,"arrayContains"],[124,24,149,0],[124,25,149,26,"array"],[124,30,149,0],[124,32,149,43,"value"],[124,37,149,0],[124,39,149,62],[125,0,150,2],[125,11,150,9,"array"],[125,16,150,14],[125,17,150,15,"indexOf"],[125,24,150,9],[125,25,150,23,"value"],[125,30,150,9],[125,36,150,34],[125,37,150,35],[125,38,150,2],[126,0,151,1],[128,0,153,0],[128,11,153,9,"createErrorFromErrorData"],[128,35,153,0],[128,36,153,34,"errorData"],[128,45,153,0],[128,47,153,79],[129,0,153,79],[129,15,154,39,"errorData"],[129,24,154,48],[129,28,154,52],[129,30,153,79],[130,0,153,79],[130,8,154,9,"message"],[130,15,153,79],[130,23,154,9,"message"],[130,30,153,79],[131,0,153,79],[131,8,154,21,"extraErrorInfo"],[131,22,153,79],[133,0,155,2],[133,8,155,8,"error"],[133,13,155,28],[133,16,155,31],[133,20,155,35,"Error"],[133,25,155,31],[133,26,155,41,"message"],[133,33,155,31],[133,34,155,2],[134,0,156,2,"error"],[134,4,156,2,"error"],[134,9,156,7],[134,10,156,8,"framesToPop"],[134,21,156,2],[134,24,156,22],[134,25,156,2],[135,0,157,2],[135,11,157,9],[135,20,157,23,"error"],[135,25,157,9],[135,27,157,30,"extraErrorInfo"],[135,41,157,9],[135,42,157,2],[136,0,158,1],[138,0,160,0],[138,6,160,4,"NativeModules"],[138,19,160,49],[138,22,160,52],[138,24,160,0],[140,0,161,0],[140,6,161,4,"global"],[140,12,161,10],[140,13,161,11,"nativeModuleProxy"],[140,30,161,0],[140,32,161,30],[141,0,162,2,"NativeModules"],[141,4,162,2,"NativeModules"],[141,17,162,15],[141,20,162,18,"global"],[141,26,162,24],[141,27,162,25,"nativeModuleProxy"],[141,44,162,2],[142,0,163,1],[142,3,161,0],[142,9,163,7],[142,13,163,11],[142,14,163,12,"global"],[142,20,163,18],[142,21,163,19,"nativeExtensions"],[142,37,163,7],[142,39,163,37],[143,0,164,2],[143,8,164,8,"bridgeConfig"],[143,20,164,20],[143,23,164,23,"global"],[143,29,164,29],[143,30,164,30,"__fbBatchedBridgeConfig"],[143,53,164,2],[144,0,165,2,"invariant"],[144,4,165,2,"invariant"],[144,13,165,11],[144,14,166,4,"bridgeConfig"],[144,26,165,11],[144,28,167,4],[144,94,165,11],[144,95,165,2],[146,0,170,2],[146,8,170,8,"defineLazyObjectProperty"],[146,32,170,32],[146,35,170,35,"require"],[146,46,170,42],[146,93,170,2],[148,0,171,2],[148,5,171,3,"bridgeConfig"],[148,17,171,15],[148,18,171,16,"remoteModuleConfig"],[148,36,171,3],[148,40,171,38],[148,42,171,2],[148,44,171,42,"forEach"],[148,51,171,2],[148,52,172,4],[148,62,172,5,"config"],[148,68,172,4],[148,70,172,27,"moduleID"],[148,78,172,4],[148,80,172,48],[149,0,175,6],[149,10,175,12,"info"],[149,14,175,16],[149,17,175,19,"genModule"],[149,26,175,28],[149,27,175,29,"config"],[149,33,175,28],[149,35,175,37,"moduleID"],[149,43,175,28],[149,44,175,6],[151,0,176,6],[151,10,176,10],[151,11,176,11,"info"],[151,15,176,6],[151,17,176,17],[152,0,177,8],[153,0,178,7],[155,0,180,6],[155,10,180,10,"info"],[155,14,180,14],[155,15,180,15,"module"],[155,21,180,6],[155,23,180,23],[156,0,181,8,"NativeModules"],[156,8,181,8,"NativeModules"],[156,21,181,21],[156,22,181,22,"info"],[156,26,181,26],[156,27,181,27,"name"],[156,31,181,21],[156,32,181,8],[156,35,181,35,"info"],[156,39,181,39],[156,40,181,40,"module"],[156,46,181,8],[157,0,182,7],[157,7,180,6],[157,13,184,11],[158,0,185,8,"defineLazyObjectProperty"],[158,10,185,8,"defineLazyObjectProperty"],[158,34,185,32],[158,35,185,33,"NativeModules"],[158,48,185,32],[158,50,185,48,"info"],[158,54,185,52],[158,55,185,53,"name"],[158,59,185,32],[158,61,185,59],[159,0,186,10,"get"],[159,12,186,10,"get"],[159,15,186,13],[159,17,186,15],[160,0,186,15],[160,21,186,21,"loadModule"],[160,31,186,31],[160,32,186,32,"info"],[160,36,186,36],[160,37,186,37,"name"],[160,41,186,31],[160,43,186,43,"moduleID"],[160,51,186,31],[160,52,186,15],[161,0,186,15],[162,0,185,59],[162,11,185,32],[162,12,185,8],[163,0,188,7],[164,0,189,5],[164,5,171,2],[165,0,191,1],[167,0,193,0,"module"],[167,2,193,0,"module"],[167,8,193,6],[167,9,193,7,"exports"],[167,16,193,0],[167,19,193,17,"NativeModules"],[167,32,193,0]]},"type":"js/module"}]}