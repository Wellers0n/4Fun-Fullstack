{"dependencies":[],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var aStackPool = [];\n  var bStackPool = [];\n  /**\n   * Checks if two values are equal. Values may be primitives, arrays, or objects.\n   * Returns true if both arguments have the same keys and values.\n   *\n   * @see http://underscorejs.org\n   * @copyright 2009-2013 Jeremy Ashkenas, DocumentCloud Inc.\n   * @license MIT\n   */\n\n  function areEqual(a, b) {\n    var aStack = aStackPool.length ? aStackPool.pop() : [];\n    var bStack = bStackPool.length ? bStackPool.pop() : [];\n    var result = eq(a, b, aStack, bStack);\n    aStack.length = 0;\n    bStack.length = 0;\n    aStackPool.push(aStack);\n    bStackPool.push(bStack);\n    return result;\n  }\n\n  function eq(a, b, aStack, bStack) {\n    if (a === b) {\n      return a !== 0 || 1 / a == 1 / b;\n    }\n\n    if (a == null || b == null) {\n      return false;\n    }\n\n    if (typeof a != 'object' || typeof b != 'object') {\n      return false;\n    }\n\n    var objToStr = Object.prototype.toString;\n    var className = objToStr.call(a);\n\n    if (className != objToStr.call(b)) {\n      return false;\n    }\n\n    switch (className) {\n      case '[object String]':\n        return a == String(b);\n\n      case '[object Number]':\n        return isNaN(a) || isNaN(b) ? false : a == Number(b);\n\n      case '[object Date]':\n      case '[object Boolean]':\n        return +a == +b;\n\n      case '[object RegExp]':\n        return a.source == b.source && a.global == b.global && a.multiline == b.multiline && a.ignoreCase == b.ignoreCase;\n    }\n\n    var length = aStack.length;\n\n    while (length--) {\n      if (aStack[length] == a) {\n        return bStack[length] == b;\n      }\n    }\n\n    aStack.push(a);\n    bStack.push(b);\n    var size = 0;\n\n    if (className === '[object Array]') {\n      size = a.length;\n\n      if (size !== b.length) {\n        return false;\n      }\n\n      while (size--) {\n        if (!eq(a[size], b[size], aStack, bStack)) {\n          return false;\n        }\n      }\n    } else {\n      if (a.constructor !== b.constructor) {\n        return false;\n      }\n\n      if (a.hasOwnProperty('valueOf') && b.hasOwnProperty('valueOf')) {\n        return a.valueOf() == b.valueOf();\n      }\n\n      var keys = Object.keys(a);\n\n      if (keys.length != Object.keys(b).length) {\n        return false;\n      }\n\n      for (var i = 0; i < keys.length; i++) {\n        if (!eq(a[keys[i]], b[keys[i]], aStack, bStack)) {\n          return false;\n        }\n      }\n    }\n\n    aStack.pop();\n    bStack.pop();\n    return true;\n  }\n\n  module.exports = areEqual;\n});","map":[[2,0,1,0],[4,0,11,0],[4,6,11,4,"aStackPool"],[4,16,11,14],[4,19,11,17],[4,21,11,0],[5,0,12,0],[5,6,12,4,"bStackPool"],[5,16,12,14],[5,19,12,17],[5,21,12,0],[6,0,13,0],[15,0,22,0],[15,11,22,9,"areEqual"],[15,19,22,0],[15,20,22,18,"a"],[15,21,22,0],[15,23,22,21,"b"],[15,24,22,0],[15,26,22,24],[16,0,23,2],[16,8,23,6,"aStack"],[16,14,23,12],[16,17,23,15,"aStackPool"],[16,27,23,25],[16,28,23,26,"length"],[16,34,23,15],[16,37,23,35,"aStackPool"],[16,47,23,45],[16,48,23,46,"pop"],[16,51,23,35],[16,53,23,15],[16,56,23,54],[16,58,23,2],[17,0,24,2],[17,8,24,6,"bStack"],[17,14,24,12],[17,17,24,15,"bStackPool"],[17,27,24,25],[17,28,24,26,"length"],[17,34,24,15],[17,37,24,35,"bStackPool"],[17,47,24,45],[17,48,24,46,"pop"],[17,51,24,35],[17,53,24,15],[17,56,24,54],[17,58,24,2],[18,0,25,2],[18,8,25,6,"result"],[18,14,25,12],[18,17,25,15,"eq"],[18,19,25,17],[18,20,25,18,"a"],[18,21,25,17],[18,23,25,21,"b"],[18,24,25,17],[18,26,25,24,"aStack"],[18,32,25,17],[18,34,25,32,"bStack"],[18,40,25,17],[18,41,25,2],[19,0,26,2,"aStack"],[19,4,26,2,"aStack"],[19,10,26,8],[19,11,26,9,"length"],[19,17,26,2],[19,20,26,18],[19,21,26,2],[20,0,27,2,"bStack"],[20,4,27,2,"bStack"],[20,10,27,8],[20,11,27,9,"length"],[20,17,27,2],[20,20,27,18],[20,21,27,2],[21,0,28,2,"aStackPool"],[21,4,28,2,"aStackPool"],[21,14,28,12],[21,15,28,13,"push"],[21,19,28,2],[21,20,28,18,"aStack"],[21,26,28,2],[22,0,29,2,"bStackPool"],[22,4,29,2,"bStackPool"],[22,14,29,12],[22,15,29,13,"push"],[22,19,29,2],[22,20,29,18,"bStack"],[22,26,29,2],[23,0,30,2],[23,11,30,9,"result"],[23,17,30,2],[24,0,31,1],[26,0,33,0],[26,11,33,9,"eq"],[26,13,33,0],[26,14,33,12,"a"],[26,15,33,0],[26,17,33,15,"b"],[26,18,33,0],[26,20,33,18,"aStack"],[26,26,33,0],[26,28,33,26,"bStack"],[26,34,33,0],[26,36,33,34],[27,0,34,2],[27,8,34,6,"a"],[27,9,34,7],[27,14,34,12,"b"],[27,15,34,2],[27,17,34,15],[28,0,36,4],[28,13,36,11,"a"],[28,14,36,12],[28,19,36,17],[28,20,36,11],[28,24,36,22],[28,28,36,26,"a"],[28,29,36,22],[28,33,36,31],[28,37,36,35,"b"],[28,38,36,4],[29,0,37,3],[31,0,39,2],[31,8,39,6,"a"],[31,9,39,7],[31,13,39,11],[31,17,39,6],[31,21,39,19,"b"],[31,22,39,20],[31,26,39,24],[31,30,39,2],[31,32,39,30],[32,0,41,4],[32,13,41,11],[32,18,41,4],[33,0,42,3],[35,0,44,2],[35,8,44,6],[35,15,44,13,"a"],[35,16,44,6],[35,20,44,18],[35,28,44,6],[35,32,44,30],[35,39,44,37,"b"],[35,40,44,30],[35,44,44,42],[35,52,44,2],[35,54,44,52],[36,0,45,4],[36,13,45,11],[36,18,45,4],[37,0,46,3],[39,0,48,2],[39,8,48,6,"objToStr"],[39,16,48,14],[39,19,48,17,"Object"],[39,25,48,23],[39,26,48,24,"prototype"],[39,35,48,17],[39,36,48,34,"toString"],[39,44,48,2],[40,0,49,2],[40,8,49,6,"className"],[40,17,49,15],[40,20,49,18,"objToStr"],[40,28,49,26],[40,29,49,27,"call"],[40,33,49,18],[40,34,49,32,"a"],[40,35,49,18],[40,36,49,2],[42,0,51,2],[42,8,51,6,"className"],[42,17,51,15],[42,21,51,19,"objToStr"],[42,29,51,27],[42,30,51,28,"call"],[42,34,51,19],[42,35,51,33,"b"],[42,36,51,19],[42,37,51,2],[42,39,51,37],[43,0,52,4],[43,13,52,11],[43,18,52,4],[44,0,53,3],[46,0,55,2],[46,12,55,10,"className"],[46,21,55,2],[47,0,56,4],[47,11,56,9],[47,28,56,4],[48,0,57,6],[48,15,57,13,"a"],[48,16,57,14],[48,20,57,18,"String"],[48,26,57,24],[48,27,57,25,"b"],[48,28,57,24],[48,29,57,6],[50,0,59,4],[50,11,59,9],[50,28,59,4],[51,0,60,6],[51,15,60,13,"isNaN"],[51,20,60,18],[51,21,60,19,"a"],[51,22,60,18],[51,23,60,13],[51,27,60,25,"isNaN"],[51,32,60,30],[51,33,60,31,"b"],[51,34,60,30],[51,35,60,13],[51,38,60,36],[51,43,60,13],[51,46,60,44,"a"],[51,47,60,45],[51,51,60,49,"Number"],[51,57,60,55],[51,58,60,56,"b"],[51,59,60,55],[51,60,60,6],[53,0,62,4],[53,11,62,9],[53,26,62,4],[54,0,63,4],[54,11,63,9],[54,29,63,4],[55,0,64,6],[55,15,64,13],[55,16,64,14,"a"],[55,17,64,13],[55,21,64,19],[55,22,64,20,"b"],[55,23,64,6],[57,0,66,4],[57,11,66,9],[57,28,66,4],[58,0,67,6],[58,15,67,13,"a"],[58,16,67,14],[58,17,67,15,"source"],[58,23,67,13],[58,27,67,25,"b"],[58,28,67,26],[58,29,67,27,"source"],[58,35,67,13],[58,39,67,37,"a"],[58,40,67,38],[58,41,67,39,"global"],[58,47,67,37],[58,51,67,49,"b"],[58,52,67,50],[58,53,67,51,"global"],[58,59,67,13],[58,63,67,61,"a"],[58,64,67,62],[58,65,67,63,"multiline"],[58,74,67,61],[58,78,67,76,"b"],[58,79,67,77],[58,80,67,78,"multiline"],[58,89,67,13],[58,93,67,91,"a"],[58,94,67,92],[58,95,67,93,"ignoreCase"],[58,105,67,91],[58,109,67,107,"b"],[58,110,67,108],[58,111,67,109,"ignoreCase"],[58,121,67,6],[59,0,55,2],[61,0,71,2],[61,8,71,6,"length"],[61,14,71,12],[61,17,71,15,"aStack"],[61,23,71,21],[61,24,71,22,"length"],[61,30,71,2],[63,0,73,2],[63,11,73,9,"length"],[63,17,73,15],[63,19,73,2],[63,21,73,19],[64,0,74,4],[64,10,74,8,"aStack"],[64,16,74,14],[64,17,74,15,"length"],[64,23,74,14],[64,24,74,8],[64,28,74,26,"a"],[64,29,74,4],[64,31,74,29],[65,0,75,6],[65,15,75,13,"bStack"],[65,21,75,19],[65,22,75,20,"length"],[65,28,75,19],[65,29,75,13],[65,33,75,31,"b"],[65,34,75,6],[66,0,76,5],[67,0,77,3],[69,0,79,2,"aStack"],[69,4,79,2,"aStack"],[69,10,79,8],[69,11,79,9,"push"],[69,15,79,2],[69,16,79,14,"a"],[69,17,79,2],[70,0,80,2,"bStack"],[70,4,80,2,"bStack"],[70,10,80,8],[70,11,80,9,"push"],[70,15,80,2],[70,16,80,14,"b"],[70,17,80,2],[71,0,81,2],[71,8,81,6,"size"],[71,12,81,10],[71,15,81,13],[71,16,81,2],[73,0,83,2],[73,8,83,6,"className"],[73,17,83,15],[73,22,83,20],[73,38,83,2],[73,40,83,38],[74,0,84,4,"size"],[74,6,84,4,"size"],[74,10,84,8],[74,13,84,11,"a"],[74,14,84,12],[74,15,84,13,"length"],[74,21,84,4],[76,0,86,4],[76,10,86,8,"size"],[76,14,86,12],[76,19,86,17,"b"],[76,20,86,18],[76,21,86,19,"length"],[76,27,86,4],[76,29,86,27],[77,0,87,6],[77,15,87,13],[77,20,87,6],[78,0,88,5],[80,0,91,4],[80,13,91,11,"size"],[80,17,91,15],[80,19,91,4],[80,21,91,19],[81,0,92,6],[81,12,92,10],[81,13,92,11,"eq"],[81,15,92,13],[81,16,92,14,"a"],[81,17,92,15],[81,18,92,16,"size"],[81,22,92,15],[81,23,92,13],[81,25,92,23,"b"],[81,26,92,24],[81,27,92,25,"size"],[81,31,92,24],[81,32,92,13],[81,34,92,32,"aStack"],[81,40,92,13],[81,42,92,40,"bStack"],[81,48,92,13],[81,49,92,6],[81,51,92,49],[82,0,93,8],[82,17,93,15],[82,22,93,8],[83,0,94,7],[84,0,95,5],[85,0,96,3],[85,5,83,2],[85,11,96,9],[86,0,97,4],[86,10,97,8,"a"],[86,11,97,9],[86,12,97,10,"constructor"],[86,23,97,8],[86,28,97,26,"b"],[86,29,97,27],[86,30,97,28,"constructor"],[86,41,97,4],[86,43,97,41],[87,0,98,6],[87,15,98,13],[87,20,98,6],[88,0,99,5],[90,0,101,4],[90,10,101,8,"a"],[90,11,101,9],[90,12,101,10,"hasOwnProperty"],[90,26,101,8],[90,27,101,25],[90,36,101,8],[90,41,101,39,"b"],[90,42,101,40],[90,43,101,41,"hasOwnProperty"],[90,57,101,39],[90,58,101,56],[90,67,101,39],[90,68,101,4],[90,70,101,68],[91,0,102,6],[91,15,102,13,"a"],[91,16,102,14],[91,17,102,15,"valueOf"],[91,24,102,13],[91,30,102,28,"b"],[91,31,102,29],[91,32,102,30,"valueOf"],[91,39,102,28],[91,41,102,6],[92,0,103,5],[94,0,105,4],[94,10,105,8,"keys"],[94,14,105,12],[94,17,105,15,"Object"],[94,23,105,21],[94,24,105,22,"keys"],[94,28,105,15],[94,29,105,27,"a"],[94,30,105,15],[94,31,105,4],[96,0,107,4],[96,10,107,8,"keys"],[96,14,107,12],[96,15,107,13,"length"],[96,21,107,8],[96,25,107,23,"Object"],[96,31,107,29],[96,32,107,30,"keys"],[96,36,107,23],[96,37,107,35,"b"],[96,38,107,23],[96,40,107,38,"length"],[96,46,107,4],[96,48,107,46],[97,0,108,6],[97,15,108,13],[97,20,108,6],[98,0,109,5],[100,0,111,4],[100,11,111,9],[100,15,111,13,"i"],[100,16,111,14],[100,19,111,17],[100,20,111,4],[100,22,111,20,"i"],[100,23,111,21],[100,26,111,24,"keys"],[100,30,111,28],[100,31,111,29,"length"],[100,37,111,4],[100,39,111,37,"i"],[100,40,111,38],[100,42,111,4],[100,44,111,42],[101,0,112,6],[101,12,112,10],[101,13,112,11,"eq"],[101,15,112,13],[101,16,112,14,"a"],[101,17,112,15],[101,18,112,16,"keys"],[101,22,112,20],[101,23,112,21,"i"],[101,24,112,20],[101,25,112,15],[101,26,112,13],[101,28,112,26,"b"],[101,29,112,27],[101,30,112,28,"keys"],[101,34,112,32],[101,35,112,33,"i"],[101,36,112,32],[101,37,112,27],[101,38,112,13],[101,40,112,38,"aStack"],[101,46,112,13],[101,48,112,46,"bStack"],[101,54,112,13],[101,55,112,6],[101,57,112,55],[102,0,113,8],[102,17,113,15],[102,22,113,8],[103,0,114,7],[104,0,115,5],[105,0,116,3],[107,0,118,2,"aStack"],[107,4,118,2,"aStack"],[107,10,118,8],[107,11,118,9,"pop"],[107,14,118,2],[108,0,119,2,"bStack"],[108,4,119,2,"bStack"],[108,10,119,8],[108,11,119,9,"pop"],[108,14,119,2],[109,0,120,2],[109,11,120,9],[109,15,120,2],[110,0,121,1],[112,0,123,0,"module"],[112,2,123,0,"module"],[112,8,123,6],[112,9,123,7,"exports"],[112,16,123,0],[112,19,123,17,"areEqual"],[112,27,123,0]]},"type":"js/module"}]}