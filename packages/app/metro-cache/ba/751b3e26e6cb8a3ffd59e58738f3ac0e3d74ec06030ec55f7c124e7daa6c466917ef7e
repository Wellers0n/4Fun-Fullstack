{"dependencies":[{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"isAsync":false}},{"name":"YellowBoxWarning","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _toConsumableArray = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/toConsumableArray\");\n\n  var _slicedToArray = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\");\n\n  var YellowBoxWarning = _$$_REQUIRE(_dependencyMap[2], \"YellowBoxWarning\");\n\n  var observers = new Set();\n  var ignorePatterns = new Set();\n  var registry = new Map();\n  var disabled = false;\n  var projection = new Map();\n  var updateTimeout = null;\n\n  function isWarningIgnored(warning) {\n    for (var _iterator = ignorePatterns, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var _pattern = _ref;\n\n      if (warning.message.content.includes(_pattern)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  function handleUpdate() {\n    projection = new Map();\n\n    if (!disabled) {\n      for (var _iterator2 = registry, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"]();;) {\n        var _ref4;\n\n        if (_isArray2) {\n          if (_i2 >= _iterator2.length) break;\n          _ref4 = _iterator2[_i2++];\n        } else {\n          _i2 = _iterator2.next();\n          if (_i2.done) break;\n          _ref4 = _i2.value;\n        }\n\n        var _ref5 = _ref4;\n\n        var _ref3 = _slicedToArray(_ref5, 2);\n\n        var _category = _ref3[0];\n        var _warnings = _ref3[1];\n\n        var filtered = _warnings.filter(function (warning) {\n          return !isWarningIgnored(warning);\n        });\n\n        if (filtered.length > 0) {\n          projection.set(_category, filtered);\n        }\n      }\n    }\n\n    if (updateTimeout == null) {\n      updateTimeout = setImmediate(function () {\n        updateTimeout = null;\n\n        for (var _iterator3 = observers, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"]();;) {\n          var _ref7;\n\n          if (_isArray3) {\n            if (_i3 >= _iterator3.length) break;\n            _ref7 = _iterator3[_i3++];\n          } else {\n            _i3 = _iterator3.next();\n            if (_i3.done) break;\n            _ref7 = _i3.value;\n          }\n\n          var _ref8 = _ref7;\n          var _observer = _ref8.observer;\n\n          _observer(projection);\n        }\n      });\n    }\n  }\n\n  var YellowBoxRegistry = {\n    add: function add(_ref9) {\n      var args = _ref9.args,\n          framesToPop = _ref9.framesToPop;\n\n      if (typeof args[0] === 'string' && args[0].startsWith('(ADVICE)')) {\n        return;\n      }\n\n      var _YellowBoxWarning$par = YellowBoxWarning.parse({\n        args: args,\n        framesToPop: framesToPop + 1\n      }),\n          category = _YellowBoxWarning$par.category,\n          message = _YellowBoxWarning$par.message,\n          stack = _YellowBoxWarning$par.stack;\n\n      var warnings = registry.get(category);\n\n      if (warnings == null) {\n        warnings = [];\n      }\n\n      warnings = [].concat(_toConsumableArray(warnings), [new YellowBoxWarning(message, stack)]);\n      registry.delete(category);\n      registry.set(category, warnings);\n      handleUpdate();\n    },\n    delete: function _delete(category) {\n      if (registry.has(category)) {\n        registry.delete(category);\n        handleUpdate();\n      }\n    },\n    clear: function clear() {\n      if (registry.size > 0) {\n        registry.clear();\n        handleUpdate();\n      }\n    },\n    addIgnorePatterns: function addIgnorePatterns(patterns) {\n      var newPatterns = patterns.filter(function (pattern) {\n        return !ignorePatterns.has(pattern);\n      });\n\n      if (newPatterns.length === 0) {\n        return;\n      }\n\n      for (var _iterator4 = newPatterns, _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : _iterator4[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"]();;) {\n        var _ref10;\n\n        if (_isArray4) {\n          if (_i4 >= _iterator4.length) break;\n          _ref10 = _iterator4[_i4++];\n        } else {\n          _i4 = _iterator4.next();\n          if (_i4.done) break;\n          _ref10 = _i4.value;\n        }\n\n        var _pattern2 = _ref10;\n        ignorePatterns.add(_pattern2);\n      }\n\n      handleUpdate();\n    },\n    setDisabled: function setDisabled(value) {\n      if (value === disabled) {\n        return;\n      }\n\n      disabled = value;\n      handleUpdate();\n    },\n    isDisabled: function isDisabled() {\n      return disabled;\n    },\n    observe: function observe(observer) {\n      var subscription = {\n        observer: observer\n      };\n      observers.add(subscription);\n      observer(projection);\n      return {\n        unsubscribe: function unsubscribe() {\n          observers.delete(subscription);\n        }\n      };\n    }\n  };\n  module.exports = YellowBoxRegistry;\n});","map":[[2,0,11,0],[8,0,13,0],[8,6,13,6,"YellowBoxWarning"],[8,22,13,22],[8,25,13,25,"require"],[8,36,13,32],[8,75,13,0],[10,0,25,0],[10,6,25,6,"observers"],[10,15,25,42],[10,18,25,45],[10,22,25,49,"Set"],[10,25,25,45],[10,27,25,0],[11,0,26,0],[11,6,26,6,"ignorePatterns"],[11,20,26,33],[11,23,26,36],[11,27,26,40,"Set"],[11,30,26,36],[11,32,26,0],[12,0,27,0],[12,6,27,6,"registry"],[12,14,27,24],[12,17,27,27],[12,21,27,31,"Map"],[12,24,27,27],[12,26,27,0],[13,0,29,0],[13,6,29,4,"disabled"],[13,14,29,12],[13,17,29,15],[13,22,29,0],[14,0,30,0],[14,6,30,4,"projection"],[14,16,30,14],[14,19,30,17],[14,23,30,21,"Map"],[14,26,30,17],[14,28,30,0],[15,0,31,0],[15,6,31,4,"updateTimeout"],[15,19,31,17],[15,22,31,20],[15,26,31,0],[17,0,33,0],[17,11,33,9,"isWarningIgnored"],[17,27,33,0],[17,28,33,26,"warning"],[17,35,33,0],[17,37,33,62],[18,0,34,2],[18,25,34,24,"ignorePatterns"],[18,39,34,2],[18,199,34,40],[19,0,34,40],[21,0,34,40],[22,0,34,40],[23,0,34,40],[24,0,34,40],[25,0,34,40],[26,0,34,40],[27,0,34,40],[28,0,34,40],[30,0,34,40],[30,10,34,13,"pattern"],[30,18,34,40],[32,0,35,4],[32,10,35,8,"warning"],[32,17,35,15],[32,18,35,16,"message"],[32,25,35,8],[32,26,35,24,"content"],[32,33,35,8],[32,34,35,32,"includes"],[32,42,35,8],[32,43,35,41,"pattern"],[32,51,35,8],[32,52,35,4],[32,54,35,51],[33,0,36,6],[33,15,36,13],[33,19,36,6],[34,0,37,5],[35,0,38,3],[37,0,39,2],[37,11,39,9],[37,16,39,2],[38,0,40,1],[40,0,42,0],[40,11,42,9,"handleUpdate"],[40,23,42,0],[40,26,42,30],[41,0,43,2,"projection"],[41,4,43,2,"projection"],[41,14,43,12],[41,17,43,15],[41,21,43,19,"Map"],[41,24,43,15],[41,26,43,2],[43,0,44,2],[43,8,44,6],[43,9,44,7,"disabled"],[43,17,44,2],[43,19,44,17],[44,0,45,4],[44,28,45,39,"registry"],[44,36,45,4],[44,203,45,49],[45,0,45,49],[47,0,45,49],[48,0,45,49],[49,0,45,49],[50,0,45,49],[51,0,45,49],[52,0,45,49],[53,0,45,49],[54,0,45,49],[56,0,45,49],[58,0,45,49],[60,0,45,49],[60,12,45,16,"category"],[60,21,45,49],[61,0,45,49],[61,12,45,26,"warnings"],[61,21,45,49],[63,0,46,6],[63,12,46,12,"filtered"],[63,20,46,20],[63,23,46,23,"warnings"],[63,32,46,31],[63,33,46,32,"filter"],[63,39,46,23],[63,40,46,39],[63,50,46,39,"warning"],[63,57,46,46],[64,0,46,46],[64,17,46,50],[64,18,46,51,"isWarningIgnored"],[64,34,46,67],[64,35,46,68,"warning"],[64,42,46,67],[64,43,46,46],[65,0,46,46],[65,9,46,23],[65,10,46,6],[67,0,47,6],[67,12,47,10,"filtered"],[67,20,47,18],[67,21,47,19,"length"],[67,27,47,10],[67,30,47,28],[67,31,47,6],[67,33,47,31],[68,0,48,8,"projection"],[68,10,48,8,"projection"],[68,20,48,18],[68,21,48,19,"set"],[68,24,48,8],[68,25,48,23,"category"],[68,34,48,8],[68,36,48,33,"filtered"],[68,44,48,8],[69,0,49,7],[70,0,50,5],[71,0,51,3],[73,0,52,2],[73,8,52,6,"updateTimeout"],[73,21,52,19],[73,25,52,23],[73,29,52,2],[73,31,52,29],[74,0,53,4,"updateTimeout"],[74,6,53,4,"updateTimeout"],[74,19,53,17],[74,22,53,20,"setImmediate"],[74,34,53,32],[74,35,53,33],[74,47,53,39],[75,0,54,6,"updateTimeout"],[75,8,54,6,"updateTimeout"],[75,21,54,19],[75,24,54,22],[75,28,54,6],[77,0,55,6],[77,30,55,31,"observers"],[77,39,55,6],[77,206,55,42],[78,0,55,42],[80,0,55,42],[81,0,55,42],[82,0,55,42],[83,0,55,42],[84,0,55,42],[85,0,55,42],[86,0,55,42],[87,0,55,42],[89,0,55,42],[90,0,55,42],[90,14,55,18,"observer"],[90,23,55,42],[90,32,55,18,"observer"],[90,40,55,42],[92,0,56,8,"observer"],[92,10,56,8,"observer"],[92,19,56,16],[92,20,56,17,"projection"],[92,30,56,16],[92,31,56,8],[93,0,57,7],[94,0,58,5],[94,7,53,32],[94,8,53,4],[95,0,59,3],[96,0,60,1],[98,0,62,0],[98,6,62,6,"YellowBoxRegistry"],[98,23,62,23],[98,26,62,26],[99,0,63,2,"add"],[99,4,63,2,"add"],[99,7,62,26],[99,29,69,13],[100,0,69,13],[100,10,64,4,"args"],[100,14,69,13],[100,23,64,4,"args"],[100,27,69,13],[101,0,69,13],[101,10,65,4,"framesToPop"],[101,21,69,13],[101,30,65,4,"framesToPop"],[101,41,69,13],[103,0,70,4],[103,10,70,8],[103,17,70,15,"args"],[103,21,70,19],[103,22,70,20],[103,23,70,19],[103,24,70,8],[103,29,70,27],[103,37,70,8],[103,41,70,39,"args"],[103,45,70,43],[103,46,70,44],[103,47,70,43],[103,48,70,39],[103,49,70,47,"startsWith"],[103,59,70,39],[103,60,70,58],[103,70,70,39],[103,71,70,4],[103,73,70,71],[104,0,71,6],[105,0,72,5],[107,0,69,13],[107,34,73,39,"YellowBoxWarning"],[107,50,73,55],[107,51,73,56,"parse"],[107,56,73,39],[107,57,73,62],[108,0,74,6,"args"],[108,8,74,6,"args"],[108,12,74,10],[108,14,74,6,"args"],[108,18,73,62],[109,0,75,6,"framesToPop"],[109,8,75,6,"framesToPop"],[109,19,75,17],[109,21,75,19,"framesToPop"],[109,32,75,30],[109,35,75,33],[110,0,73,62],[110,7,73,39],[110,8,69,13],[111,0,69,13],[111,10,73,11,"category"],[111,18,69,13],[111,43,73,11,"category"],[111,51,69,13],[112,0,69,13],[112,10,73,21,"message"],[112,17,69,13],[112,42,73,21,"message"],[112,49,69,13],[113,0,69,13],[113,10,73,30,"stack"],[113,15,69,13],[113,40,73,30,"stack"],[113,45,69,13],[115,0,78,4],[115,10,78,8,"warnings"],[115,18,78,16],[115,21,78,19,"registry"],[115,29,78,27],[115,30,78,28,"get"],[115,33,78,19],[115,34,78,32,"category"],[115,42,78,19],[115,43,78,4],[117,0,79,4],[117,10,79,8,"warnings"],[117,18,79,16],[117,22,79,20],[117,26,79,4],[117,28,79,26],[118,0,80,6,"warnings"],[118,8,80,6,"warnings"],[118,16,80,14],[118,19,80,17],[118,21,80,6],[119,0,81,5],[121,0,82,4,"warnings"],[121,6,82,4,"warnings"],[121,14,82,12],[121,46,82,19,"warnings"],[121,54,82,12],[121,58,82,29],[121,62,82,33,"YellowBoxWarning"],[121,78,82,29],[121,79,82,50,"message"],[121,86,82,29],[121,88,82,59,"stack"],[121,93,82,29],[121,94,82,12],[121,96,82,4],[122,0,84,4,"registry"],[122,6,84,4,"registry"],[122,14,84,12],[122,15,84,13,"delete"],[122,21,84,4],[122,22,84,20,"category"],[122,30,84,4],[123,0,85,4,"registry"],[123,6,85,4,"registry"],[123,14,85,12],[123,15,85,13,"set"],[123,18,85,4],[123,19,85,17,"category"],[123,27,85,4],[123,29,85,27,"warnings"],[123,37,85,4],[124,0,87,4,"handleUpdate"],[124,6,87,4,"handleUpdate"],[124,18,87,16],[125,0,88,3],[125,5,62,26],[126,0,90,2,"delete"],[126,4,90,2,"delete"],[126,10,62,26],[126,29,90,9,"category"],[126,37,62,26],[126,39,90,35],[127,0,91,4],[127,10,91,8,"registry"],[127,18,91,16],[127,19,91,17,"has"],[127,22,91,8],[127,23,91,21,"category"],[127,31,91,8],[127,32,91,4],[127,34,91,32],[128,0,92,6,"registry"],[128,8,92,6,"registry"],[128,16,92,14],[128,17,92,15,"delete"],[128,23,92,6],[128,24,92,22,"category"],[128,32,92,6],[129,0,93,6,"handleUpdate"],[129,8,93,6,"handleUpdate"],[129,20,93,18],[130,0,94,5],[131,0,95,3],[131,5,62,26],[132,0,97,2,"clear"],[132,4,97,2,"clear"],[132,9,62,26],[132,28,97,16],[133,0,98,4],[133,10,98,8,"registry"],[133,18,98,16],[133,19,98,17,"size"],[133,23,98,8],[133,26,98,24],[133,27,98,4],[133,29,98,27],[134,0,99,6,"registry"],[134,8,99,6,"registry"],[134,16,99,14],[134,17,99,15,"clear"],[134,22,99,6],[135,0,100,6,"handleUpdate"],[135,8,100,6,"handleUpdate"],[135,20,100,18],[136,0,101,5],[137,0,102,3],[137,5,62,26],[138,0,104,2,"addIgnorePatterns"],[138,4,104,2,"addIgnorePatterns"],[138,21,62,26],[138,50,104,20,"patterns"],[138,58,62,26],[138,60,104,60],[139,0,105,4],[139,10,105,10,"newPatterns"],[139,21,105,21],[139,24,105,24,"patterns"],[139,32,105,32],[139,33,105,33,"filter"],[139,39,105,24],[139,40,106,6],[139,50,106,6,"pattern"],[139,57,106,13],[140,0,106,13],[140,15,106,17],[140,16,106,18,"ignorePatterns"],[140,30,106,32],[140,31,106,33,"has"],[140,34,106,18],[140,35,106,37,"pattern"],[140,42,106,18],[140,43,106,13],[141,0,106,13],[141,7,105,24],[141,8,105,4],[143,0,108,4],[143,10,108,8,"newPatterns"],[143,21,108,19],[143,22,108,20,"length"],[143,28,108,8],[143,33,108,31],[143,34,108,4],[143,36,108,34],[144,0,109,6],[145,0,110,5],[147,0,111,4],[147,28,111,26,"newPatterns"],[147,39,111,4],[147,206,111,39],[148,0,111,39],[150,0,111,39],[151,0,111,39],[152,0,111,39],[153,0,111,39],[154,0,111,39],[155,0,111,39],[156,0,111,39],[157,0,111,39],[159,0,111,39],[159,12,111,15,"pattern"],[159,21,111,39],[160,0,112,6,"ignorePatterns"],[160,8,112,6,"ignorePatterns"],[160,22,112,20],[160,23,112,21,"add"],[160,26,112,6],[160,27,112,25,"pattern"],[160,36,112,6],[161,0,113,5],[163,0,114,4,"handleUpdate"],[163,6,114,4,"handleUpdate"],[163,18,114,16],[164,0,115,3],[164,5,62,26],[165,0,117,2,"setDisabled"],[165,4,117,2,"setDisabled"],[165,15,62,26],[165,38,117,14,"value"],[165,43,62,26],[165,45,117,36],[166,0,118,4],[166,10,118,8,"value"],[166,15,118,13],[166,20,118,18,"disabled"],[166,28,118,4],[166,30,118,28],[167,0,119,6],[168,0,120,5],[170,0,121,4,"disabled"],[170,6,121,4,"disabled"],[170,14,121,12],[170,17,121,15,"value"],[170,22,121,4],[171,0,122,4,"handleUpdate"],[171,6,122,4,"handleUpdate"],[171,18,122,16],[172,0,123,3],[172,5,62,26],[173,0,125,2,"isDisabled"],[173,4,125,2,"isDisabled"],[173,14,62,26],[173,38,125,24],[174,0,126,4],[174,13,126,11,"disabled"],[174,21,126,4],[175,0,127,3],[175,5,62,26],[176,0,129,2,"observe"],[176,4,129,2,"observe"],[176,11,62,26],[176,30,129,10,"observer"],[176,38,62,26],[176,40,129,44],[177,0,130,4],[177,10,130,10,"subscription"],[177,22,130,22],[177,25,130,25],[178,0,130,26,"observer"],[178,8,130,26,"observer"],[178,16,130,34],[178,18,130,26,"observer"],[179,0,130,25],[179,7,130,4],[180,0,131,4,"observers"],[180,6,131,4,"observers"],[180,15,131,13],[180,16,131,14,"add"],[180,19,131,4],[180,20,131,18,"subscription"],[180,32,131,4],[181,0,132,4,"observer"],[181,6,132,4,"observer"],[181,14,132,12],[181,15,132,13,"projection"],[181,25,132,12],[181,26,132,4],[182,0,133,4],[182,13,133,11],[183,0,134,6,"unsubscribe"],[183,8,134,6,"unsubscribe"],[183,19,133,11],[183,44,134,26],[184,0,135,8,"observers"],[184,10,135,8,"observers"],[184,19,135,17],[184,20,135,18,"delete"],[184,26,135,8],[184,27,135,25,"subscription"],[184,39,135,8],[185,0,136,7],[186,0,133,11],[186,7,133,4],[187,0,138,3],[188,0,62,26],[188,3,62,0],[189,0,141,0,"module"],[189,2,141,0,"module"],[189,8,141,6],[189,9,141,7,"exports"],[189,16,141,0],[189,19,141,17,"YellowBoxRegistry"],[189,36,141,0]]},"type":"js/module"}]}