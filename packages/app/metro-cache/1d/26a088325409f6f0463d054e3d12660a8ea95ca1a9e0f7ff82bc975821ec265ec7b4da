{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"Blob","data":{"isAsync":false}},{"name":"NativeModules","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.URL = exports.URLSearchParams = void 0;\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n\n  var Blob = _$$_REQUIRE(_dependencyMap[3], \"Blob\");\n\n  var _require = _$$_REQUIRE(_dependencyMap[4], \"NativeModules\"),\n      BlobModule = _require.BlobModule;\n\n  var BLOB_URL_PREFIX = null;\n\n  if (BlobModule && typeof BlobModule.BLOB_URI_SCHEME === 'string') {\n    BLOB_URL_PREFIX = BlobModule.BLOB_URI_SCHEME + ':';\n\n    if (typeof BlobModule.BLOB_URI_HOST === 'string') {\n      BLOB_URL_PREFIX += \"//\" + BlobModule.BLOB_URI_HOST + \"/\";\n    }\n  }\n\n  var _Symbol$iterator = typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\";\n\n  var URLSearchParams = function () {\n    function URLSearchParams(params) {\n      var _this = this;\n\n      (0, _classCallCheck2.default)(this, URLSearchParams);\n      this._searchParams = [];\n\n      if (typeof params === 'object') {\n        Object.keys(params).forEach(function (key) {\n          return _this.append(key, params[key]);\n        });\n      }\n    }\n\n    (0, _createClass2.default)(URLSearchParams, [{\n      key: \"append\",\n      value: function append(key, value) {\n        this._searchParams.push([key, value]);\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(name) {\n        throw new Error('not implemented');\n      }\n    }, {\n      key: \"get\",\n      value: function get(name) {\n        throw new Error('not implemented');\n      }\n    }, {\n      key: \"getAll\",\n      value: function getAll(name) {\n        throw new Error('not implemented');\n      }\n    }, {\n      key: \"has\",\n      value: function has(name) {\n        throw new Error('not implemented');\n      }\n    }, {\n      key: \"set\",\n      value: function set(name, value) {\n        throw new Error('not implemented');\n      }\n    }, {\n      key: \"sort\",\n      value: function sort() {\n        throw new Error('not implemented');\n      }\n    }, {\n      key: _Symbol$iterator,\n      value: function value() {\n        return this._searchParams[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"]();\n      }\n    }, {\n      key: \"toString\",\n      value: function toString() {\n        if (this._searchParams.length === 0) {\n          return '';\n        }\n\n        var last = this._searchParams.length - 1;\n        return this._searchParams.reduce(function (acc, curr, index) {\n          return acc + curr.join('=') + (index === last ? '' : '&');\n        }, '');\n      }\n    }]);\n    return URLSearchParams;\n  }();\n\n  exports.URLSearchParams = URLSearchParams;\n\n  function validateBaseUrl(url) {\n    return /^(?:(?:(?:https?|ftp):)?\\/\\/)(?:(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:[/?#]\\S*)?$/i.test(url);\n  }\n\n  var URL = function () {\n    (0, _createClass2.default)(URL, null, [{\n      key: \"createObjectURL\",\n      value: function createObjectURL(blob) {\n        if (BLOB_URL_PREFIX === null) {\n          throw new Error('Cannot create URL for blob!');\n        }\n\n        return \"\" + BLOB_URL_PREFIX + blob.data.blobId + \"?offset=\" + blob.data.offset + \"&size=\" + blob.size;\n      }\n    }, {\n      key: \"revokeObjectURL\",\n      value: function revokeObjectURL(url) {}\n    }]);\n\n    function URL(url, base) {\n      (0, _classCallCheck2.default)(this, URL);\n      this._searchParamsInstance = null;\n      var baseUrl = null;\n\n      if (base) {\n        if (typeof base === 'string') {\n          baseUrl = base;\n\n          if (!validateBaseUrl(baseUrl)) {\n            throw new TypeError(\"Invalid base URL: \" + baseUrl);\n          }\n        } else if (typeof base === 'object') {\n          baseUrl = base.toString();\n        }\n\n        if (baseUrl.endsWith('/') && url.startsWith('/')) {\n          baseUrl = baseUrl.slice(0, baseUrl.length - 1);\n        }\n\n        if (baseUrl.endsWith(url)) {\n          url = '';\n        }\n\n        this._url = \"\" + baseUrl + url;\n      } else {\n        this._url = url;\n\n        if (!this._url.endsWith('/')) {\n          this._url += '/';\n        }\n      }\n    }\n\n    (0, _createClass2.default)(URL, [{\n      key: \"toJSON\",\n      value: function toJSON() {\n        return this.toString();\n      }\n    }, {\n      key: \"toString\",\n      value: function toString() {\n        if (this._searchParamsInstance === null) {\n          return this._url;\n        }\n\n        var separator = this._url.indexOf('?') > -1 ? '&' : '?';\n        return this._url + separator + this._searchParamsInstance.toString();\n      }\n    }, {\n      key: \"hash\",\n      get: function get() {\n        throw new Error('not implemented');\n      }\n    }, {\n      key: \"host\",\n      get: function get() {\n        throw new Error('not implemented');\n      }\n    }, {\n      key: \"hostname\",\n      get: function get() {\n        throw new Error('not implemented');\n      }\n    }, {\n      key: \"href\",\n      get: function get() {\n        return this.toString();\n      }\n    }, {\n      key: \"origin\",\n      get: function get() {\n        throw new Error('not implemented');\n      }\n    }, {\n      key: \"password\",\n      get: function get() {\n        throw new Error('not implemented');\n      }\n    }, {\n      key: \"pathname\",\n      get: function get() {\n        throw new Error('not implemented');\n      }\n    }, {\n      key: \"port\",\n      get: function get() {\n        throw new Error('not implemented');\n      }\n    }, {\n      key: \"protocol\",\n      get: function get() {\n        throw new Error('not implemented');\n      }\n    }, {\n      key: \"search\",\n      get: function get() {\n        throw new Error('not implemented');\n      }\n    }, {\n      key: \"searchParams\",\n      get: function get() {\n        if (this._searchParamsInstance == null) {\n          this._searchParamsInstance = new URLSearchParams();\n        }\n\n        return this._searchParamsInstance;\n      }\n    }, {\n      key: \"username\",\n      get: function get() {\n        throw new Error('not implemented');\n      }\n    }]);\n    return URL;\n  }();\n\n  exports.URL = URL;\n});","map":[[2,0,10,0],[15,0,12,0],[15,6,12,6,"Blob"],[15,10,12,10],[15,13,12,13,"require"],[15,24,12,20],[15,51,12,0],[17,17,14,21,"require"],[17,28,14,28],[17,64],[18,6,14,7,"BlobModule"],[18,16],[18,28,14,7,"BlobModule"],[18,38],[20,0,16,0],[20,6,16,4,"BLOB_URL_PREFIX"],[20,21,16,19],[20,24,16,22],[20,28,16,0],[22,0,18,0],[22,6,18,4,"BlobModule"],[22,16,18,14],[22,20,18,18],[22,27,18,25,"BlobModule"],[22,37,18,35],[22,38,18,36,"BLOB_URI_SCHEME"],[22,53,18,18],[22,58,18,56],[22,66,18,0],[22,68,18,66],[23,0,19,2,"BLOB_URL_PREFIX"],[23,4,19,2,"BLOB_URL_PREFIX"],[23,19,19,17],[23,22,19,20,"BlobModule"],[23,32,19,30],[23,33,19,31,"BLOB_URI_SCHEME"],[23,48,19,20],[23,51,19,49],[23,54,19,2],[25,0,20,2],[25,8,20,6],[25,15,20,13,"BlobModule"],[25,25,20,23],[25,26,20,24,"BLOB_URI_HOST"],[25,39,20,6],[25,44,20,42],[25,52,20,2],[25,54,20,52],[26,0,21,4,"BLOB_URL_PREFIX"],[26,6,21,4,"BLOB_URL_PREFIX"],[26,21,21,19],[26,32,21,28,"BlobModule"],[26,42,21,38],[26,43,21,39,"BLOB_URI_HOST"],[26,56,21,19],[26,62,21,4],[27,0,22,3],[28,0,23,1],[30,56,89,3,"Symbol"],[30,62,89,9],[30,63,89,10,"iterator"],[30,71],[32,6,52,13,"URLSearchParams"],[32,21],[33,0,55,2],[33,29,55,14,"params"],[33,35,55,2],[33,37,55,27],[34,0,55,27],[36,0,55,27],[37,0,55,27],[37,11,53,2,"_searchParams"],[37,24,55,27],[37,27,53,18],[37,29,55,27],[39,0,56,4],[39,10,56,8],[39,17,56,15,"params"],[39,23,56,8],[39,28,56,26],[39,36,56,4],[39,38,56,36],[40,0,57,6,"Object"],[40,8,57,6,"Object"],[40,14,57,12],[40,15,57,13,"keys"],[40,19,57,6],[40,20,57,18,"params"],[40,26,57,6],[40,28,57,26,"forEach"],[40,35,57,6],[40,36,57,34],[40,46,57,34,"key"],[40,49,57,37],[41,0,57,37],[41,17,57,41],[41,22,57,45],[41,23,57,46,"append"],[41,29,57,41],[41,30,57,53,"key"],[41,33,57,41],[41,35,57,58,"params"],[41,41,57,64],[41,42,57,65,"key"],[41,45,57,64],[41,46,57,41],[41,47,57,37],[42,0,57,37],[42,9,57,6],[43,0,58,5],[44,0,59,3],[48,29,61,9,"key"],[48,32],[48,34,61,22,"value"],[48,39],[48,41,61,37],[49,0,62,4],[49,13,62,9,"_searchParams"],[49,26,62,4],[49,27,62,23,"push"],[49,31,62,4],[49,32,62,28],[49,33,62,29,"key"],[49,36,62,28],[49,38,62,34,"value"],[49,43,62,28],[49,44,62,4],[50,0,63,3],[53,30,65,9,"name"],[53,34],[53,36,65,15],[54,0,66,4],[54,14,66,10],[54,18,66,14,"Error"],[54,23,66,10],[54,24,66,20],[54,41,66,10],[54,42,66,4],[55,0,67,3],[58,26,69,6,"name"],[58,30],[58,32,69,12],[59,0,70,4],[59,14,70,10],[59,18,70,14,"Error"],[59,23,70,10],[59,24,70,20],[59,41,70,10],[59,42,70,4],[60,0,71,3],[63,29,73,9,"name"],[63,33],[63,35,73,15],[64,0,74,4],[64,14,74,10],[64,18,74,14,"Error"],[64,23,74,10],[64,24,74,20],[64,41,74,10],[64,42,74,4],[65,0,75,3],[68,26,77,6,"name"],[68,30],[68,32,77,12],[69,0,78,4],[69,14,78,10],[69,18,78,14,"Error"],[69,23,78,10],[69,24,78,20],[69,41,78,10],[69,42,78,4],[70,0,79,3],[73,26,81,6,"name"],[73,30],[73,32,81,12,"value"],[73,37],[73,39,81,19],[74,0,82,4],[74,14,82,10],[74,18,82,14,"Error"],[74,23,82,10],[74,24,82,20],[74,41,82,10],[74,42,82,4],[75,0,83,3],[78,29,85,9],[79,0,86,4],[79,14,86,10],[79,18,86,14,"Error"],[79,23,86,10],[79,24,86,20],[79,41,86,10],[79,42,86,4],[80,0,87,3],[83,30,89,22],[84,0,90,4],[84,15,90,11],[84,20,90,16,"_searchParams"],[84,33,90,11],[84,65,90,30,"Symbol"],[84,71,90,36],[84,72,90,37,"iterator"],[84,80,90,11],[84,98,90,4],[85,0,91,3],[88,33,93,13],[89,0,94,4],[89,12,94,8],[89,17,94,13,"_searchParams"],[89,30,94,8],[89,31,94,27,"length"],[89,37,94,8],[89,42,94,38],[89,43,94,4],[89,45,94,41],[90,0,95,6],[90,17,95,13],[90,19,95,6],[91,0,96,5],[93,0,97,4],[93,12,97,10,"last"],[93,16,97,14],[93,19,97,17],[93,24,97,22,"_searchParams"],[93,37,97,17],[93,38,97,36,"length"],[93,44,97,17],[93,47,97,45],[93,48,97,4],[94,0,98,4],[94,15,98,11],[94,20,98,16,"_searchParams"],[94,33,98,11],[94,34,98,30,"reduce"],[94,40,98,11],[94,41,98,37],[94,51,98,38,"acc"],[94,54,98,37],[94,56,98,43,"curr"],[94,60,98,37],[94,62,98,49,"index"],[94,67,98,37],[94,69,98,59],[95,0,99,6],[95,17,99,13,"acc"],[95,20,99,16],[95,23,99,19,"curr"],[95,27,99,23],[95,28,99,24,"join"],[95,32,99,19],[95,33,99,29],[95,36,99,19],[95,37,99,13],[95,41,99,37,"index"],[95,46,99,42],[95,51,99,47,"last"],[95,55,99,37],[95,58,99,54],[95,60,99,37],[95,63,99,59],[95,66,99,13],[95,67,99,6],[96,0,100,5],[96,9,98,11],[96,11,100,7],[96,13,98,11],[96,14,98,4],[97,0,101,3],[104,0,104,0],[104,11,104,9,"validateBaseUrl"],[104,26,104,0],[104,27,104,25,"url"],[104,30,104,0],[104,32,104,38],[105,0,106,2],[105,11,106,9],[105,333,106,331,"test"],[105,337,106,9],[105,338,107,4,"url"],[105,341,106,9],[105,342,106,2],[106,0,109,1],[108,6,111,13,"URL"],[108,9],[111,38,114,25,"blob"],[111,42],[111,44,114,37],[112,0,115,4],[112,12,115,8,"BLOB_URL_PREFIX"],[112,27,115,23],[112,32,115,28],[112,36,115,4],[112,38,115,34],[113,0,116,6],[113,16,116,12],[113,20,116,16,"Error"],[113,25,116,12],[113,26,116,22],[113,55,116,12],[113,56,116,6],[114,0,117,5],[116,0,118,4],[116,20,118,14,"BLOB_URL_PREFIX"],[116,35,118,4],[116,38,118,32,"blob"],[116,42,118,36],[116,43,118,37,"data"],[116,47,118,32],[116,48,118,42,"blobId"],[116,54,118,4],[116,70,119,6,"blob"],[116,74,119,10],[116,75,119,11,"data"],[116,79,119,6],[116,80,119,16,"offset"],[116,86,118,4],[116,100,120,13,"blob"],[116,104,120,17],[116,105,120,18,"size"],[116,109,118,4],[117,0,121,3],[120,38,123,25,"url"],[120,41],[120,43,123,38],[120,44,125,3],[123,0,127,2],[123,17,127,14,"url"],[123,20,127,2],[123,22,127,27,"base"],[123,26,127,2],[123,28,127,41],[124,0,127,41],[125,0,127,41],[125,11,112,2,"_searchParamsInstance"],[125,32,127,41],[125,35,112,26],[125,39,127,41],[126,0,128,4],[126,10,128,8,"baseUrl"],[126,17,128,15],[126,20,128,18],[126,24,128,4],[128,0,129,4],[128,10,129,8,"base"],[128,14,129,4],[128,16,129,14],[129,0,130,6],[129,12,130,10],[129,19,130,17,"base"],[129,23,130,10],[129,28,130,26],[129,36,130,6],[129,38,130,36],[130,0,131,8,"baseUrl"],[130,10,131,8,"baseUrl"],[130,17,131,15],[130,20,131,18,"base"],[130,24,131,8],[132,0,132,8],[132,14,132,12],[132,15,132,13,"validateBaseUrl"],[132,30,132,28],[132,31,132,29,"baseUrl"],[132,38,132,28],[132,39,132,8],[132,41,132,39],[133,0,133,10],[133,18,133,16],[133,22,133,20,"TypeError"],[133,31,133,16],[133,55,133,51,"baseUrl"],[133,62,133,16],[133,63,133,10],[134,0,134,9],[135,0,135,7],[135,9,130,6],[135,15,135,13],[135,19,135,17],[135,26,135,24,"base"],[135,30,135,17],[135,35,135,33],[135,43,135,13],[135,45,135,43],[136,0,136,8,"baseUrl"],[136,10,136,8,"baseUrl"],[136,17,136,15],[136,20,136,18,"base"],[136,24,136,22],[136,25,136,23,"toString"],[136,33,136,18],[136,35,136,8],[137,0,137,7],[139,0,138,6],[139,12,138,10,"baseUrl"],[139,19,138,17],[139,20,138,18,"endsWith"],[139,28,138,10],[139,29,138,27],[139,32,138,10],[139,37,138,35,"url"],[139,40,138,38],[139,41,138,39,"startsWith"],[139,51,138,35],[139,52,138,50],[139,55,138,35],[139,56,138,6],[139,58,138,56],[140,0,139,8,"baseUrl"],[140,10,139,8,"baseUrl"],[140,17,139,15],[140,20,139,18,"baseUrl"],[140,27,139,25],[140,28,139,26,"slice"],[140,33,139,18],[140,34,139,32],[140,35,139,18],[140,37,139,35,"baseUrl"],[140,44,139,42],[140,45,139,43,"length"],[140,51,139,35],[140,54,139,52],[140,55,139,18],[140,56,139,8],[141,0,140,7],[143,0,141,6],[143,12,141,10,"baseUrl"],[143,19,141,17],[143,20,141,18,"endsWith"],[143,28,141,10],[143,29,141,27,"url"],[143,32,141,10],[143,33,141,6],[143,35,141,33],[144,0,142,8,"url"],[144,10,142,8,"url"],[144,13,142,11],[144,16,142,14],[144,18,142,8],[145,0,143,7],[147,0,144,6],[147,13,144,11,"_url"],[147,17,144,6],[147,25,144,21,"baseUrl"],[147,32,144,6],[147,35,144,31,"url"],[147,38,144,6],[148,0,145,5],[148,7,129,4],[148,13,145,11],[149,0,146,6],[149,13,146,11,"_url"],[149,17,146,6],[149,20,146,18,"url"],[149,23,146,6],[151,0,147,6],[151,12,147,10],[151,13,147,11],[151,18,147,16,"_url"],[151,22,147,11],[151,23,147,21,"endsWith"],[151,31,147,11],[151,32,147,30],[151,35,147,11],[151,36,147,6],[151,38,147,36],[152,0,148,8],[152,15,148,13,"_url"],[152,19,148,8],[152,23,148,21],[152,26,148,8],[153,0,149,7],[154,0,150,5],[155,0,151,3],[159,31,200,19],[160,0,201,4],[160,15,201,11],[160,20,201,16,"toString"],[160,28,201,11],[160,30,201,4],[161,0,202,3],[164,33,204,21],[165,0,205,4],[165,12,205,8],[165,17,205,13,"_searchParamsInstance"],[165,38,205,8],[165,43,205,39],[165,47,205,4],[165,49,205,45],[166,0,206,6],[166,17,206,13],[166,22,206,18,"_url"],[166,26,206,6],[167,0,207,5],[169,0,208,4],[169,12,208,10,"separator"],[169,21,208,19],[169,24,208,22],[169,29,208,27,"_url"],[169,33,208,22],[169,34,208,32,"indexOf"],[169,41,208,22],[169,42,208,40],[169,45,208,22],[169,49,208,47],[169,50,208,48],[169,51,208,22],[169,54,208,52],[169,57,208,22],[169,60,208,58],[169,63,208,4],[170,0,209,4],[170,15,209,11],[170,20,209,16,"_url"],[170,24,209,11],[170,27,209,23,"separator"],[170,36,209,11],[170,39,209,35],[170,44,209,40,"_searchParamsInstance"],[170,65,209,35],[170,66,209,62,"toString"],[170,74,209,35],[170,76,209,4],[171,0,210,3],[174,26,153,13],[175,0,154,4],[175,14,154,10],[175,18,154,14,"Error"],[175,23,154,10],[175,24,154,20],[175,41,154,10],[175,42,154,4],[176,0,155,3],[179,26,157,13],[180,0,158,4],[180,14,158,10],[180,18,158,14,"Error"],[180,23,158,10],[180,24,158,20],[180,41,158,10],[180,42,158,4],[181,0,159,3],[184,26,161,17],[185,0,162,4],[185,14,162,10],[185,18,162,14,"Error"],[185,23,162,10],[185,24,162,20],[185,41,162,10],[185,42,162,4],[186,0,163,3],[189,26,165,21],[190,0,166,4],[190,15,166,11],[190,20,166,16,"toString"],[190,28,166,11],[190,30,166,4],[191,0,167,3],[194,26,169,15],[195,0,170,4],[195,14,170,10],[195,18,170,14,"Error"],[195,23,170,10],[195,24,170,20],[195,41,170,10],[195,42,170,4],[196,0,171,3],[199,26,173,17],[200,0,174,4],[200,14,174,10],[200,18,174,14,"Error"],[200,23,174,10],[200,24,174,20],[200,41,174,10],[200,42,174,4],[201,0,175,3],[204,26,177,17],[205,0,178,4],[205,14,178,10],[205,18,178,14,"Error"],[205,23,178,10],[205,24,178,20],[205,41,178,10],[205,42,178,4],[206,0,179,3],[209,26,181,13],[210,0,182,4],[210,14,182,10],[210,18,182,14,"Error"],[210,23,182,10],[210,24,182,20],[210,41,182,10],[210,42,182,4],[211,0,183,3],[214,26,185,17],[215,0,186,4],[215,14,186,10],[215,18,186,14,"Error"],[215,23,186,10],[215,24,186,20],[215,41,186,10],[215,42,186,4],[216,0,187,3],[219,26,189,15],[220,0,190,4],[220,14,190,10],[220,18,190,14,"Error"],[220,23,190,10],[220,24,190,20],[220,41,190,10],[220,42,190,4],[221,0,191,3],[224,26,193,38],[225,0,194,4],[225,12,194,8],[225,17,194,13,"_searchParamsInstance"],[225,38,194,8],[225,42,194,38],[225,46,194,4],[225,48,194,44],[226,0,195,6],[226,15,195,11,"_searchParamsInstance"],[226,36,195,6],[226,39,195,35],[226,43,195,39,"URLSearchParams"],[226,58,195,35],[226,60,195,6],[227,0,196,5],[229,0,197,4],[229,15,197,11],[229,20,197,16,"_searchParamsInstance"],[229,41,197,4],[230,0,198,3],[233,26,212,17],[234,0,213,4],[234,14,213,10],[234,18,213,14,"Error"],[234,23,213,10],[234,24,213,20],[234,41,213,10],[234,42,213,4],[235,0,214,3]]},"type":"js/module"}]}