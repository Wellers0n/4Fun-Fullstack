{"dependencies":[{"name":"invariant","data":{"isAsync":false}},{"name":"merge","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var invariant = _$$_REQUIRE(_dependencyMap[0], \"invariant\");\n\n  var merge = _$$_REQUIRE(_dependencyMap[1], \"merge\");\n\n  function deprecatedCreateStrictShapeTypeChecker(shapeTypes) {\n    function checkType(isRequired, props, propName, componentName, location) {\n      if (!props[propName]) {\n        if (isRequired) {\n          invariant(false, \"Required object `\" + propName + \"` was not specified in \" + (\"`\" + componentName + \"`.\"));\n        }\n\n        return;\n      }\n\n      var propValue = props[propName];\n      var propType = typeof propValue;\n      var locationName = location || '(unknown)';\n\n      if (propType !== 'object') {\n        invariant(false, \"Invalid \" + locationName + \" `\" + propName + \"` of type `\" + propType + \"` \" + (\"supplied to `\" + componentName + \"`, expected `object`.\"));\n      }\n\n      var allKeys = merge(props[propName], shapeTypes);\n\n      for (var _len = arguments.length, rest = new Array(_len > 5 ? _len - 5 : 0), _key = 5; _key < _len; _key++) {\n        rest[_key - 5] = arguments[_key];\n      }\n\n      for (var _key2 in allKeys) {\n        var checker = shapeTypes[_key2];\n\n        if (!checker) {\n          invariant(false, \"Invalid props.\" + propName + \" key `\" + _key2 + \"` supplied to `\" + componentName + \"`.\" + '\\nBad object: ' + JSON.stringify(props[propName], null, '  ') + '\\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  '));\n        }\n\n        var error = checker.apply(void 0, [propValue, _key2, componentName, location].concat(rest));\n\n        if (error) {\n          invariant(false, error.message + '\\nBad object: ' + JSON.stringify(props[propName], null, '  '));\n        }\n      }\n    }\n\n    function chainedCheckType(props, propName, componentName, location) {\n      for (var _len2 = arguments.length, rest = new Array(_len2 > 4 ? _len2 - 4 : 0), _key3 = 4; _key3 < _len2; _key3++) {\n        rest[_key3 - 4] = arguments[_key3];\n      }\n\n      return checkType.apply(void 0, [false, props, propName, componentName, location].concat(rest));\n    }\n\n    chainedCheckType.isRequired = checkType.bind(null, true);\n    return chainedCheckType;\n  }\n\n  module.exports = deprecatedCreateStrictShapeTypeChecker;\n});","map":[[2,0,11,0],[4,0,13,0],[4,6,13,6,"invariant"],[4,15,13,15],[4,18,13,18,"require"],[4,29,13,25],[4,61,13,0],[6,0,14,0],[6,6,14,6,"merge"],[6,11,14,11],[6,14,14,14,"require"],[6,25,14,21],[6,53,14,0],[8,0,16,0],[8,11,16,9,"deprecatedCreateStrictShapeTypeChecker"],[8,49,16,0],[8,50,16,48,"shapeTypes"],[8,60,16,0],[8,62,18,35],[9,0,19,2],[9,13,19,11,"checkType"],[9,22,19,2],[9,23,20,4,"isRequired"],[9,33,19,2],[9,35,21,4,"props"],[9,40,19,2],[9,42,22,4,"propName"],[9,50,19,2],[9,52,23,4,"componentName"],[9,65,19,2],[9,67,24,4,"location"],[9,75,19,2],[9,77,26,4],[10,0,27,4],[10,10,27,8],[10,11,27,9,"props"],[10,16,27,14],[10,17,27,15,"propName"],[10,25,27,14],[10,26,27,4],[10,28,27,26],[11,0,28,6],[11,12,28,10,"isRequired"],[11,22,28,6],[11,24,28,22],[12,0,29,8,"invariant"],[12,10,29,8,"invariant"],[12,19,29,17],[12,20,30,10],[12,25,29,17],[12,27,31,10],[12,49,31,31,"propName"],[12,57,31,10],[12,95,32,17,"componentName"],[12,108,31,10],[12,116,29,17],[12,117,29,8],[13,0,34,7],[15,0,35,6],[16,0,36,5],[18,0,37,4],[18,10,37,10,"propValue"],[18,19,37,19],[18,22,37,22,"props"],[18,27,37,27],[18,28,37,28,"propName"],[18,36,37,27],[18,37,37,4],[19,0,38,4],[19,10,38,10,"propType"],[19,18,38,18],[19,21,38,21],[19,28,38,28,"propValue"],[19,37,38,4],[20,0,39,4],[20,10,39,10,"locationName"],[20,22,39,22],[20,25,39,25,"location"],[20,33,39,33],[20,37,39,37],[20,48,39,4],[22,0,40,4],[22,10,40,8,"propType"],[22,18,40,16],[22,23,40,21],[22,31,40,4],[22,33,40,31],[23,0,41,6,"invariant"],[23,8,41,6,"invariant"],[23,17,41,15],[23,18,42,8],[23,23,41,15],[23,25,43,8],[23,38,43,19,"locationName"],[23,50,43,8],[23,60,43,37,"propName"],[23,68,43,8],[23,87,43,61,"propType"],[23,95,43,8],[23,124,44,27,"componentName"],[23,137,43,8],[23,164,41,15],[23,165,41,6],[24,0,46,5],[26,0,49,4],[26,10,49,10,"allKeys"],[26,17,49,17],[26,20,49,20,"merge"],[26,25,49,25],[26,26,49,26,"props"],[26,31,49,31],[26,32,49,32,"propName"],[26,40,49,31],[26,41,49,25],[26,43,49,43,"shapeTypes"],[26,53,49,25],[26,54,49,4],[28,0,26,4],[28,40,25,7,"rest"],[28,44,26,4],[29,0,25,7,"rest"],[29,8,25,7,"rest"],[29,12,26,4],[30,0,26,4],[32,0,50,4],[32,11,50,9],[32,15,50,15,"key"],[32,20,50,4],[32,24,50,22,"allKeys"],[32,31,50,4],[32,33,50,31],[33,0,51,6],[33,12,51,12,"checker"],[33,19,51,19],[33,22,51,22,"shapeTypes"],[33,32,51,32],[33,33,51,33,"key"],[33,38,51,32],[33,39,51,6],[35,0,52,6],[35,12,52,10],[35,13,52,11,"checker"],[35,20,52,6],[35,22,52,20],[36,0,53,8,"invariant"],[36,10,53,8,"invariant"],[36,19,53,17],[36,20,54,10],[36,25,53,17],[36,27,55,10],[36,46,55,27,"propName"],[36,54,55,10],[36,68,55,45,"key"],[36,73,55,10],[36,96,55,68,"componentName"],[36,109,55,10],[36,119,56,12],[36,135,55,10],[36,138,57,12,"JSON"],[36,142,57,16],[36,143,57,17,"stringify"],[36,152,57,12],[36,153,57,27,"props"],[36,158,57,32],[36,159,57,33,"propName"],[36,167,57,32],[36,168,57,12],[36,170,57,44],[36,174,57,12],[36,176,57,50],[36,180,57,12],[36,181,55,10],[36,184,58,12],[36,200,55,10],[36,203,59,12,"JSON"],[36,207,59,16],[36,208,59,17,"stringify"],[36,217,59,12],[36,218,59,27,"Object"],[36,224,59,33],[36,225,59,34,"keys"],[36,229,59,27],[36,230,59,39,"shapeTypes"],[36,240,59,27],[36,241,59,12],[36,243,59,52],[36,247,59,12],[36,249,59,58],[36,253,59,12],[36,254,53,17],[36,255,53,8],[37,0,61,7],[39,0,62,6],[39,12,62,12,"error"],[39,17,62,17],[39,20,62,20,"checker"],[39,27,62,27],[39,33,62,20],[39,43,62,28,"propValue"],[39,52,62,20],[39,54,62,39,"key"],[39,59,62,20],[39,61,62,44,"componentName"],[39,74,62,20],[39,76,62,59,"location"],[39,84,62,20],[39,93,62,72,"rest"],[39,97,62,20],[39,99,62,6],[41,0,63,6],[41,12,63,10,"error"],[41,17,63,6],[41,19,63,17],[42,0,64,8,"invariant"],[42,10,64,8,"invariant"],[42,19,64,17],[42,20,65,10],[42,25,64,17],[42,27,66,10,"error"],[42,32,66,15],[42,33,66,16,"message"],[42,40,66,10],[42,43,67,12],[42,59,66,10],[42,62,68,12,"JSON"],[42,66,68,16],[42,67,68,17,"stringify"],[42,76,68,12],[42,77,68,27,"props"],[42,82,68,32],[42,83,68,33,"propName"],[42,91,68,32],[42,92,68,12],[42,94,68,44],[42,98,68,12],[42,100,68,50],[42,104,68,12],[42,105,64,17],[42,106,64,8],[43,0,70,7],[44,0,71,5],[45,0,72,3],[47,0,73,2],[47,13,73,11,"chainedCheckType"],[47,29,73,2],[47,30,74,4,"props"],[47,35,73,2],[47,37,75,4,"propName"],[47,45,73,2],[47,47,76,4,"componentName"],[47,60,73,2],[47,62,77,4,"location"],[47,70,73,2],[47,72,79,12],[48,0,79,12],[48,41,78,7,"rest"],[48,45,79,12],[49,0,78,7,"rest"],[49,8,78,7,"rest"],[49,12,79,12],[50,0,79,12],[52,0,80,4],[52,13,80,11,"checkType"],[52,22,80,20],[52,28,80,11],[52,38,80,21],[52,43,80,11],[52,45,80,28,"props"],[52,50,80,11],[52,52,80,35,"propName"],[52,60,80,11],[52,62,80,45,"componentName"],[52,75,80,11],[52,77,80,60,"location"],[52,85,80,11],[52,94,80,73,"rest"],[52,98,80,11],[52,100,80,4],[53,0,81,3],[55,0,82,2,"chainedCheckType"],[55,4,82,2,"chainedCheckType"],[55,20,82,18],[55,21,82,19,"isRequired"],[55,31,82,2],[55,34,82,32,"checkType"],[55,43,82,41],[55,44,82,42,"bind"],[55,48,82,32],[55,49,82,47],[55,53,82,32],[55,55,82,53],[55,59,82,32],[55,60,82,2],[56,0,83,2],[56,11,83,9,"chainedCheckType"],[56,27,83,2],[57,0,84,1],[59,0,86,0,"module"],[59,2,86,0,"module"],[59,8,86,6],[59,9,86,7,"exports"],[59,16,86,0],[59,19,86,17,"deprecatedCreateStrictShapeTypeChecker"],[59,57,86,0]]},"type":"js/module"}]}