{"dependencies":[{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/objectSpread","data":{"isAsync":false}},{"name":"Platform","data":{"isAsync":false}},{"name":"React","data":{"isAsync":false}},{"name":"prop-types","data":{"isAsync":false}},{"name":"ReactNative","data":{"isAsync":false}},{"name":"Touchable","data":{"isAsync":false}},{"name":"TouchableWithoutFeedback","data":{"isAsync":false}},{"name":"UIManager","data":{"isAsync":false}},{"name":"View","data":{"isAsync":false}},{"name":"create-react-class","data":{"isAsync":false}},{"name":"ensurePositiveDelayProps","data":{"isAsync":false}},{"name":"processColor","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _defineProperty = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/defineProperty\");\n\n  var _objectSpread = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/objectSpread\");\n\n  var Platform = _$$_REQUIRE(_dependencyMap[2], \"Platform\");\n\n  var React = _$$_REQUIRE(_dependencyMap[3], \"React\");\n\n  var PropTypes = _$$_REQUIRE(_dependencyMap[4], \"prop-types\");\n\n  var ReactNative = _$$_REQUIRE(_dependencyMap[5], \"ReactNative\");\n\n  var Touchable = _$$_REQUIRE(_dependencyMap[6], \"Touchable\");\n\n  var TouchableWithoutFeedback = _$$_REQUIRE(_dependencyMap[7], \"TouchableWithoutFeedback\");\n\n  var UIManager = _$$_REQUIRE(_dependencyMap[8], \"UIManager\");\n\n  var View = _$$_REQUIRE(_dependencyMap[9], \"View\");\n\n  var createReactClass = _$$_REQUIRE(_dependencyMap[10], \"create-react-class\");\n\n  var ensurePositiveDelayProps = _$$_REQUIRE(_dependencyMap[11], \"ensurePositiveDelayProps\");\n\n  var processColor = _$$_REQUIRE(_dependencyMap[12], \"processColor\");\n\n  var rippleBackgroundPropType = PropTypes.shape({\n    type: PropTypes.oneOf(['RippleAndroid']),\n    color: PropTypes.number,\n    borderless: PropTypes.bool\n  });\n  var themeAttributeBackgroundPropType = PropTypes.shape({\n    type: PropTypes.oneOf(['ThemeAttrAndroid']),\n    attribute: PropTypes.string.isRequired\n  });\n  var backgroundPropType = PropTypes.oneOfType([rippleBackgroundPropType, themeAttributeBackgroundPropType]);\n  var PRESS_RETENTION_OFFSET = {\n    top: 20,\n    left: 20,\n    right: 20,\n    bottom: 30\n  };\n  var TouchableNativeFeedback = createReactClass({\n    displayName: 'TouchableNativeFeedback',\n    propTypes: _objectSpread({}, TouchableWithoutFeedback.propTypes, {\n      background: backgroundPropType,\n      hasTVPreferredFocus: PropTypes.bool,\n      useForeground: PropTypes.bool\n    }),\n    statics: {\n      SelectableBackground: function SelectableBackground() {\n        return {\n          type: 'ThemeAttrAndroid',\n          attribute: 'selectableItemBackground'\n        };\n      },\n      SelectableBackgroundBorderless: function SelectableBackgroundBorderless() {\n        return {\n          type: 'ThemeAttrAndroid',\n          attribute: 'selectableItemBackgroundBorderless'\n        };\n      },\n      Ripple: function Ripple(color, borderless) {\n        return {\n          type: 'RippleAndroid',\n          color: processColor(color),\n          borderless: borderless\n        };\n      },\n      canUseNativeForeground: function canUseNativeForeground() {\n        return Platform.OS === 'android' && Platform.Version >= 23;\n      }\n    },\n    mixins: [Touchable.Mixin],\n    getDefaultProps: function getDefaultProps() {\n      return {\n        background: this.SelectableBackground()\n      };\n    },\n    getInitialState: function getInitialState() {\n      return this.touchableGetInitialState();\n    },\n    componentDidMount: function componentDidMount() {\n      ensurePositiveDelayProps(this.props);\n    },\n    UNSAFE_componentWillReceiveProps: function UNSAFE_componentWillReceiveProps(nextProps) {\n      ensurePositiveDelayProps(nextProps);\n    },\n    touchableHandleActivePressIn: function touchableHandleActivePressIn(e) {\n      this.props.onPressIn && this.props.onPressIn(e);\n\n      this._dispatchPressedStateChange(true);\n\n      if (this.pressInLocation) {\n        this._dispatchHotspotUpdate(this.pressInLocation.locationX, this.pressInLocation.locationY);\n      }\n    },\n    touchableHandleActivePressOut: function touchableHandleActivePressOut(e) {\n      this.props.onPressOut && this.props.onPressOut(e);\n\n      this._dispatchPressedStateChange(false);\n    },\n    touchableHandlePress: function touchableHandlePress(e) {\n      this.props.onPress && this.props.onPress(e);\n    },\n    touchableHandleLongPress: function touchableHandleLongPress(e) {\n      this.props.onLongPress && this.props.onLongPress(e);\n    },\n    touchableGetPressRectOffset: function touchableGetPressRectOffset() {\n      return this.props.pressRetentionOffset || PRESS_RETENTION_OFFSET;\n    },\n    touchableGetHitSlop: function touchableGetHitSlop() {\n      return this.props.hitSlop;\n    },\n    touchableGetHighlightDelayMS: function touchableGetHighlightDelayMS() {\n      return this.props.delayPressIn;\n    },\n    touchableGetLongPressDelayMS: function touchableGetLongPressDelayMS() {\n      return this.props.delayLongPress;\n    },\n    touchableGetPressOutDelayMS: function touchableGetPressOutDelayMS() {\n      return this.props.delayPressOut;\n    },\n    _handleResponderMove: function _handleResponderMove(e) {\n      this.touchableHandleResponderMove(e);\n\n      this._dispatchHotspotUpdate(e.nativeEvent.locationX, e.nativeEvent.locationY);\n    },\n    _dispatchHotspotUpdate: function _dispatchHotspotUpdate(destX, destY) {\n      UIManager.dispatchViewManagerCommand(ReactNative.findNodeHandle(this), UIManager.getViewManagerConfig('RCTView').Commands.hotspotUpdate, [destX || 0, destY || 0]);\n    },\n    _dispatchPressedStateChange: function _dispatchPressedStateChange(pressed) {\n      UIManager.dispatchViewManagerCommand(ReactNative.findNodeHandle(this), UIManager.getViewManagerConfig('RCTView').Commands.setPressed, [pressed]);\n    },\n    render: function render() {\n      var _objectSpread2;\n\n      var child = React.Children.only(this.props.children);\n      var children = child.props.children;\n\n      if (Touchable.TOUCH_TARGET_DEBUG && child.type === View) {\n        if (!Array.isArray(children)) {\n          children = [children];\n        }\n\n        children.push(Touchable.renderDebugView({\n          color: 'brown',\n          hitSlop: this.props.hitSlop\n        }));\n      }\n\n      if (this.props.useForeground && !TouchableNativeFeedback.canUseNativeForeground()) {\n        console.warn('Requested foreground ripple, but it is not available on this version of Android. ' + 'Consider calling TouchableNativeFeedback.canUseNativeForeground() and using a different ' + 'Touchable if the result is false.');\n      }\n\n      var drawableProp = this.props.useForeground && TouchableNativeFeedback.canUseNativeForeground() ? 'nativeForegroundAndroid' : 'nativeBackgroundAndroid';\n\n      var childProps = _objectSpread({}, child.props, (_objectSpread2 = {}, _defineProperty(_objectSpread2, drawableProp, this.props.background), _defineProperty(_objectSpread2, \"accessible\", this.props.accessible !== false), _defineProperty(_objectSpread2, \"accessibilityLabel\", this.props.accessibilityLabel), _defineProperty(_objectSpread2, \"accessibilityRole\", this.props.accessibilityRole), _defineProperty(_objectSpread2, \"accessibilityStates\", this.props.accessibilityStates), _defineProperty(_objectSpread2, \"children\", children), _defineProperty(_objectSpread2, \"testID\", this.props.testID), _defineProperty(_objectSpread2, \"onLayout\", this.props.onLayout), _defineProperty(_objectSpread2, \"hitSlop\", this.props.hitSlop), _defineProperty(_objectSpread2, \"isTVSelectable\", true), _defineProperty(_objectSpread2, \"hasTVPreferredFocus\", this.props.hasTVPreferredFocus), _defineProperty(_objectSpread2, \"onStartShouldSetResponder\", this.touchableHandleStartShouldSetResponder), _defineProperty(_objectSpread2, \"onResponderTerminationRequest\", this.touchableHandleResponderTerminationRequest), _defineProperty(_objectSpread2, \"onResponderGrant\", this.touchableHandleResponderGrant), _defineProperty(_objectSpread2, \"onResponderMove\", this._handleResponderMove), _defineProperty(_objectSpread2, \"onResponderRelease\", this.touchableHandleResponderRelease), _defineProperty(_objectSpread2, \"onResponderTerminate\", this.touchableHandleResponderTerminate), _objectSpread2));\n\n      return React.cloneElement(child, childProps);\n    }\n  });\n  module.exports = TouchableNativeFeedback;\n});","map":[[2,0,11,0],[8,0,13,0],[8,6,13,6,"Platform"],[8,14,13,14],[8,17,13,17,"require"],[8,28,13,24],[8,59,13,0],[10,0,14,0],[10,6,14,6,"React"],[10,11,14,11],[10,14,14,14,"require"],[10,25,14,21],[10,53,14,0],[12,0,15,0],[12,6,15,6,"PropTypes"],[12,15,15,15],[12,18,15,18,"require"],[12,29,15,25],[12,62,15,0],[14,0,16,0],[14,6,16,6,"ReactNative"],[14,17,16,17],[14,20,16,20,"require"],[14,31,16,27],[14,65,16,0],[16,0,17,0],[16,6,17,6,"Touchable"],[16,15,17,15],[16,18,17,18,"require"],[16,29,17,25],[16,61,17,0],[18,0,18,0],[18,6,18,6,"TouchableWithoutFeedback"],[18,30,18,30],[18,33,18,33,"require"],[18,44,18,40],[18,91,18,0],[20,0,19,0],[20,6,19,6,"UIManager"],[20,15,19,15],[20,18,19,18,"require"],[20,29,19,25],[20,61,19,0],[22,0,20,0],[22,6,20,6,"View"],[22,10,20,10],[22,13,20,13,"require"],[22,24,20,20],[22,51,20,0],[24,0,22,0],[24,6,22,6,"createReactClass"],[24,22,22,22],[24,25,22,25,"require"],[24,36,22,32],[24,78,22,0],[26,0,23,0],[26,6,23,6,"ensurePositiveDelayProps"],[26,30,23,30],[26,33,23,33,"require"],[26,44,23,40],[26,92,23,0],[28,0,24,0],[28,6,24,6,"processColor"],[28,18,24,18],[28,21,24,21,"require"],[28,32,24,28],[28,68,24,0],[30,0,28,0],[30,6,28,6,"rippleBackgroundPropType"],[30,30,28,30],[30,33,28,33,"PropTypes"],[30,42,28,42],[30,43,28,43,"shape"],[30,48,28,33],[30,49,28,49],[31,0,29,2,"type"],[31,4,29,2,"type"],[31,8,29,6],[31,10,29,8,"PropTypes"],[31,19,29,17],[31,20,29,18,"oneOf"],[31,25,29,8],[31,26,29,24],[31,27,29,25],[31,42,29,24],[31,43,29,8],[31,44,28,49],[32,0,30,2,"color"],[32,4,30,2,"color"],[32,9,30,7],[32,11,30,9,"PropTypes"],[32,20,30,18],[32,21,30,19,"number"],[32,27,28,49],[33,0,31,2,"borderless"],[33,4,31,2,"borderless"],[33,14,31,12],[33,16,31,14,"PropTypes"],[33,25,31,23],[33,26,31,24,"bool"],[34,0,28,49],[34,3,28,33],[34,4,28,0],[35,0,34,0],[35,6,34,6,"themeAttributeBackgroundPropType"],[35,38,34,38],[35,41,34,41,"PropTypes"],[35,50,34,50],[35,51,34,51,"shape"],[35,56,34,41],[35,57,34,57],[36,0,35,2,"type"],[36,4,35,2,"type"],[36,8,35,6],[36,10,35,8,"PropTypes"],[36,19,35,17],[36,20,35,18,"oneOf"],[36,25,35,8],[36,26,35,24],[36,27,35,25],[36,45,35,24],[36,46,35,8],[36,47,34,57],[37,0,36,2,"attribute"],[37,4,36,2,"attribute"],[37,13,36,11],[37,15,36,13,"PropTypes"],[37,24,36,22],[37,25,36,23,"string"],[37,31,36,13],[37,32,36,30,"isRequired"],[38,0,34,57],[38,3,34,41],[38,4,34,0],[39,0,39,0],[39,6,39,6,"backgroundPropType"],[39,24,39,24],[39,27,39,27,"PropTypes"],[39,36,39,36],[39,37,39,37,"oneOfType"],[39,46,39,27],[39,47,39,47],[39,48,40,2,"rippleBackgroundPropType"],[39,72,39,47],[39,74,41,2,"themeAttributeBackgroundPropType"],[39,106,39,47],[39,107,39,27],[39,108,39,0],[40,0,44,0],[40,6,44,6,"PRESS_RETENTION_OFFSET"],[40,28,44,28],[40,31,44,31],[41,0,44,32,"top"],[41,4,44,32,"top"],[41,7,44,35],[41,9,44,37],[41,11,44,31],[42,0,44,41,"left"],[42,4,44,41,"left"],[42,8,44,45],[42,10,44,47],[42,12,44,31],[43,0,44,51,"right"],[43,4,44,51,"right"],[43,9,44,56],[43,11,44,58],[43,13,44,31],[44,0,44,62,"bottom"],[44,4,44,62,"bottom"],[44,10,44,68],[44,12,44,70],[45,0,44,31],[45,3,44,0],[46,0,75,0],[46,6,75,6,"TouchableNativeFeedback"],[46,29,75,29],[46,32,75,32,"createReactClass"],[46,48,75,48],[46,49,75,49],[47,0,76,2,"displayName"],[47,4,76,2,"displayName"],[47,15,76,13],[47,17,76,15],[47,42,75,49],[48,0,77,2,"propTypes"],[48,4,77,2,"propTypes"],[48,13,77,11],[48,33,81,7,"TouchableWithoutFeedback"],[48,57,81,31],[48,58,81,32,"propTypes"],[48,67,77,11],[49,0,89,4,"background"],[49,6,89,4,"background"],[49,16,89,14],[49,18,89,16,"backgroundPropType"],[49,36,77,11],[50,0,94,4,"hasTVPreferredFocus"],[50,6,94,4,"hasTVPreferredFocus"],[50,25,94,23],[50,27,94,25,"PropTypes"],[50,36,94,34],[50,37,94,35,"bool"],[50,41,77,11],[51,0,105,4,"useForeground"],[51,6,105,4,"useForeground"],[51,19,105,17],[51,21,105,19,"PropTypes"],[51,30,105,28],[51,31,105,29,"bool"],[52,0,77,11],[52,6,75,49],[53,0,108,2,"statics"],[53,4,108,2,"statics"],[53,11,108,9],[53,13,108,11],[54,0,113,4,"SelectableBackground"],[54,6,113,4,"SelectableBackground"],[54,26,113,24],[54,28,113,26],[54,60,116,6],[55,0,117,6],[55,15,117,13],[56,0,117,14,"type"],[56,10,117,14,"type"],[56,14,117,18],[56,16,117,20],[56,34,117,13],[57,0,117,40,"attribute"],[57,10,117,40,"attribute"],[57,19,117,49],[57,21,117,51],[58,0,117,13],[58,9,117,6],[59,0,118,5],[59,7,108,11],[60,0,124,4,"SelectableBackgroundBorderless"],[60,6,124,4,"SelectableBackgroundBorderless"],[60,36,124,34],[60,38,124,36],[60,80,127,6],[61,0,128,6],[61,15,128,13],[62,0,129,8,"type"],[62,10,129,8,"type"],[62,14,129,12],[62,16,129,14],[62,34,128,13],[63,0,130,8,"attribute"],[63,10,130,8,"attribute"],[63,19,130,17],[63,21,130,19],[64,0,128,13],[64,9,128,6],[65,0,132,5],[65,7,108,11],[66,0,143,4,"Ripple"],[66,6,143,4,"Ripple"],[66,12,143,10],[66,14,143,12],[66,30,144,6,"color"],[66,35,143,12],[66,37,145,6,"borderless"],[66,47,143,12],[66,49,150,6],[67,0,151,6],[67,15,151,13],[68,0,152,8,"type"],[68,10,152,8,"type"],[68,14,152,12],[68,16,152,14],[68,31,151,13],[69,0,153,8,"color"],[69,10,153,8,"color"],[69,15,153,13],[69,17,153,15,"processColor"],[69,29,153,27],[69,30,153,28,"color"],[69,35,153,27],[69,36,151,13],[70,0,154,8,"borderless"],[70,10,154,8,"borderless"],[70,20,154,18],[70,22,154,20,"borderless"],[71,0,151,13],[71,9,151,6],[72,0,156,5],[72,7,108,11],[73,0,158,4,"canUseNativeForeground"],[73,6,158,4,"canUseNativeForeground"],[73,28,158,26],[73,30,158,28],[73,64,158,48],[74,0,159,6],[74,15,159,13,"Platform"],[74,23,159,21],[74,24,159,22,"OS"],[74,26,159,13],[74,31,159,29],[74,40,159,13],[74,44,159,42,"Platform"],[74,52,159,50],[74,53,159,51,"Version"],[74,60,159,42],[74,64,159,62],[74,66,159,6],[75,0,160,5],[76,0,108,11],[76,5,75,49],[77,0,163,2,"mixins"],[77,4,163,2,"mixins"],[77,10,163,8],[77,12,163,10],[77,13,163,11,"Touchable"],[77,22,163,20],[77,23,163,21,"Mixin"],[77,28,163,10],[77,29,75,49],[78,0,165,2,"getDefaultProps"],[78,4,165,2,"getDefaultProps"],[78,19,165,17],[78,21,165,19],[78,48,165,30],[79,0,166,4],[79,13,166,11],[80,0,167,6,"background"],[80,8,167,6,"background"],[80,18,167,16],[80,20,167,18],[80,25,167,23,"SelectableBackground"],[80,45,167,18],[81,0,166,11],[81,7,166,4],[82,0,169,3],[82,5,75,49],[83,0,171,2,"getInitialState"],[83,4,171,2,"getInitialState"],[83,19,171,17],[83,21,171,19],[83,48,171,30],[84,0,172,4],[84,13,172,11],[84,18,172,16,"touchableGetInitialState"],[84,42,172,11],[84,44,172,4],[85,0,173,3],[85,5,75,49],[86,0,175,2,"componentDidMount"],[86,4,175,2,"componentDidMount"],[86,21,175,19],[86,23,175,21],[86,52,175,32],[87,0,176,4,"ensurePositiveDelayProps"],[87,6,176,4,"ensurePositiveDelayProps"],[87,30,176,28],[87,31,176,29],[87,36,176,34,"props"],[87,41,176,28],[87,42,176,4],[88,0,177,3],[88,5,75,49],[89,0,179,2,"UNSAFE_componentWillReceiveProps"],[89,4,179,2,"UNSAFE_componentWillReceiveProps"],[89,36,179,34],[89,38,179,36],[89,80,179,45,"nextProps"],[89,89,179,36],[89,91,179,56],[90,0,180,4,"ensurePositiveDelayProps"],[90,6,180,4,"ensurePositiveDelayProps"],[90,30,180,28],[90,31,180,29,"nextProps"],[90,40,180,28],[90,41,180,4],[91,0,181,3],[91,5,75,49],[92,0,187,2,"touchableHandleActivePressIn"],[92,4,187,2,"touchableHandleActivePressIn"],[92,32,187,30],[92,34,187,32],[92,72,187,41,"e"],[92,73,187,32],[92,75,187,56],[93,0,188,4],[93,11,188,9,"props"],[93,16,188,4],[93,17,188,15,"onPressIn"],[93,26,188,4],[93,30,188,28],[93,35,188,33,"props"],[93,40,188,28],[93,41,188,39,"onPressIn"],[93,50,188,28],[93,51,188,49,"e"],[93,52,188,28],[93,53,188,4],[95,0,189,4],[95,11,189,9,"_dispatchPressedStateChange"],[95,38,189,4],[95,39,189,37],[95,43,189,4],[97,0,193,4],[97,10,193,8],[97,15,193,13,"pressInLocation"],[97,30,193,4],[97,32,193,30],[98,0,194,6],[98,13,194,11,"_dispatchHotspotUpdate"],[98,35,194,6],[98,36,198,8],[98,41,198,13,"pressInLocation"],[98,56,198,8],[98,57,198,29,"locationX"],[98,66,194,6],[98,68,202,8],[98,73,202,13,"pressInLocation"],[98,88,202,8],[98,89,202,29,"locationY"],[98,98,194,6],[99,0,204,5],[100,0,205,3],[100,5,75,49],[101,0,207,2,"touchableHandleActivePressOut"],[101,4,207,2,"touchableHandleActivePressOut"],[101,33,207,31],[101,35,207,33],[101,74,207,42,"e"],[101,75,207,33],[101,77,207,57],[102,0,208,4],[102,11,208,9,"props"],[102,16,208,4],[102,17,208,15,"onPressOut"],[102,27,208,4],[102,31,208,29],[102,36,208,34,"props"],[102,41,208,29],[102,42,208,40,"onPressOut"],[102,52,208,29],[102,53,208,51,"e"],[102,54,208,29],[102,55,208,4],[104,0,209,4],[104,11,209,9,"_dispatchPressedStateChange"],[104,38,209,4],[104,39,209,37],[104,44,209,4],[105,0,210,3],[105,5,75,49],[106,0,212,2,"touchableHandlePress"],[106,4,212,2,"touchableHandlePress"],[106,24,212,22],[106,26,212,24],[106,56,212,33,"e"],[106,57,212,24],[106,59,212,48],[107,0,213,4],[107,11,213,9,"props"],[107,16,213,4],[107,17,213,15,"onPress"],[107,24,213,4],[107,28,213,26],[107,33,213,31,"props"],[107,38,213,26],[107,39,213,37,"onPress"],[107,46,213,26],[107,47,213,45,"e"],[107,48,213,26],[107,49,213,4],[108,0,214,3],[108,5,75,49],[109,0,216,2,"touchableHandleLongPress"],[109,4,216,2,"touchableHandleLongPress"],[109,28,216,26],[109,30,216,28],[109,64,216,37,"e"],[109,65,216,28],[109,67,216,52],[110,0,217,4],[110,11,217,9,"props"],[110,16,217,4],[110,17,217,15,"onLongPress"],[110,28,217,4],[110,32,217,30],[110,37,217,35,"props"],[110,42,217,30],[110,43,217,41,"onLongPress"],[110,54,217,30],[110,55,217,53,"e"],[110,56,217,30],[110,57,217,4],[111,0,218,3],[111,5,75,49],[112,0,220,2,"touchableGetPressRectOffset"],[112,4,220,2,"touchableGetPressRectOffset"],[112,31,220,29],[112,33,220,31],[112,72,220,42],[113,0,222,4],[113,13,222,11],[113,18,222,16,"props"],[113,23,222,11],[113,24,222,22,"pressRetentionOffset"],[113,44,222,11],[113,48,222,46,"PRESS_RETENTION_OFFSET"],[113,70,222,4],[114,0,223,3],[114,5,75,49],[115,0,225,2,"touchableGetHitSlop"],[115,4,225,2,"touchableGetHitSlop"],[115,23,225,21],[115,25,225,23],[115,56,225,34],[116,0,226,4],[116,13,226,11],[116,18,226,16,"props"],[116,23,226,11],[116,24,226,22,"hitSlop"],[116,31,226,4],[117,0,227,3],[117,5,75,49],[118,0,229,2,"touchableGetHighlightDelayMS"],[118,4,229,2,"touchableGetHighlightDelayMS"],[118,32,229,30],[118,34,229,32],[118,74,229,43],[119,0,230,4],[119,13,230,11],[119,18,230,16,"props"],[119,23,230,11],[119,24,230,22,"delayPressIn"],[119,36,230,4],[120,0,231,3],[120,5,75,49],[121,0,233,2,"touchableGetLongPressDelayMS"],[121,4,233,2,"touchableGetLongPressDelayMS"],[121,32,233,30],[121,34,233,32],[121,74,233,43],[122,0,234,4],[122,13,234,11],[122,18,234,16,"props"],[122,23,234,11],[122,24,234,22,"delayLongPress"],[122,38,234,4],[123,0,235,3],[123,5,75,49],[124,0,237,2,"touchableGetPressOutDelayMS"],[124,4,237,2,"touchableGetPressOutDelayMS"],[124,31,237,29],[124,33,237,31],[124,72,237,42],[125,0,238,4],[125,13,238,11],[125,18,238,16,"props"],[125,23,238,11],[125,24,238,22,"delayPressOut"],[125,37,238,4],[126,0,239,3],[126,5,75,49],[127,0,241,2,"_handleResponderMove"],[127,4,241,2,"_handleResponderMove"],[127,24,241,22],[127,26,241,24],[127,56,241,33,"e"],[127,57,241,24],[127,59,241,36],[128,0,242,4],[128,11,242,9,"touchableHandleResponderMove"],[128,39,242,4],[128,40,242,38,"e"],[128,41,242,4],[130,0,243,4],[130,11,243,9,"_dispatchHotspotUpdate"],[130,33,243,4],[130,34,244,6,"e"],[130,35,244,7],[130,36,244,8,"nativeEvent"],[130,47,244,6],[130,48,244,20,"locationX"],[130,57,243,4],[130,59,245,6,"e"],[130,60,245,7],[130,61,245,8,"nativeEvent"],[130,72,245,6],[130,73,245,20,"locationY"],[130,82,243,4],[131,0,247,3],[131,5,75,49],[132,0,249,2,"_dispatchHotspotUpdate"],[132,4,249,2,"_dispatchHotspotUpdate"],[132,26,249,24],[132,28,249,26],[132,60,249,35,"destX"],[132,65,249,26],[132,67,249,42,"destY"],[132,72,249,26],[132,74,249,49],[133,0,250,4,"UIManager"],[133,6,250,4,"UIManager"],[133,15,250,13],[133,16,250,14,"dispatchViewManagerCommand"],[133,42,250,4],[133,43,251,6,"ReactNative"],[133,54,251,17],[133,55,251,18,"findNodeHandle"],[133,69,251,6],[133,70,251,33],[133,74,251,6],[133,75,250,4],[133,77,252,6,"UIManager"],[133,86,252,15],[133,87,252,16,"getViewManagerConfig"],[133,107,252,6],[133,108,252,37],[133,117,252,6],[133,119,252,48,"Commands"],[133,127,252,6],[133,128,252,57,"hotspotUpdate"],[133,141,250,4],[133,143,253,6],[133,144,253,7,"destX"],[133,149,253,12],[133,153,253,16],[133,154,253,6],[133,156,253,19,"destY"],[133,161,253,24],[133,165,253,28],[133,166,253,6],[133,167,250,4],[134,0,255,3],[134,5,75,49],[135,0,257,2,"_dispatchPressedStateChange"],[135,4,257,2,"_dispatchPressedStateChange"],[135,31,257,29],[135,33,257,31],[135,70,257,40,"pressed"],[135,77,257,31],[135,79,257,49],[136,0,258,4,"UIManager"],[136,6,258,4,"UIManager"],[136,15,258,13],[136,16,258,14,"dispatchViewManagerCommand"],[136,42,258,4],[136,43,259,6,"ReactNative"],[136,54,259,17],[136,55,259,18,"findNodeHandle"],[136,69,259,6],[136,70,259,33],[136,74,259,6],[136,75,258,4],[136,77,260,6,"UIManager"],[136,86,260,15],[136,87,260,16,"getViewManagerConfig"],[136,107,260,6],[136,108,260,37],[136,117,260,6],[136,119,260,48,"Commands"],[136,127,260,6],[136,128,260,57,"setPressed"],[136,138,258,4],[136,140,261,6],[136,141,261,7,"pressed"],[136,148,261,6],[136,149,258,4],[137,0,263,3],[137,5,75,49],[138,0,265,2,"render"],[138,4,265,2,"render"],[138,10,265,8],[138,12,265,10],[138,30,265,21],[139,0,265,21],[141,0,266,4],[141,10,266,10,"child"],[141,15,266,15],[141,18,266,18,"React"],[141,23,266,23],[141,24,266,24,"Children"],[141,32,266,18],[141,33,266,33,"only"],[141,37,266,18],[141,38,266,38],[141,43,266,43,"props"],[141,48,266,38],[141,49,266,49,"children"],[141,57,266,18],[141,58,266,4],[142,0,267,4],[142,10,267,8,"children"],[142,18,267,16],[142,21,267,19,"child"],[142,26,267,24],[142,27,267,25,"props"],[142,32,267,19],[142,33,267,31,"children"],[142,41,267,4],[144,0,268,4],[144,10,268,8,"Touchable"],[144,19,268,17],[144,20,268,18,"TOUCH_TARGET_DEBUG"],[144,38,268,8],[144,42,268,40,"child"],[144,47,268,45],[144,48,268,46,"type"],[144,52,268,40],[144,57,268,55,"View"],[144,61,268,4],[144,63,268,61],[145,0,269,6],[145,12,269,10],[145,13,269,11,"Array"],[145,18,269,16],[145,19,269,17,"isArray"],[145,26,269,11],[145,27,269,25,"children"],[145,35,269,11],[145,36,269,6],[145,38,269,36],[146,0,270,8,"children"],[146,10,270,8,"children"],[146,18,270,16],[146,21,270,19],[146,22,270,20,"children"],[146,30,270,19],[146,31,270,8],[147,0,271,7],[149,0,272,6,"children"],[149,8,272,6,"children"],[149,16,272,14],[149,17,272,15,"push"],[149,21,272,6],[149,22,273,8,"Touchable"],[149,31,273,17],[149,32,273,18,"renderDebugView"],[149,47,273,8],[149,48,273,34],[150,0,274,10,"color"],[150,10,274,10,"color"],[150,15,274,15],[150,17,274,17],[150,24,273,34],[151,0,275,10,"hitSlop"],[151,10,275,10,"hitSlop"],[151,17,275,17],[151,19,275,19],[151,24,275,24,"props"],[151,29,275,19],[151,30,275,30,"hitSlop"],[152,0,273,34],[152,9,273,8],[152,10,272,6],[153,0,278,5],[155,0,279,4],[155,10,280,6],[155,15,280,11,"props"],[155,20,280,6],[155,21,280,17,"useForeground"],[155,34,280,6],[155,38,281,6],[155,39,281,7,"TouchableNativeFeedback"],[155,62,281,30],[155,63,281,31,"canUseNativeForeground"],[155,85,281,7],[155,87,279,4],[155,89,282,6],[156,0,283,6,"console"],[156,8,283,6,"console"],[156,15,283,13],[156,16,283,14,"warn"],[156,20,283,6],[156,21,284,8],[156,107,285,10],[156,197,284,8],[156,200,286,10],[156,235,283,6],[157,0,288,5],[159,0,289,4],[159,10,289,10,"drawableProp"],[159,22,289,22],[159,25,290,6],[159,30,290,11,"props"],[159,35,290,6],[159,36,290,17,"useForeground"],[159,49,290,6],[159,53,291,6,"TouchableNativeFeedback"],[159,76,291,29],[159,77,291,30,"canUseNativeForeground"],[159,99,291,6],[159,101,290,6],[159,104,292,10],[159,129,290,6],[159,132,293,10],[159,157,289,4],[161,0,294,4],[161,10,294,10,"childProps"],[161,20,294,20],[161,41,295,9,"child"],[161,46,295,14],[161,47,295,15,"props"],[161,52,294,20],[161,108,296,7,"drawableProp"],[161,120,294,20],[161,122,296,22],[161,127,296,27,"props"],[161,132,296,22],[161,133,296,33,"background"],[161,143,294,20],[161,192,297,18],[161,197,297,23,"props"],[161,202,297,18],[161,203,297,29,"accessible"],[161,213,297,18],[161,218,297,44],[161,223,294,20],[161,280,298,26],[161,285,298,31,"props"],[161,290,298,26],[161,291,298,37,"accessibilityLabel"],[161,309,294,20],[161,365,299,25],[161,370,299,30,"props"],[161,375,299,25],[161,376,299,36,"accessibilityRole"],[161,393,294,20],[161,451,300,27],[161,456,300,32,"props"],[161,461,300,27],[161,462,300,38,"accessibilityStates"],[161,481,294,20],[161,528,301,6,"children"],[161,536,294,20],[161,581,302,14],[161,586,302,19,"props"],[161,591,302,14],[161,592,302,25,"testID"],[161,598,294,20],[161,645,303,16],[161,650,303,21,"props"],[161,655,303,16],[161,656,303,27,"onLayout"],[161,664,294,20],[161,710,304,15],[161,715,304,20,"props"],[161,720,304,15],[161,721,304,26,"hitSlop"],[161,728,294,20],[161,781,305,22],[161,785,294,20],[161,843,306,27],[161,848,306,32,"props"],[161,853,306,27],[161,854,306,38,"hasTVPreferredFocus"],[161,873,294,20],[161,937,307,33],[161,942,307,38,"touchableHandleStartShouldSetResponder"],[161,980,294,20],[161,1048,308,37],[161,1053,309,9,"touchableHandleResponderTerminationRequest"],[161,1095,294,20],[161,1150,310,24],[161,1155,310,29,"touchableHandleResponderGrant"],[161,1184,294,20],[161,1238,311,23],[161,1243,311,28,"_handleResponderMove"],[161,1263,294,20],[161,1320,312,26],[161,1325,312,31,"touchableHandleResponderRelease"],[161,1356,294,20],[161,1415,313,28],[161,1420,313,33,"touchableHandleResponderTerminate"],[161,1453,294,20],[161,1472,294,4],[163,0,319,4],[163,13,319,11,"React"],[163,18,319,16],[163,19,319,17,"cloneElement"],[163,31,319,11],[163,32,319,30,"child"],[163,37,319,11],[163,39,319,37,"childProps"],[163,49,319,11],[163,50,319,4],[164,0,320,3],[165,0,75,49],[165,3,75,48],[165,4,75,0],[166,0,323,0,"module"],[166,2,323,0,"module"],[166,8,323,6],[166,9,323,7,"exports"],[166,16,323,0],[166,19,323,17,"TouchableNativeFeedback"],[166,42,323,0]]},"type":"js/module"}]}