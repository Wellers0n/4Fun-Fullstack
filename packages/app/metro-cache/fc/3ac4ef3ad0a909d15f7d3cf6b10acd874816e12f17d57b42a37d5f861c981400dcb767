{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/objectSpread","data":{"isAsync":false}},{"name":"./utils/invariant","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/objectSpread\"));\n\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"./utils/invariant\"));\n\n  var StateUtils = {\n    get: function get(state, key) {\n      return state.routes.find(function (route) {\n        return route.key === key;\n      }) || null;\n    },\n    indexOf: function indexOf(state, key) {\n      return state.routes.findIndex(function (route) {\n        return route.key === key;\n      });\n    },\n    has: function has(state, key) {\n      return !!state.routes.some(function (route) {\n        return route.key === key;\n      });\n    },\n    push: function push(state, route) {\n      (0, _invariant.default)(StateUtils.indexOf(state, route.key) === -1, 'should not push route with duplicated key %s', route.key);\n      var routes = state.routes.slice();\n      routes.push(route);\n      return (0, _objectSpread2.default)({}, state, {\n        index: routes.length - 1,\n        routes: routes\n      });\n    },\n    pop: function pop(state) {\n      if (state.index <= 0) {\n        return state;\n      }\n\n      var routes = state.routes.slice(0, -1);\n      return (0, _objectSpread2.default)({}, state, {\n        index: routes.length - 1,\n        routes: routes\n      });\n    },\n    jumpToIndex: function jumpToIndex(state, index) {\n      if (index === state.index) {\n        return state;\n      }\n\n      (0, _invariant.default)(!!state.routes[index], 'invalid index %s to jump to', index);\n      return (0, _objectSpread2.default)({}, state, {\n        index: index\n      });\n    },\n    jumpTo: function jumpTo(state, key) {\n      var index = StateUtils.indexOf(state, key);\n      return StateUtils.jumpToIndex(state, index);\n    },\n    back: function back(state) {\n      var index = state.index - 1;\n      var route = state.routes[index];\n      return route ? StateUtils.jumpToIndex(state, index) : state;\n    },\n    forward: function forward(state) {\n      var index = state.index + 1;\n      var route = state.routes[index];\n      return route ? StateUtils.jumpToIndex(state, index) : state;\n    },\n    replaceAndPrune: function replaceAndPrune(state, key, route) {\n      var index = StateUtils.indexOf(state, key);\n      var replaced = StateUtils.replaceAtIndex(state, index, route);\n      return (0, _objectSpread2.default)({}, replaced, {\n        routes: replaced.routes.slice(0, index + 1)\n      });\n    },\n    replaceAt: function replaceAt(state, key, route) {\n      var preserveIndex = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      var index = StateUtils.indexOf(state, key);\n      var nextIndex = preserveIndex ? state.index : index;\n      var nextState = StateUtils.replaceAtIndex(state, index, route);\n      nextState.index = nextIndex;\n      return nextState;\n    },\n    replaceAtIndex: function replaceAtIndex(state, index, route) {\n      (0, _invariant.default)(!!state.routes[index], 'invalid index %s for replacing route %s', index, route.key);\n\n      if (state.routes[index] === route && index === state.index) {\n        return state;\n      }\n\n      var routes = state.routes.slice();\n      routes[index] = route;\n      return (0, _objectSpread2.default)({}, state, {\n        index: index,\n        routes: routes\n      });\n    },\n    reset: function reset(state, routes, index) {\n      (0, _invariant.default)(routes.length && Array.isArray(routes), 'invalid routes to replace');\n      var nextIndex = index === undefined ? routes.length - 1 : index;\n\n      if (state.routes.length === routes.length && state.index === nextIndex) {\n        var compare = function compare(route, ii) {\n          return routes[ii] === route;\n        };\n\n        if (state.routes.every(compare)) {\n          return state;\n        }\n      }\n\n      (0, _invariant.default)(!!routes[nextIndex], 'invalid index %s to reset', nextIndex);\n      return (0, _objectSpread2.default)({}, state, {\n        index: nextIndex,\n        routes: routes\n      });\n    }\n  };\n  var _default = StateUtils;\n  exports.default = _default;\n});","map":[[9,0,1,0],[11,0,1,63],[13,0,1,104],[13,6,1,108,"StateUtils"],[13,16,1,118],[13,19,1,119],[14,0,1,120,"get"],[14,4,1,120,"get"],[14,7,1,123],[14,9,1,124],[14,18,1,133,"get"],[14,21,1,124],[14,22,1,137,"state"],[14,27,1,124],[14,29,1,143,"key"],[14,32,1,124],[14,34,1,147],[15,0,1,148],[15,13,1,155,"state"],[15,18,1,160],[15,19,1,161,"routes"],[15,25,1,155],[15,26,1,168,"find"],[15,30,1,155],[15,31,1,173],[15,41,1,182,"route"],[15,46,1,173],[15,48,1,188],[16,0,1,189],[16,15,1,196,"route"],[16,20,1,201],[16,21,1,202,"key"],[16,24,1,196],[16,29,1,208,"key"],[16,32,1,189],[17,0,1,213],[17,7,1,155],[17,12,1,216],[17,16,1,148],[18,0,1,222],[18,5,1,119],[19,0,1,223,"indexOf"],[19,4,1,223,"indexOf"],[19,11,1,230],[19,13,1,231],[19,22,1,240,"indexOf"],[19,29,1,231],[19,30,1,248,"state"],[19,35,1,231],[19,37,1,254,"key"],[19,40,1,231],[19,42,1,258],[20,0,1,259],[20,13,1,266,"state"],[20,18,1,271],[20,19,1,272,"routes"],[20,25,1,266],[20,26,1,279,"findIndex"],[20,35,1,266],[20,36,1,289],[20,46,1,298,"route"],[20,51,1,289],[20,53,1,304],[21,0,1,305],[21,15,1,312,"route"],[21,20,1,317],[21,21,1,318,"key"],[21,24,1,312],[21,29,1,324,"key"],[21,32,1,305],[22,0,1,329],[22,7,1,266],[22,8,1,259],[23,0,1,332],[23,5,1,119],[24,0,1,333,"has"],[24,4,1,333,"has"],[24,7,1,336],[24,9,1,337],[24,18,1,346,"has"],[24,21,1,337],[24,22,1,350,"state"],[24,27,1,337],[24,29,1,356,"key"],[24,32,1,337],[24,34,1,360],[25,0,1,361],[25,13,1,367],[25,14,1,368],[25,15,1,369,"state"],[25,20,1,374],[25,21,1,375,"routes"],[25,27,1,369],[25,28,1,382,"some"],[25,32,1,369],[25,33,1,387],[25,43,1,396,"route"],[25,48,1,387],[25,50,1,402],[26,0,1,403],[26,15,1,410,"route"],[26,20,1,415],[26,21,1,416,"key"],[26,24,1,410],[26,29,1,422,"key"],[26,32,1,403],[27,0,1,427],[27,7,1,369],[27,8,1,361],[28,0,1,430],[28,5,1,119],[29,0,1,431,"push"],[29,4,1,431,"push"],[29,8,1,435],[29,10,1,436],[29,19,1,445,"push"],[29,23,1,436],[29,24,1,450,"state"],[29,29,1,436],[29,31,1,456,"route"],[29,36,1,436],[29,38,1,462],[30,0,1,463],[30,30,1,473,"StateUtils"],[30,40,1,483],[30,41,1,484,"indexOf"],[30,48,1,473],[30,49,1,492,"state"],[30,54,1,473],[30,56,1,498,"route"],[30,61,1,503],[30,62,1,504,"key"],[30,65,1,473],[30,71,1,511],[30,72,1,512],[30,73,1,463],[30,75,1,514],[30,121,1,463],[30,123,1,561,"route"],[30,128,1,566],[30,129,1,567,"key"],[30,132,1,463],[31,0,1,572],[31,10,1,576,"routes"],[31,16,1,582],[31,19,1,583,"state"],[31,24,1,588],[31,25,1,589,"routes"],[31,31,1,583],[31,32,1,596,"slice"],[31,37,1,583],[31,39,1,572],[32,0,1,604,"routes"],[32,6,1,604,"routes"],[32,12,1,610],[32,13,1,611,"push"],[32,17,1,604],[32,18,1,616,"route"],[32,23,1,604],[33,0,1,623],[33,13,1,630],[33,41,1,644],[33,43,1,630],[33,45,1,647,"state"],[33,50,1,630],[33,52,1,653],[34,0,1,654,"index"],[34,8,1,654,"index"],[34,13,1,659],[34,15,1,660,"routes"],[34,21,1,666],[34,22,1,667,"length"],[34,28,1,660],[34,31,1,674],[34,32,1,653],[35,0,1,676,"routes"],[35,8,1,676,"routes"],[35,14,1,682],[35,16,1,683,"routes"],[36,0,1,653],[36,7,1,630],[36,8,1,623],[37,0,1,693],[37,5,1,119],[38,0,1,694,"pop"],[38,4,1,694,"pop"],[38,7,1,697],[38,9,1,698],[38,18,1,707,"pop"],[38,21,1,698],[38,22,1,711,"state"],[38,27,1,698],[38,29,1,717],[39,0,1,718],[39,10,1,721,"state"],[39,15,1,726],[39,16,1,727,"index"],[39,21,1,721],[39,25,1,734],[39,26,1,718],[39,28,1,736],[40,0,1,737],[40,15,1,744,"state"],[40,20,1,737],[41,0,1,751],[43,0,1,751],[43,10,1,755,"routes"],[43,16,1,761],[43,19,1,762,"state"],[43,24,1,767],[43,25,1,768,"routes"],[43,31,1,762],[43,32,1,775,"slice"],[43,37,1,762],[43,38,1,781],[43,39,1,762],[43,41,1,783],[43,42,1,784],[43,43,1,762],[43,44,1,751],[44,0,1,787],[44,13,1,794],[44,41,1,808],[44,43,1,794],[44,45,1,811,"state"],[44,50,1,794],[44,52,1,817],[45,0,1,818,"index"],[45,8,1,818,"index"],[45,13,1,823],[45,15,1,824,"routes"],[45,21,1,830],[45,22,1,831,"length"],[45,28,1,824],[45,31,1,838],[45,32,1,817],[46,0,1,840,"routes"],[46,8,1,840,"routes"],[46,14,1,846],[46,16,1,847,"routes"],[47,0,1,817],[47,7,1,794],[47,8,1,787],[48,0,1,857],[48,5,1,119],[49,0,1,858,"jumpToIndex"],[49,4,1,858,"jumpToIndex"],[49,15,1,869],[49,17,1,870],[49,26,1,879,"jumpToIndex"],[49,37,1,870],[49,38,1,891,"state"],[49,43,1,870],[49,45,1,897,"index"],[49,50,1,870],[49,52,1,903],[50,0,1,904],[50,10,1,907,"index"],[50,15,1,912],[50,20,1,915,"state"],[50,25,1,920],[50,26,1,921,"index"],[50,31,1,904],[50,33,1,927],[51,0,1,928],[51,15,1,935,"state"],[51,20,1,928],[52,0,1,942],[54,0,1,942],[54,30,1,952],[54,31,1,953],[54,32,1,954,"state"],[54,37,1,959],[54,38,1,960,"routes"],[54,44,1,954],[54,45,1,967,"index"],[54,50,1,954],[54,51,1,942],[54,53,1,974],[54,82,1,942],[54,84,1,1004,"index"],[54,89,1,942],[55,0,1,1011],[55,13,1,1018],[55,41,1,1032],[55,43,1,1018],[55,45,1,1035,"state"],[55,50,1,1018],[55,52,1,1041],[56,0,1,1042,"index"],[56,8,1,1042,"index"],[56,13,1,1047],[56,15,1,1048,"index"],[57,0,1,1041],[57,7,1,1018],[57,8,1,1011],[58,0,1,1057],[58,5,1,119],[59,0,1,1058,"jumpTo"],[59,4,1,1058,"jumpTo"],[59,10,1,1064],[59,12,1,1065],[59,21,1,1074,"jumpTo"],[59,27,1,1065],[59,28,1,1081,"state"],[59,33,1,1065],[59,35,1,1087,"key"],[59,38,1,1065],[59,40,1,1091],[60,0,1,1092],[60,10,1,1096,"index"],[60,15,1,1101],[60,18,1,1102,"StateUtils"],[60,28,1,1112],[60,29,1,1113,"indexOf"],[60,36,1,1102],[60,37,1,1121,"state"],[60,42,1,1102],[60,44,1,1127,"key"],[60,47,1,1102],[60,48,1,1092],[61,0,1,1132],[61,13,1,1139,"StateUtils"],[61,23,1,1149],[61,24,1,1150,"jumpToIndex"],[61,35,1,1139],[61,36,1,1162,"state"],[61,41,1,1139],[61,43,1,1168,"index"],[61,48,1,1139],[61,49,1,1132],[62,0,1,1176],[62,5,1,119],[63,0,1,1177,"back"],[63,4,1,1177,"back"],[63,8,1,1181],[63,10,1,1182],[63,19,1,1191,"back"],[63,23,1,1182],[63,24,1,1196,"state"],[63,29,1,1182],[63,31,1,1202],[64,0,1,1203],[64,10,1,1207,"index"],[64,15,1,1212],[64,18,1,1213,"state"],[64,23,1,1218],[64,24,1,1219,"index"],[64,29,1,1213],[64,32,1,1225],[64,33,1,1203],[65,0,1,1227],[65,10,1,1231,"route"],[65,15,1,1236],[65,18,1,1237,"state"],[65,23,1,1242],[65,24,1,1243,"routes"],[65,30,1,1237],[65,31,1,1250,"index"],[65,36,1,1237],[65,37,1,1227],[66,0,1,1257],[66,13,1,1264,"route"],[66,18,1,1269],[66,21,1,1270,"StateUtils"],[66,31,1,1280],[66,32,1,1281,"jumpToIndex"],[66,43,1,1270],[66,44,1,1293,"state"],[66,49,1,1270],[66,51,1,1299,"index"],[66,56,1,1270],[66,57,1,1269],[66,60,1,1306,"state"],[66,65,1,1257],[67,0,1,1313],[67,5,1,119],[68,0,1,1314,"forward"],[68,4,1,1314,"forward"],[68,11,1,1321],[68,13,1,1322],[68,22,1,1331,"forward"],[68,29,1,1322],[68,30,1,1339,"state"],[68,35,1,1322],[68,37,1,1345],[69,0,1,1346],[69,10,1,1350,"index"],[69,15,1,1355],[69,18,1,1356,"state"],[69,23,1,1361],[69,24,1,1362,"index"],[69,29,1,1356],[69,32,1,1368],[69,33,1,1346],[70,0,1,1370],[70,10,1,1374,"route"],[70,15,1,1379],[70,18,1,1380,"state"],[70,23,1,1385],[70,24,1,1386,"routes"],[70,30,1,1380],[70,31,1,1393,"index"],[70,36,1,1380],[70,37,1,1370],[71,0,1,1400],[71,13,1,1407,"route"],[71,18,1,1412],[71,21,1,1413,"StateUtils"],[71,31,1,1423],[71,32,1,1424,"jumpToIndex"],[71,43,1,1413],[71,44,1,1436,"state"],[71,49,1,1413],[71,51,1,1442,"index"],[71,56,1,1413],[71,57,1,1412],[71,60,1,1449,"state"],[71,65,1,1400],[72,0,1,1456],[72,5,1,119],[73,0,1,1457,"replaceAndPrune"],[73,4,1,1457,"replaceAndPrune"],[73,19,1,1472],[73,21,1,1473],[73,30,1,1482,"replaceAndPrune"],[73,45,1,1473],[73,46,1,1498,"state"],[73,51,1,1473],[73,53,1,1504,"key"],[73,56,1,1473],[73,58,1,1508,"route"],[73,63,1,1473],[73,65,1,1514],[74,0,1,1515],[74,10,1,1519,"index"],[74,15,1,1524],[74,18,1,1525,"StateUtils"],[74,28,1,1535],[74,29,1,1536,"indexOf"],[74,36,1,1525],[74,37,1,1544,"state"],[74,42,1,1525],[74,44,1,1550,"key"],[74,47,1,1525],[74,48,1,1515],[75,0,1,1555],[75,10,1,1559,"replaced"],[75,18,1,1567],[75,21,1,1568,"StateUtils"],[75,31,1,1578],[75,32,1,1579,"replaceAtIndex"],[75,46,1,1568],[75,47,1,1594,"state"],[75,52,1,1568],[75,54,1,1600,"index"],[75,59,1,1568],[75,61,1,1606,"route"],[75,66,1,1568],[75,67,1,1555],[76,0,1,1613],[76,13,1,1620],[76,41,1,1634],[76,43,1,1620],[76,45,1,1637,"replaced"],[76,53,1,1620],[76,55,1,1646],[77,0,1,1647,"routes"],[77,8,1,1647,"routes"],[77,14,1,1653],[77,16,1,1654,"replaced"],[77,24,1,1662],[77,25,1,1663,"routes"],[77,31,1,1654],[77,32,1,1670,"slice"],[77,37,1,1654],[77,38,1,1676],[77,39,1,1654],[77,41,1,1678,"index"],[77,46,1,1683],[77,49,1,1684],[77,50,1,1654],[78,0,1,1646],[78,7,1,1620],[78,8,1,1613],[79,0,1,1690],[79,5,1,119],[80,0,1,1691,"replaceAt"],[80,4,1,1691,"replaceAt"],[80,13,1,1700],[80,15,1,1701],[80,24,1,1710,"replaceAt"],[80,33,1,1701],[80,34,1,1720,"state"],[80,39,1,1701],[80,41,1,1726,"key"],[80,44,1,1701],[80,46,1,1730,"route"],[80,51,1,1701],[80,53,1,1736],[81,0,1,1737],[81,10,1,1741,"preserveIndex"],[81,23,1,1754],[81,26,1,1755,"arguments"],[81,35,1,1764],[81,36,1,1765,"length"],[81,42,1,1755],[81,45,1,1772],[81,46,1,1755],[81,50,1,1775,"arguments"],[81,59,1,1784],[81,60,1,1785],[81,61,1,1784],[81,62,1,1775],[81,67,1,1790,"undefined"],[81,76,1,1755],[81,79,1,1800,"arguments"],[81,88,1,1809],[81,89,1,1810],[81,90,1,1809],[81,91,1,1755],[81,94,1,1813],[81,99,1,1737],[82,0,1,1819],[82,10,1,1823,"index"],[82,15,1,1828],[82,18,1,1829,"StateUtils"],[82,28,1,1839],[82,29,1,1840,"indexOf"],[82,36,1,1829],[82,37,1,1848,"state"],[82,42,1,1829],[82,44,1,1854,"key"],[82,47,1,1829],[82,48,1,1819],[83,0,1,1859],[83,10,1,1863,"nextIndex"],[83,19,1,1872],[83,22,1,1873,"preserveIndex"],[83,35,1,1886],[83,38,1,1887,"state"],[83,43,1,1892],[83,44,1,1893,"index"],[83,49,1,1886],[83,52,1,1899,"index"],[83,57,1,1859],[84,0,1,1905],[84,10,1,1909,"nextState"],[84,19,1,1918],[84,22,1,1919,"StateUtils"],[84,32,1,1929],[84,33,1,1930,"replaceAtIndex"],[84,47,1,1919],[84,48,1,1945,"state"],[84,53,1,1919],[84,55,1,1951,"index"],[84,60,1,1919],[84,62,1,1957,"route"],[84,67,1,1919],[84,68,1,1905],[85,0,1,1964,"nextState"],[85,6,1,1964,"nextState"],[85,15,1,1973],[85,16,1,1974,"index"],[85,21,1,1964],[85,24,1,1980,"nextIndex"],[85,33,1,1964],[86,0,1,1990],[86,13,1,1997,"nextState"],[86,22,1,1990],[87,0,1,2008],[87,5,1,119],[88,0,1,2009,"replaceAtIndex"],[88,4,1,2009,"replaceAtIndex"],[88,18,1,2023],[88,20,1,2024],[88,29,1,2033,"replaceAtIndex"],[88,43,1,2024],[88,44,1,2048,"state"],[88,49,1,2024],[88,51,1,2054,"index"],[88,56,1,2024],[88,58,1,2060,"route"],[88,63,1,2024],[88,65,1,2066],[89,0,1,2067],[89,30,1,2077],[89,31,1,2078],[89,32,1,2079,"state"],[89,37,1,2084],[89,38,1,2085,"routes"],[89,44,1,2079],[89,45,1,2092,"index"],[89,50,1,2079],[89,51,1,2067],[89,53,1,2099],[89,94,1,2067],[89,96,1,2141,"index"],[89,101,1,2067],[89,103,1,2147,"route"],[89,108,1,2152],[89,109,1,2153,"key"],[89,112,1,2067],[91,0,1,2158],[91,10,1,2161,"state"],[91,15,1,2166],[91,16,1,2167,"routes"],[91,22,1,2161],[91,23,1,2174,"index"],[91,28,1,2161],[91,34,1,2183,"route"],[91,39,1,2161],[91,43,1,2190,"index"],[91,48,1,2195],[91,53,1,2198,"state"],[91,58,1,2203],[91,59,1,2204,"index"],[91,64,1,2158],[91,66,1,2210],[92,0,1,2211],[92,15,1,2218,"state"],[92,20,1,2211],[93,0,1,2225],[95,0,1,2225],[95,10,1,2229,"routes"],[95,16,1,2235],[95,19,1,2236,"state"],[95,24,1,2241],[95,25,1,2242,"routes"],[95,31,1,2236],[95,32,1,2249,"slice"],[95,37,1,2236],[95,39,1,2225],[96,0,1,2257,"routes"],[96,6,1,2257,"routes"],[96,12,1,2263],[96,13,1,2264,"index"],[96,18,1,2263],[96,19,1,2257],[96,22,1,2271,"route"],[96,27,1,2257],[97,0,1,2277],[97,13,1,2284],[97,41,1,2298],[97,43,1,2284],[97,45,1,2301,"state"],[97,50,1,2284],[97,52,1,2307],[98,0,1,2308,"index"],[98,8,1,2308,"index"],[98,13,1,2313],[98,15,1,2314,"index"],[98,20,1,2307],[99,0,1,2320,"routes"],[99,8,1,2320,"routes"],[99,14,1,2326],[99,16,1,2327,"routes"],[100,0,1,2307],[100,7,1,2284],[100,8,1,2277],[101,0,1,2337],[101,5,1,119],[102,0,1,2338,"reset"],[102,4,1,2338,"reset"],[102,9,1,2343],[102,11,1,2344],[102,20,1,2353,"reset"],[102,25,1,2344],[102,26,1,2359,"state"],[102,31,1,2344],[102,33,1,2365,"routes"],[102,39,1,2344],[102,41,1,2372,"index"],[102,46,1,2344],[102,48,1,2378],[103,0,1,2379],[103,30,1,2389,"routes"],[103,36,1,2395],[103,37,1,2396,"length"],[103,43,1,2389],[103,47,1,2404,"Array"],[103,52,1,2409],[103,53,1,2410,"isArray"],[103,60,1,2404],[103,61,1,2418,"routes"],[103,67,1,2404],[103,68,1,2379],[103,70,1,2426],[103,97,1,2379],[104,0,1,2455],[104,10,1,2459,"nextIndex"],[104,19,1,2468],[104,22,1,2469,"index"],[104,27,1,2474],[104,32,1,2477,"undefined"],[104,41,1,2469],[104,44,1,2487,"routes"],[104,50,1,2493],[104,51,1,2494,"length"],[104,57,1,2487],[104,60,1,2501],[104,61,1,2469],[104,64,1,2503,"index"],[104,69,1,2455],[106,0,1,2509],[106,10,1,2512,"state"],[106,15,1,2517],[106,16,1,2518,"routes"],[106,22,1,2512],[106,23,1,2525,"length"],[106,29,1,2512],[106,34,1,2534,"routes"],[106,40,1,2540],[106,41,1,2541,"length"],[106,47,1,2512],[106,51,1,2549,"state"],[106,56,1,2554],[106,57,1,2555,"index"],[106,62,1,2549],[106,67,1,2563,"nextIndex"],[106,76,1,2509],[106,78,1,2573],[107,0,1,2574],[107,12,1,2578,"compare"],[107,19,1,2585],[107,22,1,2586],[107,31,1,2595,"compare"],[107,38,1,2586],[107,39,1,2603,"route"],[107,44,1,2586],[107,46,1,2609,"ii"],[107,48,1,2586],[107,50,1,2612],[108,0,1,2613],[108,17,1,2620,"routes"],[108,23,1,2626],[108,24,1,2627,"ii"],[108,26,1,2626],[108,27,1,2620],[108,32,1,2633,"route"],[108,37,1,2613],[109,0,1,2640],[109,9,1,2574],[111,0,1,2641],[111,12,1,2644,"state"],[111,17,1,2649],[111,18,1,2650,"routes"],[111,24,1,2644],[111,25,1,2657,"every"],[111,30,1,2644],[111,31,1,2663,"compare"],[111,38,1,2644],[111,39,1,2641],[111,41,1,2672],[112,0,1,2673],[112,17,1,2680,"state"],[112,22,1,2673],[113,0,1,2687],[114,0,1,2688],[116,0,1,2688],[116,30,1,2698],[116,31,1,2699],[116,32,1,2700,"routes"],[116,38,1,2706],[116,39,1,2707,"nextIndex"],[116,48,1,2706],[116,49,1,2688],[116,51,1,2718],[116,78,1,2688],[116,80,1,2746,"nextIndex"],[116,89,1,2688],[117,0,1,2757],[117,13,1,2764],[117,41,1,2778],[117,43,1,2764],[117,45,1,2781,"state"],[117,50,1,2764],[117,52,1,2787],[118,0,1,2788,"index"],[118,8,1,2788,"index"],[118,13,1,2793],[118,15,1,2794,"nextIndex"],[118,24,1,2787],[119,0,1,2804,"routes"],[119,8,1,2804,"routes"],[119,14,1,2810],[119,16,1,2811,"routes"],[120,0,1,2787],[120,7,1,2764],[120,8,1,2757],[121,0,1,2821],[122,0,1,119],[122,3,1,104],[123,17,1,2838,"StateUtils"],[123,27]]},"type":"js/module"}]}