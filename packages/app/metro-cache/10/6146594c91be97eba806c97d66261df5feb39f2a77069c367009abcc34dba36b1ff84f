{"dependencies":[{"name":"@babel/runtime/helpers/objectSpread","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _objectSpread = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/objectSpread\");\n\n  var React = _$$_REQUIRE(_dependencyMap[1], \"react\");\n\n  function cloneReferencedElement(element, config) {\n    var cloneRef = config.ref;\n    var originalRef = element.ref;\n\n    for (var _len = arguments.length, children = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      children[_key - 2] = arguments[_key];\n    }\n\n    if (originalRef == null || cloneRef == null) {\n      return React.cloneElement.apply(React, [element, config].concat(children));\n    }\n\n    if (typeof originalRef !== 'function') {\n      if (__DEV__) {\n        console.warn('Cloning an element with a ref that will be overwritten because it ' + 'is not a function. Use a composable callback-style ref instead. ' + 'Ignoring ref: ' + originalRef);\n      }\n\n      return React.cloneElement.apply(React, [element, config].concat(children));\n    }\n\n    return React.cloneElement.apply(React, [element, _objectSpread({}, config, {\n      ref: function ref(component) {\n        cloneRef(component);\n        originalRef(component);\n      }\n    })].concat(children));\n  }\n\n  module.exports = cloneReferencedElement;\n});","map":[[2,0,1,0],[6,0,3,0],[6,6,3,6,"React"],[6,11,3,11],[6,14,3,14,"require"],[6,25,3,21],[6,53,3,0],[8,0,5,0],[8,11,5,9,"cloneReferencedElement"],[8,33,5,0],[8,34,5,32,"element"],[8,41,5,0],[8,43,5,41,"config"],[8,49,5,0],[8,51,5,62],[9,0,6,2],[9,8,6,6,"cloneRef"],[9,16,6,14],[9,19,6,17,"config"],[9,25,6,23],[9,26,6,24,"ref"],[9,29,6,2],[10,0,7,2],[10,8,7,6,"originalRef"],[10,19,7,17],[10,22,7,20,"element"],[10,29,7,27],[10,30,7,28,"ref"],[10,33,7,2],[12,0,5,62],[12,38,5,52,"children"],[12,46,5,62],[13,0,5,52,"children"],[13,6,5,52,"children"],[13,14,5,62],[14,0,5,62],[16,0,8,2],[16,8,8,6,"originalRef"],[16,19,8,17],[16,23,8,21],[16,27,8,6],[16,31,8,29,"cloneRef"],[16,39,8,37],[16,43,8,41],[16,47,8,2],[16,49,8,47],[17,0,9,4],[17,13,9,11,"React"],[17,18,9,16],[17,19,9,17,"cloneElement"],[17,31,9,11],[17,38,9,11,"React"],[17,43,9,16],[17,46,9,30,"element"],[17,53,9,16],[17,55,9,39,"config"],[17,61,9,16],[17,70,9,50,"children"],[17,78,9,16],[17,80,9,4],[18,0,10,3],[20,0,12,2],[20,8,12,6],[20,15,12,13,"originalRef"],[20,26,12,6],[20,31,12,29],[20,41,12,2],[20,43,12,41],[21,0,13,4],[21,10,13,8,"__DEV__"],[21,17,13,4],[21,19,13,17],[22,0,14,6,"console"],[22,8,14,6,"console"],[22,15,14,13],[22,16,14,14,"warn"],[22,20,14,6],[22,21,15,8],[22,92,16,8],[22,158,15,8],[22,161,17,8],[22,177,15,8],[22,180,17,27,"originalRef"],[22,191,14,6],[23,0,19,5],[25,0,20,4],[25,13,20,11,"React"],[25,18,20,16],[25,19,20,17,"cloneElement"],[25,31,20,11],[25,38,20,11,"React"],[25,43,20,16],[25,46,20,30,"element"],[25,53,20,16],[25,55,20,39,"config"],[25,61,20,16],[25,70,20,50,"children"],[25,78,20,16],[25,80,20,4],[26,0,21,3],[28,0,23,2],[28,11,23,9,"React"],[28,16,23,14],[28,17,23,15,"cloneElement"],[28,29,23,9],[28,36,23,9,"React"],[28,41,23,14],[28,44,23,28,"element"],[28,51,23,14],[28,71,24,7,"config"],[28,77,23,14],[29,0,25,4,"ref"],[29,6,25,4,"ref"],[29,9,23,14],[29,24,25,8,"component"],[29,33,23,14],[29,35,25,19],[30,0,26,6,"cloneRef"],[30,8,26,6,"cloneRef"],[30,16,26,14],[30,17,26,15,"component"],[30,26,26,14],[30,27,26,6],[31,0,27,6,"originalRef"],[31,8,27,6,"originalRef"],[31,19,27,17],[31,20,27,18,"component"],[31,29,27,17],[31,30,27,6],[32,0,28,5],[33,0,23,14],[33,15,29,8,"children"],[33,23,23,14],[33,25,23,2],[34,0,30,1],[36,0,32,0,"module"],[36,2,32,0,"module"],[36,8,32,6],[36,9,32,7,"exports"],[36,16,32,0],[36,19,32,17,"cloneReferencedElement"],[36,41,32,0]]},"type":"js/module"}]}