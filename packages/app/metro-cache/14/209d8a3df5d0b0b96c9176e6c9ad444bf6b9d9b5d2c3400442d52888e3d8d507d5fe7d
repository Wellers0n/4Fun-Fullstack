{"dependencies":[],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var NEWTON_ITERATIONS = 4;\n  var NEWTON_MIN_SLOPE = 0.001;\n  var SUBDIVISION_PRECISION = 0.0000001;\n  var SUBDIVISION_MAX_ITERATIONS = 10;\n  var kSplineTableSize = 11;\n  var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\n  var float32ArraySupported = typeof Float32Array === 'function';\n\n  function A(aA1, aA2) {\n    return 1.0 - 3.0 * aA2 + 3.0 * aA1;\n  }\n\n  function B(aA1, aA2) {\n    return 3.0 * aA2 - 6.0 * aA1;\n  }\n\n  function C(aA1) {\n    return 3.0 * aA1;\n  }\n\n  function calcBezier(aT, aA1, aA2) {\n    return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT;\n  }\n\n  function getSlope(aT, aA1, aA2) {\n    return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\n  }\n\n  function binarySubdivide(aX, _aA, _aB, mX1, mX2) {\n    var currentX,\n        currentT,\n        i = 0,\n        aA = _aA,\n        aB = _aB;\n\n    do {\n      currentT = aA + (aB - aA) / 2.0;\n      currentX = calcBezier(currentT, mX1, mX2) - aX;\n\n      if (currentX > 0.0) {\n        aB = currentT;\n      } else {\n        aA = currentT;\n      }\n    } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\n\n    return currentT;\n  }\n\n  function newtonRaphsonIterate(aX, _aGuessT, mX1, mX2) {\n    var aGuessT = _aGuessT;\n\n    for (var i = 0; i < NEWTON_ITERATIONS; ++i) {\n      var currentSlope = getSlope(aGuessT, mX1, mX2);\n\n      if (currentSlope === 0.0) {\n        return aGuessT;\n      }\n\n      var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n      aGuessT -= currentX / currentSlope;\n    }\n\n    return aGuessT;\n  }\n\n  module.exports = function bezier(mX1, mY1, mX2, mY2) {\n    if (!(mX1 >= 0 && mX1 <= 1 && mX2 >= 0 && mX2 <= 1)) {\n      throw new Error('bezier x values must be in [0, 1] range');\n    }\n\n    var sampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);\n\n    if (mX1 !== mY1 || mX2 !== mY2) {\n      for (var i = 0; i < kSplineTableSize; ++i) {\n        sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n      }\n    }\n\n    function getTForX(aX) {\n      var intervalStart = 0.0;\n      var currentSample = 1;\n      var lastSample = kSplineTableSize - 1;\n\n      for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\n        intervalStart += kSampleStepSize;\n      }\n\n      --currentSample;\n      var dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n      var guessForT = intervalStart + dist * kSampleStepSize;\n      var initialSlope = getSlope(guessForT, mX1, mX2);\n\n      if (initialSlope >= NEWTON_MIN_SLOPE) {\n        return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n      } else if (initialSlope === 0.0) {\n        return guessForT;\n      } else {\n        return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n      }\n    }\n\n    return function BezierEasing(x) {\n      if (mX1 === mY1 && mX2 === mY2) {\n        return x;\n      }\n\n      if (x === 0) {\n        return 0;\n      }\n\n      if (x === 1) {\n        return 1;\n      }\n\n      return calcBezier(getTForX(x), mY1, mY2);\n    };\n  };\n});","map":[[2,0,15,0],[4,0,18,0],[4,6,18,6,"NEWTON_ITERATIONS"],[4,23,18,23],[4,26,18,26],[4,27,18,0],[5,0,19,0],[5,6,19,6,"NEWTON_MIN_SLOPE"],[5,22,19,22],[5,25,19,25],[5,30,19,0],[6,0,20,0],[6,6,20,6,"SUBDIVISION_PRECISION"],[6,27,20,27],[6,30,20,30],[6,39,20,0],[7,0,21,0],[7,6,21,6,"SUBDIVISION_MAX_ITERATIONS"],[7,32,21,32],[7,35,21,35],[7,37,21,0],[8,0,23,0],[8,6,23,6,"kSplineTableSize"],[8,22,23,22],[8,25,23,25],[8,27,23,0],[9,0,24,0],[9,6,24,6,"kSampleStepSize"],[9,21,24,21],[9,24,24,24],[9,31,24,31,"kSplineTableSize"],[9,47,24,47],[9,50,24,50],[9,53,24,24],[9,54,24,0],[10,0,26,0],[10,6,26,6,"float32ArraySupported"],[10,27,26,27],[10,30,26,30],[10,37,26,37,"Float32Array"],[10,49,26,30],[10,54,26,54],[10,64,26,0],[12,0,28,0],[12,11,28,9,"A"],[12,12,28,0],[12,13,28,11,"aA1"],[12,16,28,0],[12,18,28,16,"aA2"],[12,21,28,0],[12,23,28,21],[13,0,29,2],[13,11,29,9],[13,17,29,15],[13,23,29,21,"aA2"],[13,26,29,9],[13,29,29,27],[13,35,29,33,"aA1"],[13,38,29,2],[14,0,30,1],[16,0,31,0],[16,11,31,9,"B"],[16,12,31,0],[16,13,31,11,"aA1"],[16,16,31,0],[16,18,31,16,"aA2"],[16,21,31,0],[16,23,31,21],[17,0,32,2],[17,11,32,9],[17,17,32,15,"aA2"],[17,20,32,9],[17,23,32,21],[17,29,32,27,"aA1"],[17,32,32,2],[18,0,33,1],[20,0,34,0],[20,11,34,9,"C"],[20,12,34,0],[20,13,34,11,"aA1"],[20,16,34,0],[20,18,34,16],[21,0,35,2],[21,11,35,9],[21,17,35,15,"aA1"],[21,20,35,2],[22,0,36,1],[24,0,39,0],[24,11,39,9,"calcBezier"],[24,21,39,0],[24,22,39,20,"aT"],[24,24,39,0],[24,26,39,24,"aA1"],[24,29,39,0],[24,31,39,29,"aA2"],[24,34,39,0],[24,36,39,34],[25,0,40,2],[25,11,40,9],[25,12,40,10],[25,13,40,11,"A"],[25,14,40,12],[25,15,40,13,"aA1"],[25,18,40,12],[25,20,40,18,"aA2"],[25,23,40,12],[25,24,40,11],[25,27,40,25,"aT"],[25,29,40,11],[25,32,40,30,"B"],[25,33,40,31],[25,34,40,32,"aA1"],[25,37,40,31],[25,39,40,37,"aA2"],[25,42,40,31],[25,43,40,10],[25,47,40,45,"aT"],[25,49,40,10],[25,52,40,50,"C"],[25,53,40,51],[25,54,40,52,"aA1"],[25,57,40,51],[25,58,40,9],[25,62,40,60,"aT"],[25,64,40,2],[26,0,41,1],[28,0,44,0],[28,11,44,9,"getSlope"],[28,19,44,0],[28,20,44,18,"aT"],[28,22,44,0],[28,24,44,22,"aA1"],[28,27,44,0],[28,29,44,27,"aA2"],[28,32,44,0],[28,34,44,32],[29,0,45,2],[29,11,45,9],[29,17,45,15,"A"],[29,18,45,16],[29,19,45,17,"aA1"],[29,22,45,16],[29,24,45,22,"aA2"],[29,27,45,16],[29,28,45,9],[29,31,45,29,"aT"],[29,33,45,9],[29,36,45,34,"aT"],[29,38,45,9],[29,41,45,39],[29,47,45,45,"B"],[29,48,45,46],[29,49,45,47,"aA1"],[29,52,45,46],[29,54,45,52,"aA2"],[29,57,45,46],[29,58,45,39],[29,61,45,59,"aT"],[29,63,45,9],[29,66,45,64,"C"],[29,67,45,65],[29,68,45,66,"aA1"],[29,71,45,65],[29,72,45,2],[30,0,46,1],[32,0,48,0],[32,11,48,9,"binarySubdivide"],[32,26,48,0],[32,27,48,25,"aX"],[32,29,48,0],[32,31,48,29,"_aA"],[32,34,48,0],[32,36,48,34,"_aB"],[32,39,48,0],[32,41,48,39,"mX1"],[32,44,48,0],[32,46,48,44,"mX2"],[32,49,48,0],[32,51,48,49],[33,0,49,2],[33,8,49,6,"currentX"],[33,16,49,2],[34,0,49,2],[34,8,50,4,"currentT"],[34,16,49,2],[35,0,49,2],[35,8,51,4,"i"],[35,9,51,5],[35,12,51,8],[35,13,49,2],[36,0,49,2],[36,8,52,4,"aA"],[36,10,52,6],[36,13,52,9,"_aA"],[36,16,49,2],[37,0,49,2],[37,8,53,4,"aB"],[37,10,53,6],[37,13,53,9,"_aB"],[37,16,49,2],[39,0,54,2],[39,7,54,5],[40,0,55,4,"currentT"],[40,6,55,4,"currentT"],[40,14,55,12],[40,17,55,15,"aA"],[40,19,55,17],[40,22,55,20],[40,23,55,21,"aB"],[40,25,55,23],[40,28,55,26,"aA"],[40,30,55,20],[40,34,55,32],[40,37,55,4],[41,0,56,4,"currentX"],[41,6,56,4,"currentX"],[41,14,56,12],[41,17,56,15,"calcBezier"],[41,27,56,25],[41,28,56,26,"currentT"],[41,36,56,25],[41,38,56,36,"mX1"],[41,41,56,25],[41,43,56,41,"mX2"],[41,46,56,25],[41,47,56,15],[41,50,56,48,"aX"],[41,52,56,4],[43,0,57,4],[43,10,57,8,"currentX"],[43,18,57,16],[43,21,57,19],[43,24,57,4],[43,26,57,24],[44,0,58,6,"aB"],[44,8,58,6,"aB"],[44,10,58,8],[44,13,58,11,"currentT"],[44,21,58,6],[45,0,59,5],[45,7,57,4],[45,13,59,11],[46,0,60,6,"aA"],[46,8,60,6,"aA"],[46,10,60,8],[46,13,60,11,"currentT"],[46,21,60,6],[47,0,61,5],[48,0,62,3],[48,5,54,2],[48,13,63,4,"Math"],[48,17,63,8],[48,18,63,9,"abs"],[48,21,63,4],[48,22,63,13,"currentX"],[48,30,63,4],[48,34,63,25,"SUBDIVISION_PRECISION"],[48,55,63,4],[48,59,64,4],[48,61,64,6,"i"],[48,62,64,4],[48,65,64,10,"SUBDIVISION_MAX_ITERATIONS"],[48,91,54,2],[50,0,66,2],[50,11,66,9,"currentT"],[50,19,66,2],[51,0,67,1],[53,0,69,0],[53,11,69,9,"newtonRaphsonIterate"],[53,31,69,0],[53,32,69,30,"aX"],[53,34,69,0],[53,36,69,34,"_aGuessT"],[53,44,69,0],[53,46,69,44,"mX1"],[53,49,69,0],[53,51,69,49,"mX2"],[53,54,69,0],[53,56,69,54],[54,0,70,2],[54,8,70,6,"aGuessT"],[54,15,70,13],[54,18,70,16,"_aGuessT"],[54,26,70,2],[56,0,71,2],[56,9,71,7],[56,13,71,11,"i"],[56,14,71,12],[56,17,71,15],[56,18,71,2],[56,20,71,18,"i"],[56,21,71,19],[56,24,71,22,"NEWTON_ITERATIONS"],[56,41,71,2],[56,43,71,41],[56,45,71,43,"i"],[56,46,71,2],[56,48,71,46],[57,0,72,4],[57,10,72,10,"currentSlope"],[57,22,72,22],[57,25,72,25,"getSlope"],[57,33,72,33],[57,34,72,34,"aGuessT"],[57,41,72,33],[57,43,72,43,"mX1"],[57,46,72,33],[57,48,72,48,"mX2"],[57,51,72,33],[57,52,72,4],[59,0,73,4],[59,10,73,8,"currentSlope"],[59,22,73,20],[59,27,73,25],[59,30,73,4],[59,32,73,30],[60,0,74,6],[60,15,74,13,"aGuessT"],[60,22,74,6],[61,0,75,5],[63,0,76,4],[63,10,76,10,"currentX"],[63,18,76,18],[63,21,76,21,"calcBezier"],[63,31,76,31],[63,32,76,32,"aGuessT"],[63,39,76,31],[63,41,76,41,"mX1"],[63,44,76,31],[63,46,76,46,"mX2"],[63,49,76,31],[63,50,76,21],[63,53,76,53,"aX"],[63,55,76,4],[64,0,77,4,"aGuessT"],[64,6,77,4,"aGuessT"],[64,13,77,11],[64,17,77,15,"currentX"],[64,25,77,23],[64,28,77,26,"currentSlope"],[64,40,77,4],[65,0,78,3],[67,0,79,2],[67,11,79,9,"aGuessT"],[67,18,79,2],[68,0,80,1],[70,0,82,0,"module"],[70,2,82,0,"module"],[70,8,82,6],[70,9,82,7,"exports"],[70,16,82,0],[70,19,82,17],[70,28,82,26,"bezier"],[70,34,82,17],[70,35,83,2,"mX1"],[70,38,82,17],[70,40,84,2,"mY1"],[70,43,82,17],[70,45,85,2,"mX2"],[70,48,82,17],[70,50,86,2,"mY2"],[70,53,82,17],[70,55,87,2],[71,0,88,2],[71,8,88,6],[71,10,88,8,"mX1"],[71,13,88,11],[71,17,88,15],[71,18,88,8],[71,22,88,20,"mX1"],[71,25,88,23],[71,29,88,27],[71,30,88,8],[71,34,88,32,"mX2"],[71,37,88,35],[71,41,88,39],[71,42,88,8],[71,46,88,44,"mX2"],[71,49,88,47],[71,53,88,51],[71,54,88,6],[71,55,88,2],[71,57,88,55],[72,0,89,4],[72,12,89,10],[72,16,89,14,"Error"],[72,21,89,10],[72,22,89,20],[72,63,89,10],[72,64,89,4],[73,0,90,3],[75,0,93,2],[75,8,93,8,"sampleValues"],[75,20,93,20],[75,23,93,23,"float32ArraySupported"],[75,44,93,44],[75,47,94,6],[75,51,94,10,"Float32Array"],[75,63,94,6],[75,64,94,23,"kSplineTableSize"],[75,80,94,6],[75,81,93,44],[75,84,95,6],[75,88,95,10,"Array"],[75,93,95,6],[75,94,95,16,"kSplineTableSize"],[75,110,95,6],[75,111,93,2],[77,0,96,2],[77,8,96,6,"mX1"],[77,11,96,9],[77,16,96,14,"mY1"],[77,19,96,6],[77,23,96,21,"mX2"],[77,26,96,24],[77,31,96,29,"mY2"],[77,34,96,2],[77,36,96,34],[78,0,97,4],[78,11,97,9],[78,15,97,13,"i"],[78,16,97,14],[78,19,97,17],[78,20,97,4],[78,22,97,20,"i"],[78,23,97,21],[78,26,97,24,"kSplineTableSize"],[78,42,97,4],[78,44,97,42],[78,46,97,44,"i"],[78,47,97,4],[78,49,97,47],[79,0,98,6,"sampleValues"],[79,8,98,6,"sampleValues"],[79,20,98,18],[79,21,98,19,"i"],[79,22,98,18],[79,23,98,6],[79,26,98,24,"calcBezier"],[79,36,98,34],[79,37,98,35,"i"],[79,38,98,36],[79,41,98,39,"kSampleStepSize"],[79,56,98,34],[79,58,98,56,"mX1"],[79,61,98,34],[79,63,98,61,"mX2"],[79,66,98,34],[79,67,98,6],[80,0,99,5],[81,0,100,3],[83,0,102,2],[83,13,102,11,"getTForX"],[83,21,102,2],[83,22,102,20,"aX"],[83,24,102,2],[83,26,102,24],[84,0,103,4],[84,10,103,8,"intervalStart"],[84,23,103,21],[84,26,103,24],[84,29,103,4],[85,0,104,4],[85,10,104,8,"currentSample"],[85,23,104,21],[85,26,104,24],[85,27,104,4],[86,0,105,4],[86,10,105,10,"lastSample"],[86,20,105,20],[86,23,105,23,"kSplineTableSize"],[86,39,105,39],[86,42,105,42],[86,43,105,4],[88,0,107,4],[88,13,109,6,"currentSample"],[88,26,109,19],[88,31,109,24,"lastSample"],[88,41,109,6],[88,45,109,38,"sampleValues"],[88,57,109,50],[88,58,109,51,"currentSample"],[88,71,109,50],[88,72,109,38],[88,76,109,69,"aX"],[88,78,107,4],[88,80,110,6],[88,82,110,8,"currentSample"],[88,95,107,4],[88,97,111,6],[89,0,112,6,"intervalStart"],[89,8,112,6,"intervalStart"],[89,21,112,19],[89,25,112,23,"kSampleStepSize"],[89,40,112,6],[90,0,113,5],[92,0,114,4],[92,8,114,6,"currentSample"],[92,21,114,4],[93,0,117,4],[93,10,117,10,"dist"],[93,14,117,14],[93,17,118,6],[93,18,118,7,"aX"],[93,20,118,9],[93,23,118,12,"sampleValues"],[93,35,118,24],[93,36,118,25,"currentSample"],[93,49,118,24],[93,50,118,6],[93,55,119,7,"sampleValues"],[93,67,119,19],[93,68,119,20,"currentSample"],[93,81,119,33],[93,84,119,36],[93,85,119,19],[93,86,119,7],[93,89,119,41,"sampleValues"],[93,101,119,53],[93,102,119,54,"currentSample"],[93,115,119,53],[93,116,118,6],[93,117,117,4],[94,0,120,4],[94,10,120,10,"guessForT"],[94,19,120,19],[94,22,120,22,"intervalStart"],[94,35,120,35],[94,38,120,38,"dist"],[94,42,120,42],[94,45,120,45,"kSampleStepSize"],[94,60,120,4],[95,0,122,4],[95,10,122,10,"initialSlope"],[95,22,122,22],[95,25,122,25,"getSlope"],[95,33,122,33],[95,34,122,34,"guessForT"],[95,43,122,33],[95,45,122,45,"mX1"],[95,48,122,33],[95,50,122,50,"mX2"],[95,53,122,33],[95,54,122,4],[97,0,123,4],[97,10,123,8,"initialSlope"],[97,22,123,20],[97,26,123,24,"NEWTON_MIN_SLOPE"],[97,42,123,4],[97,44,123,42],[98,0,124,6],[98,15,124,13,"newtonRaphsonIterate"],[98,35,124,33],[98,36,124,34,"aX"],[98,38,124,33],[98,40,124,38,"guessForT"],[98,49,124,33],[98,51,124,49,"mX1"],[98,54,124,33],[98,56,124,54,"mX2"],[98,59,124,33],[98,60,124,6],[99,0,125,5],[99,7,123,4],[99,13,125,11],[99,17,125,15,"initialSlope"],[99,29,125,27],[99,34,125,32],[99,37,125,11],[99,39,125,37],[100,0,126,6],[100,15,126,13,"guessForT"],[100,24,126,6],[101,0,127,5],[101,7,125,11],[101,13,127,11],[102,0,128,6],[102,15,128,13,"binarySubdivide"],[102,30,128,28],[102,31,129,8,"aX"],[102,33,128,28],[102,35,130,8,"intervalStart"],[102,48,128,28],[102,50,131,8,"intervalStart"],[102,63,131,21],[102,66,131,24,"kSampleStepSize"],[102,81,128,28],[102,83,132,8,"mX1"],[102,86,128,28],[102,88,133,8,"mX2"],[102,91,128,28],[102,92,128,6],[103,0,135,5],[104,0,136,3],[106,0,138,2],[106,11,138,9],[106,20,138,18,"BezierEasing"],[106,32,138,9],[106,33,138,31,"x"],[106,34,138,9],[106,36,138,50],[107,0,139,4],[107,10,139,8,"mX1"],[107,13,139,11],[107,18,139,16,"mY1"],[107,21,139,8],[107,25,139,23,"mX2"],[107,28,139,26],[107,33,139,31,"mY2"],[107,36,139,4],[107,38,139,36],[108,0,140,6],[108,15,140,13,"x"],[108,16,140,6],[109,0,141,5],[111,0,143,4],[111,10,143,8,"x"],[111,11,143,9],[111,16,143,14],[111,17,143,4],[111,19,143,17],[112,0,144,6],[112,15,144,13],[112,16,144,6],[113,0,145,5],[115,0,146,4],[115,10,146,8,"x"],[115,11,146,9],[115,16,146,14],[115,17,146,4],[115,19,146,17],[116,0,147,6],[116,15,147,13],[116,16,147,6],[117,0,148,5],[119,0,149,4],[119,13,149,11,"calcBezier"],[119,23,149,21],[119,24,149,22,"getTForX"],[119,32,149,30],[119,33,149,31,"x"],[119,34,149,30],[119,35,149,21],[119,37,149,35,"mY1"],[119,40,149,21],[119,42,149,40,"mY2"],[119,45,149,21],[119,46,149,4],[120,0,150,3],[120,5,138,2],[121,0,151,1],[121,3,82,0]]},"type":"js/module"}]}