{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/objectSpread","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = getChildEventSubscriber;\n\n  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/objectSpread\"));\n\n  function getChildEventSubscriber(addListener, key) {\n    var initialLastFocusEvent = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'didBlur';\n    var actionSubscribers = new Set();\n    var willFocusSubscribers = new Set();\n    var didFocusSubscribers = new Set();\n    var willBlurSubscribers = new Set();\n    var didBlurSubscribers = new Set();\n    var refocusSubscribers = new Set();\n\n    var removeAll = function removeAll() {\n      [actionSubscribers, willFocusSubscribers, didFocusSubscribers, willBlurSubscribers, didBlurSubscribers, refocusSubscribers].forEach(function (set) {\n        return set.clear();\n      });\n      upstreamSubscribers.forEach(function (subs) {\n        return subs && subs.remove();\n      });\n    };\n\n    var getChildSubscribers = function getChildSubscribers(evtName) {\n      switch (evtName) {\n        case 'action':\n          return actionSubscribers;\n\n        case 'willFocus':\n          return willFocusSubscribers;\n\n        case 'didFocus':\n          return didFocusSubscribers;\n\n        case 'willBlur':\n          return willBlurSubscribers;\n\n        case 'didBlur':\n          return didBlurSubscribers;\n\n        case 'refocus':\n          return refocusSubscribers;\n\n        default:\n          return null;\n      }\n    };\n\n    var _emit = function emit(type, payload) {\n      var payloadWithType = (0, _objectSpread2.default)({}, payload, {\n        type: type\n      });\n      var subscribers = getChildSubscribers(type);\n      subscribers && subscribers.forEach(function (subs) {\n        subs(payloadWithType);\n      });\n    };\n\n    var lastFocusEvent = initialLastFocusEvent;\n    var upstreamEvents = ['willFocus', 'didFocus', 'willBlur', 'didBlur', 'refocus', 'action'];\n    var upstreamSubscribers = upstreamEvents.map(function (eventName) {\n      return addListener(eventName, function (payload) {\n        if (eventName === 'refocus') {\n          _emit(eventName, payload);\n\n          return;\n        }\n\n        var state = payload.state,\n            lastState = payload.lastState,\n            action = payload.action;\n        var lastRoutes = lastState && lastState.routes;\n        var routes = state && state.routes;\n        var focusKey = routes && routes[state.index].key;\n        var isChildFocused = focusKey === key;\n        var lastRoute = lastRoutes && lastRoutes.find(function (route) {\n          return route.key === key;\n        });\n        var newRoute = routes && routes.find(function (route) {\n          return route.key === key;\n        });\n        var childPayload = {\n          context: key + \":\" + action.type + \"_\" + (payload.context || 'Root'),\n          state: newRoute,\n          lastState: lastRoute,\n          action: action,\n          type: eventName\n        };\n        var isTransitioning = !!state && state.isTransitioning;\n        var previouslylastFocusEvent = lastFocusEvent;\n\n        if (lastFocusEvent === 'didBlur') {\n          if (eventName === 'willFocus' && isChildFocused) {\n            _emit(lastFocusEvent = 'willFocus', childPayload);\n          } else if (eventName === 'action' && isChildFocused) {\n            _emit(lastFocusEvent = 'willFocus', childPayload);\n          }\n        }\n\n        if (lastFocusEvent === 'willFocus') {\n          if (eventName === 'didFocus' && isChildFocused && !isTransitioning) {\n            _emit(lastFocusEvent = 'didFocus', childPayload);\n          } else if (eventName === 'action' && isChildFocused && !isTransitioning) {\n            _emit(lastFocusEvent = 'didFocus', childPayload);\n          }\n        }\n\n        if (lastFocusEvent === 'didFocus') {\n          if (!isChildFocused) {\n            _emit(lastFocusEvent = 'willBlur', childPayload);\n          } else if (eventName === 'willBlur') {\n            _emit(lastFocusEvent = 'willBlur', childPayload);\n          } else if (eventName === 'action' && previouslylastFocusEvent === 'didFocus') {\n            _emit('action', childPayload);\n          }\n        }\n\n        if (lastFocusEvent === 'willBlur') {\n          if (eventName === 'action' && !isChildFocused && !isTransitioning) {\n            _emit(lastFocusEvent = 'didBlur', childPayload);\n          } else if (eventName === 'didBlur') {\n            _emit(lastFocusEvent = 'didBlur', childPayload);\n          } else if (eventName === 'action' && isChildFocused && !isTransitioning) {\n            _emit(lastFocusEvent = 'didFocus', childPayload);\n          } else if (eventName === 'action' && isChildFocused && isTransitioning) {\n            _emit(lastFocusEvent = 'willFocus', childPayload);\n          }\n        }\n\n        if (lastFocusEvent === 'didBlur' && !newRoute) {\n          removeAll();\n        }\n      });\n    });\n    return {\n      addListener: function addListener(eventName, eventHandler) {\n        var subscribers = getChildSubscribers(eventName);\n\n        if (!subscribers) {\n          throw new Error(\"Invalid event name \\\"\" + eventName + \"\\\"\");\n        }\n\n        subscribers.add(eventHandler);\n\n        var remove = function remove() {\n          subscribers.delete(eventHandler);\n        };\n\n        return {\n          remove: remove\n        };\n      },\n      emit: function emit(eventName, payload) {\n        if (eventName !== 'refocus') {\n          console.error(\"navigation.emit only supports the 'refocus' event currently.\");\n          return;\n        }\n\n        _emit(eventName, payload);\n      }\n    };\n  }\n});","map":[[9,0,1,0],[11,0,1,78],[11,11,1,87,"getChildEventSubscriber"],[11,34,1,78],[11,35,1,111,"addListener"],[11,46,1,78],[11,48,1,123,"key"],[11,51,1,78],[11,53,1,127],[12,0,1,128],[12,8,1,132,"initialLastFocusEvent"],[12,29,1,153],[12,32,1,154,"arguments"],[12,41,1,163],[12,42,1,164,"length"],[12,48,1,154],[12,51,1,171],[12,52,1,154],[12,56,1,174,"arguments"],[12,65,1,183],[12,66,1,184],[12,67,1,183],[12,68,1,174],[12,73,1,189,"undefined"],[12,82,1,154],[12,85,1,199,"arguments"],[12,94,1,208],[12,95,1,209],[12,96,1,208],[12,97,1,154],[12,100,1,212],[12,109,1,128],[13,0,1,222],[13,8,1,226,"actionSubscribers"],[13,25,1,243],[13,28,1,244],[13,32,1,248,"Set"],[13,35,1,244],[13,37,1,222],[14,0,1,254],[14,8,1,258,"willFocusSubscribers"],[14,28,1,278],[14,31,1,279],[14,35,1,283,"Set"],[14,38,1,279],[14,40,1,254],[15,0,1,289],[15,8,1,293,"didFocusSubscribers"],[15,27,1,312],[15,30,1,313],[15,34,1,317,"Set"],[15,37,1,313],[15,39,1,289],[16,0,1,323],[16,8,1,327,"willBlurSubscribers"],[16,27,1,346],[16,30,1,347],[16,34,1,351,"Set"],[16,37,1,347],[16,39,1,323],[17,0,1,357],[17,8,1,361,"didBlurSubscribers"],[17,26,1,379],[17,29,1,380],[17,33,1,384,"Set"],[17,36,1,380],[17,38,1,357],[18,0,1,390],[18,8,1,394,"refocusSubscribers"],[18,26,1,412],[18,29,1,413],[18,33,1,417,"Set"],[18,36,1,413],[18,38,1,390],[20,0,1,423],[20,8,1,427,"removeAll"],[20,17,1,436],[20,20,1,437],[20,29,1,446,"removeAll"],[20,38,1,437],[20,41,1,457],[21,0,1,458],[21,7,1,459,"actionSubscribers"],[21,24,1,458],[21,26,1,477,"willFocusSubscribers"],[21,46,1,458],[21,48,1,498,"didFocusSubscribers"],[21,67,1,458],[21,69,1,518,"willBlurSubscribers"],[21,88,1,458],[21,90,1,538,"didBlurSubscribers"],[21,108,1,458],[21,110,1,557,"refocusSubscribers"],[21,128,1,458],[21,130,1,577,"forEach"],[21,137,1,458],[21,138,1,585],[21,148,1,594,"set"],[21,151,1,585],[21,153,1,598],[22,0,1,599],[22,15,1,606,"set"],[22,18,1,609],[22,19,1,610,"clear"],[22,24,1,606],[22,26,1,599],[23,0,1,619],[23,7,1,458],[24,0,1,621,"upstreamSubscribers"],[24,6,1,621,"upstreamSubscribers"],[24,25,1,640],[24,26,1,641,"forEach"],[24,33,1,621],[24,34,1,649],[24,44,1,658,"subs"],[24,48,1,649],[24,50,1,663],[25,0,1,664],[25,15,1,671,"subs"],[25,19,1,675],[25,23,1,677,"subs"],[25,27,1,681],[25,28,1,682,"remove"],[25,34,1,677],[25,36,1,664],[26,0,1,692],[26,7,1,621],[27,0,1,695],[27,5,1,423],[29,0,1,696],[29,8,1,700,"getChildSubscribers"],[29,27,1,719],[29,30,1,720],[29,39,1,729,"getChildSubscribers"],[29,58,1,720],[29,59,1,749,"evtName"],[29,66,1,720],[29,68,1,757],[30,0,1,758],[30,14,1,765,"evtName"],[30,21,1,758],[31,0,1,774],[31,13,1,778],[31,21,1,774],[32,0,1,787],[32,17,1,794,"actionSubscribers"],[32,34,1,787],[34,0,1,812],[34,13,1,816],[34,24,1,812],[35,0,1,828],[35,17,1,835,"willFocusSubscribers"],[35,37,1,828],[37,0,1,856],[37,13,1,860],[37,23,1,856],[38,0,1,871],[38,17,1,878,"didFocusSubscribers"],[38,36,1,871],[40,0,1,898],[40,13,1,902],[40,23,1,898],[41,0,1,913],[41,17,1,920,"willBlurSubscribers"],[41,36,1,913],[43,0,1,940],[43,13,1,944],[43,22,1,940],[44,0,1,954],[44,17,1,961,"didBlurSubscribers"],[44,35,1,954],[46,0,1,980],[46,13,1,984],[46,22,1,980],[47,0,1,994],[47,17,1,1001,"refocusSubscribers"],[47,35,1,994],[49,0,1,1020],[50,0,1,1028],[50,17,1,1035],[50,21,1,1028],[51,0,1,758],[52,0,1,1042],[52,5,1,696],[54,0,1,1043],[54,8,1,1047,"_emit"],[54,13,1,1052],[54,16,1,1053],[54,25,1,1062,"emit"],[54,29,1,1053],[54,30,1,1067,"type"],[54,34,1,1053],[54,36,1,1072,"payload"],[54,43,1,1053],[54,45,1,1080],[55,0,1,1081],[55,10,1,1085,"payloadWithType"],[55,25,1,1100],[55,28,1,1101],[55,56,1,1115],[55,58,1,1101],[55,60,1,1118,"payload"],[55,67,1,1101],[55,69,1,1126],[56,0,1,1127,"type"],[56,8,1,1127,"type"],[56,12,1,1131],[56,14,1,1132,"type"],[57,0,1,1126],[57,7,1,1101],[57,8,1,1081],[58,0,1,1139],[58,10,1,1143,"subscribers"],[58,21,1,1154],[58,24,1,1155,"getChildSubscribers"],[58,43,1,1174],[58,44,1,1175,"type"],[58,48,1,1174],[58,49,1,1139],[59,0,1,1181,"subscribers"],[59,6,1,1181,"subscribers"],[59,17,1,1192],[59,21,1,1194,"subscribers"],[59,32,1,1205],[59,33,1,1206,"forEach"],[59,40,1,1194],[59,41,1,1214],[59,51,1,1223,"subs"],[59,55,1,1214],[59,57,1,1228],[60,0,1,1229,"subs"],[60,8,1,1229,"subs"],[60,12,1,1233],[60,13,1,1234,"payloadWithType"],[60,28,1,1233],[60,29,1,1229],[61,0,1,1252],[61,7,1,1194],[61,8,1,1181],[62,0,1,1255],[62,5,1,1043],[64,0,1,1256],[64,8,1,1260,"lastFocusEvent"],[64,22,1,1274],[64,25,1,1275,"initialLastFocusEvent"],[64,46,1,1256],[65,0,1,1297],[65,8,1,1301,"upstreamEvents"],[65,22,1,1315],[65,25,1,1316],[65,26,1,1317],[65,37,1,1316],[65,39,1,1329],[65,49,1,1316],[65,51,1,1340],[65,61,1,1316],[65,63,1,1351],[65,72,1,1316],[65,74,1,1361],[65,83,1,1316],[65,85,1,1371],[65,93,1,1316],[65,94,1,1297],[66,0,1,1381],[66,8,1,1385,"upstreamSubscribers"],[66,27,1,1404],[66,30,1,1405,"upstreamEvents"],[66,44,1,1419],[66,45,1,1420,"map"],[66,48,1,1405],[66,49,1,1424],[66,59,1,1433,"eventName"],[66,68,1,1424],[66,70,1,1443],[67,0,1,1444],[67,13,1,1451,"addListener"],[67,24,1,1462],[67,25,1,1463,"eventName"],[67,34,1,1462],[67,36,1,1473],[67,46,1,1482,"payload"],[67,53,1,1473],[67,55,1,1490],[68,0,1,1491],[68,12,1,1494,"eventName"],[68,21,1,1503],[68,26,1,1506],[68,35,1,1491],[68,37,1,1516],[69,0,1,1517,"_emit"],[69,10,1,1517,"_emit"],[69,15,1,1522],[69,16,1,1523,"eventName"],[69,25,1,1522],[69,27,1,1533,"payload"],[69,34,1,1522],[69,35,1,1517],[71,0,1,1542],[72,0,1,1550],[74,0,1,1550],[74,12,1,1554,"state"],[74,17,1,1559],[74,20,1,1560,"payload"],[74,27,1,1567],[74,28,1,1568,"state"],[74,33,1,1550],[75,0,1,1550],[75,12,1,1574,"lastState"],[75,21,1,1583],[75,24,1,1584,"payload"],[75,31,1,1591],[75,32,1,1592,"lastState"],[75,41,1,1550],[76,0,1,1550],[76,12,1,1602,"action"],[76,18,1,1608],[76,21,1,1609,"payload"],[76,28,1,1616],[76,29,1,1617,"action"],[76,35,1,1550],[77,0,1,1624],[77,12,1,1628,"lastRoutes"],[77,22,1,1638],[77,25,1,1639,"lastState"],[77,34,1,1648],[77,38,1,1650,"lastState"],[77,47,1,1659],[77,48,1,1660,"routes"],[77,54,1,1624],[78,0,1,1667],[78,12,1,1671,"routes"],[78,18,1,1677],[78,21,1,1678,"state"],[78,26,1,1683],[78,30,1,1685,"state"],[78,35,1,1690],[78,36,1,1691,"routes"],[78,42,1,1667],[79,0,1,1698],[79,12,1,1702,"focusKey"],[79,20,1,1710],[79,23,1,1711,"routes"],[79,29,1,1717],[79,33,1,1719,"routes"],[79,39,1,1725],[79,40,1,1726,"state"],[79,45,1,1731],[79,46,1,1732,"index"],[79,51,1,1725],[79,52,1,1719],[79,53,1,1739,"key"],[79,56,1,1698],[80,0,1,1743],[80,12,1,1747,"isChildFocused"],[80,26,1,1761],[80,29,1,1762,"focusKey"],[80,37,1,1770],[80,42,1,1773,"key"],[80,45,1,1743],[81,0,1,1777],[81,12,1,1781,"lastRoute"],[81,21,1,1790],[81,24,1,1791,"lastRoutes"],[81,34,1,1801],[81,38,1,1803,"lastRoutes"],[81,48,1,1813],[81,49,1,1814,"find"],[81,53,1,1803],[81,54,1,1819],[81,64,1,1828,"route"],[81,69,1,1819],[81,71,1,1834],[82,0,1,1835],[82,17,1,1842,"route"],[82,22,1,1847],[82,23,1,1848,"key"],[82,26,1,1842],[82,31,1,1854,"key"],[82,34,1,1835],[83,0,1,1859],[83,9,1,1803],[83,10,1,1777],[84,0,1,1861],[84,12,1,1865,"newRoute"],[84,20,1,1873],[84,23,1,1874,"routes"],[84,29,1,1880],[84,33,1,1882,"routes"],[84,39,1,1888],[84,40,1,1889,"find"],[84,44,1,1882],[84,45,1,1894],[84,55,1,1903,"route"],[84,60,1,1894],[84,62,1,1909],[85,0,1,1910],[85,17,1,1917,"route"],[85,22,1,1922],[85,23,1,1923,"key"],[85,26,1,1917],[85,31,1,1929,"key"],[85,34,1,1910],[86,0,1,1934],[86,9,1,1882],[86,10,1,1861],[87,0,1,1936],[87,12,1,1940,"childPayload"],[87,24,1,1952],[87,27,1,1953],[88,0,1,1954,"context"],[88,10,1,1954,"context"],[88,17,1,1961],[88,19,1,1962,"key"],[88,22,1,1965],[88,25,1,1966],[88,28,1,1962],[88,31,1,1970,"action"],[88,37,1,1976],[88,38,1,1977,"type"],[88,42,1,1962],[88,45,1,1982],[88,48,1,1962],[88,52,1,1987,"payload"],[88,59,1,1994],[88,60,1,1995,"context"],[88,67,1,1987],[88,71,1,2004],[88,77,1,1962],[88,78,1,1953],[89,0,1,2012,"state"],[89,10,1,2012,"state"],[89,15,1,2017],[89,17,1,2018,"newRoute"],[89,25,1,1953],[90,0,1,2027,"lastState"],[90,10,1,2027,"lastState"],[90,19,1,2036],[90,21,1,2037,"lastRoute"],[90,30,1,1953],[91,0,1,2047,"action"],[91,10,1,2047,"action"],[91,16,1,2053],[91,18,1,2054,"action"],[91,24,1,1953],[92,0,1,2061,"type"],[92,10,1,2061,"type"],[92,14,1,2065],[92,16,1,2066,"eventName"],[93,0,1,1953],[93,9,1,1936],[94,0,1,2077],[94,12,1,2081,"isTransitioning"],[94,27,1,2096],[94,30,1,2097],[94,31,1,2098],[94,32,1,2099,"state"],[94,37,1,2097],[94,41,1,2106,"state"],[94,46,1,2111],[94,47,1,2112,"isTransitioning"],[94,62,1,2077],[95,0,1,2128],[95,12,1,2132,"previouslylastFocusEvent"],[95,36,1,2156],[95,39,1,2157,"lastFocusEvent"],[95,53,1,2128],[97,0,1,2172],[97,12,1,2175,"lastFocusEvent"],[97,26,1,2189],[97,31,1,2192],[97,40,1,2172],[97,42,1,2202],[98,0,1,2203],[98,14,1,2206,"eventName"],[98,23,1,2215],[98,28,1,2218],[98,39,1,2206],[98,43,1,2231,"isChildFocused"],[98,57,1,2203],[98,59,1,2246],[99,0,1,2247,"_emit"],[99,12,1,2247,"_emit"],[99,17,1,2252],[99,18,1,2253,"lastFocusEvent"],[99,32,1,2267],[99,35,1,2268],[99,46,1,2252],[99,48,1,2280,"childPayload"],[99,60,1,2252],[99,61,1,2247],[100,0,1,2295],[100,11,1,2203],[100,17,1,2300],[100,21,1,2303,"eventName"],[100,30,1,2312],[100,35,1,2315],[100,43,1,2303],[100,47,1,2325,"isChildFocused"],[100,61,1,2300],[100,63,1,2340],[101,0,1,2341,"_emit"],[101,12,1,2341,"_emit"],[101,17,1,2346],[101,18,1,2347,"lastFocusEvent"],[101,32,1,2361],[101,35,1,2362],[101,46,1,2346],[101,48,1,2374,"childPayload"],[101,60,1,2346],[101,61,1,2341],[102,0,1,2389],[103,0,1,2390],[105,0,1,2390],[105,12,1,2393,"lastFocusEvent"],[105,26,1,2407],[105,31,1,2410],[105,42,1,2390],[105,44,1,2422],[106,0,1,2423],[106,14,1,2426,"eventName"],[106,23,1,2435],[106,28,1,2438],[106,38,1,2426],[106,42,1,2450,"isChildFocused"],[106,56,1,2426],[106,60,1,2466],[106,61,1,2467,"isTransitioning"],[106,76,1,2423],[106,78,1,2483],[107,0,1,2484,"_emit"],[107,12,1,2484,"_emit"],[107,17,1,2489],[107,18,1,2490,"lastFocusEvent"],[107,32,1,2504],[107,35,1,2505],[107,45,1,2489],[107,47,1,2516,"childPayload"],[107,59,1,2489],[107,60,1,2484],[108,0,1,2531],[108,11,1,2423],[108,17,1,2536],[108,21,1,2539,"eventName"],[108,30,1,2548],[108,35,1,2551],[108,43,1,2539],[108,47,1,2561,"isChildFocused"],[108,61,1,2539],[108,65,1,2577],[108,66,1,2578,"isTransitioning"],[108,81,1,2536],[108,83,1,2594],[109,0,1,2595,"_emit"],[109,12,1,2595,"_emit"],[109,17,1,2600],[109,18,1,2601,"lastFocusEvent"],[109,32,1,2615],[109,35,1,2616],[109,45,1,2600],[109,47,1,2627,"childPayload"],[109,59,1,2600],[109,60,1,2595],[110,0,1,2642],[111,0,1,2643],[113,0,1,2643],[113,12,1,2646,"lastFocusEvent"],[113,26,1,2660],[113,31,1,2663],[113,41,1,2643],[113,43,1,2674],[114,0,1,2675],[114,14,1,2678],[114,15,1,2679,"isChildFocused"],[114,29,1,2675],[114,31,1,2694],[115,0,1,2695,"_emit"],[115,12,1,2695,"_emit"],[115,17,1,2700],[115,18,1,2701,"lastFocusEvent"],[115,32,1,2715],[115,35,1,2716],[115,45,1,2700],[115,47,1,2727,"childPayload"],[115,59,1,2700],[115,60,1,2695],[116,0,1,2742],[116,11,1,2675],[116,17,1,2747],[116,21,1,2750,"eventName"],[116,30,1,2759],[116,35,1,2762],[116,45,1,2747],[116,47,1,2773],[117,0,1,2774,"_emit"],[117,12,1,2774,"_emit"],[117,17,1,2779],[117,18,1,2780,"lastFocusEvent"],[117,32,1,2794],[117,35,1,2795],[117,45,1,2779],[117,47,1,2806,"childPayload"],[117,59,1,2779],[117,60,1,2774],[118,0,1,2821],[118,11,1,2747],[118,17,1,2826],[118,21,1,2829,"eventName"],[118,30,1,2838],[118,35,1,2841],[118,43,1,2829],[118,47,1,2851,"previouslylastFocusEvent"],[118,71,1,2875],[118,76,1,2878],[118,86,1,2826],[118,88,1,2889],[119,0,1,2890,"_emit"],[119,12,1,2890,"_emit"],[119,17,1,2895],[119,18,1,2896],[119,26,1,2895],[119,28,1,2905,"childPayload"],[119,40,1,2895],[119,41,1,2890],[120,0,1,2920],[121,0,1,2921],[123,0,1,2921],[123,12,1,2924,"lastFocusEvent"],[123,26,1,2938],[123,31,1,2941],[123,41,1,2921],[123,43,1,2952],[124,0,1,2953],[124,14,1,2956,"eventName"],[124,23,1,2965],[124,28,1,2968],[124,36,1,2956],[124,40,1,2978],[124,41,1,2979,"isChildFocused"],[124,55,1,2956],[124,59,1,2995],[124,60,1,2996,"isTransitioning"],[124,75,1,2953],[124,77,1,3012],[125,0,1,3013,"_emit"],[125,12,1,3013,"_emit"],[125,17,1,3018],[125,18,1,3019,"lastFocusEvent"],[125,32,1,3033],[125,35,1,3034],[125,44,1,3018],[125,46,1,3044,"childPayload"],[125,58,1,3018],[125,59,1,3013],[126,0,1,3059],[126,11,1,2953],[126,17,1,3064],[126,21,1,3067,"eventName"],[126,30,1,3076],[126,35,1,3079],[126,44,1,3064],[126,46,1,3089],[127,0,1,3090,"_emit"],[127,12,1,3090,"_emit"],[127,17,1,3095],[127,18,1,3096,"lastFocusEvent"],[127,32,1,3110],[127,35,1,3111],[127,44,1,3095],[127,46,1,3121,"childPayload"],[127,58,1,3095],[127,59,1,3090],[128,0,1,3136],[128,11,1,3064],[128,17,1,3141],[128,21,1,3144,"eventName"],[128,30,1,3153],[128,35,1,3156],[128,43,1,3144],[128,47,1,3166,"isChildFocused"],[128,61,1,3144],[128,65,1,3182],[128,66,1,3183,"isTransitioning"],[128,81,1,3141],[128,83,1,3199],[129,0,1,3200,"_emit"],[129,12,1,3200,"_emit"],[129,17,1,3205],[129,18,1,3206,"lastFocusEvent"],[129,32,1,3220],[129,35,1,3221],[129,45,1,3205],[129,47,1,3232,"childPayload"],[129,59,1,3205],[129,60,1,3200],[130,0,1,3247],[130,11,1,3141],[130,17,1,3252],[130,21,1,3255,"eventName"],[130,30,1,3264],[130,35,1,3267],[130,43,1,3255],[130,47,1,3277,"isChildFocused"],[130,61,1,3255],[130,65,1,3293,"isTransitioning"],[130,80,1,3252],[130,82,1,3309],[131,0,1,3310,"_emit"],[131,12,1,3310,"_emit"],[131,17,1,3315],[131,18,1,3316,"lastFocusEvent"],[131,32,1,3330],[131,35,1,3331],[131,46,1,3315],[131,48,1,3343,"childPayload"],[131,60,1,3315],[131,61,1,3310],[132,0,1,3358],[133,0,1,3359],[135,0,1,3359],[135,12,1,3362,"lastFocusEvent"],[135,26,1,3376],[135,31,1,3379],[135,40,1,3362],[135,44,1,3390],[135,45,1,3391,"newRoute"],[135,53,1,3359],[135,55,1,3400],[136,0,1,3401,"removeAll"],[136,10,1,3401,"removeAll"],[136,19,1,3410],[137,0,1,3414],[138,0,1,3415],[138,7,1,1462],[138,8,1,1444],[139,0,1,3418],[139,5,1,1405],[139,6,1,1381],[140,0,1,3420],[140,11,1,3426],[141,0,1,3427,"addListener"],[141,6,1,3427,"addListener"],[141,17,1,3438],[141,19,1,3439],[141,28,1,3448,"addListener"],[141,39,1,3439],[141,40,1,3460,"eventName"],[141,49,1,3439],[141,51,1,3470,"eventHandler"],[141,63,1,3439],[141,65,1,3483],[142,0,1,3484],[142,12,1,3488,"subscribers"],[142,23,1,3499],[142,26,1,3500,"getChildSubscribers"],[142,45,1,3519],[142,46,1,3520,"eventName"],[142,55,1,3519],[142,56,1,3484],[144,0,1,3531],[144,12,1,3534],[144,13,1,3535,"subscribers"],[144,24,1,3531],[144,26,1,3547],[145,0,1,3548],[145,16,1,3554],[145,20,1,3558,"Error"],[145,25,1,3554],[145,26,1,3564],[145,52,1,3588,"eventName"],[145,61,1,3564],[145,64,1,3598],[145,68,1,3554],[145,69,1,3548],[146,0,1,3605],[148,0,1,3605,"subscribers"],[148,8,1,3605,"subscribers"],[148,19,1,3616],[148,20,1,3617,"add"],[148,23,1,3605],[148,24,1,3621,"eventHandler"],[148,36,1,3605],[150,0,1,3635],[150,12,1,3639,"remove"],[150,18,1,3645],[150,21,1,3646],[150,30,1,3655,"remove"],[150,36,1,3646],[150,39,1,3663],[151,0,1,3664,"subscribers"],[151,10,1,3664,"subscribers"],[151,21,1,3675],[151,22,1,3676,"delete"],[151,28,1,3664],[151,29,1,3683,"eventHandler"],[151,41,1,3664],[152,0,1,3698],[152,9,1,3635],[154,0,1,3699],[154,15,1,3705],[155,0,1,3706,"remove"],[155,10,1,3706,"remove"],[155,16,1,3712],[155,18,1,3713,"remove"],[156,0,1,3705],[156,9,1,3699],[157,0,1,3722],[157,7,1,3426],[158,0,1,3723,"emit"],[158,6,1,3723,"emit"],[158,10,1,3727],[158,12,1,3728],[158,21,1,3737,"emit"],[158,25,1,3728],[158,26,1,3742,"eventName"],[158,35,1,3728],[158,37,1,3752,"payload"],[158,44,1,3728],[158,46,1,3760],[159,0,1,3761],[159,12,1,3764,"eventName"],[159,21,1,3773],[159,26,1,3776],[159,35,1,3761],[159,37,1,3786],[160,0,1,3787,"console"],[160,10,1,3787,"console"],[160,17,1,3794],[160,18,1,3795,"error"],[160,23,1,3787],[160,24,1,3801],[160,86,1,3787],[161,0,1,3865],[162,0,1,3873],[164,0,1,3873,"_emit"],[164,8,1,3873,"_emit"],[164,13,1,3878],[164,14,1,3879,"eventName"],[164,23,1,3878],[164,25,1,3889,"payload"],[164,32,1,3878],[164,33,1,3873],[165,0,1,3899],[166,0,1,3426],[166,5,1,3420],[167,0,1,3902]]},"type":"js/module"}]}